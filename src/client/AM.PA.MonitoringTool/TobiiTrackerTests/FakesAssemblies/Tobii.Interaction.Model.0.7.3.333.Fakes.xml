<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tobii.Interaction.Model.0.7.3.333.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.TobiiInteractionModelDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Tobii.Interaction.Model</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimActivatableParams">
            <summary>Shim type of Tobii.Interaction.Client.ActivatableParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivatableParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimActivatableParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivatableParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivatableParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimActivatableParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams">
            <summary>Shim type of Tobii.Interaction.Client.ActivationFocusChangedEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimActivationFocusChangedEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs">
            <summary>Shim type of Tobii.Interaction.Client.ConnectionStateChangedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.#ctor(Tobii.Interaction.Client.ConnectionStateChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.AllInstances.StateGet">
            <summary>Sets the shim of ConnectionStateChangedEventArgs.get_State()</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.AllInstances.StateSetConnectionState">
            <summary>Sets the shim of ConnectionStateChangedEventArgs.set_State(ConnectionState value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.ConstructorConnectionState">
            <summary>Sets the shim of ConnectionStateChangedEventArgs.ConnectionStateChangedEventArgs(ConnectionState state)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.StateGet">
            <summary>Sets the shim of ConnectionStateChangedEventArgs.get_State()</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimConnectionStateChangedEventArgs.StateSetConnectionState">
            <summary>Sets the shim of ConnectionStateChangedEventArgs.set_State(ConnectionState value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams">
            <summary>Shim type of Tobii.Interaction.Client.EyePositionDataEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimEyePositionDataEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams">
            <summary>Shim type of Tobii.Interaction.Client.FixationDataEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimFixationDataEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimFixationDataParams">
            <summary>Shim type of Tobii.Interaction.Client.FixationDataParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimFixationDataParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimFixationDataParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimFixationDataParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams">
            <summary>Shim type of Tobii.Interaction.Client.GazeAwareEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimGazeAwareEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams">
            <summary>Shim type of Tobii.Interaction.Client.GazeAwareParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimGazeAwareParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams">
            <summary>Shim type of Tobii.Interaction.Client.GazePointDataEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimGazePointDataEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams">
            <summary>Shim type of Tobii.Interaction.Client.GazePointDataParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimGazePointDataParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams">
            <summary>Shim type of Tobii.Interaction.Client.HeadPoseDataEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimHeadPoseDataEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimInteractionApiException">
            <summary>Shim type of Tobii.Interaction.Client.InteractionApiException</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.#ctor(Tobii.Interaction.Client.InteractionApiException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.AllInstances.ResultGet">
            <summary>Sets the shim of InteractionApiException.get_Result()</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.AllInstances.ResultSetResultCode">
            <summary>Sets the shim of InteractionApiException.set_Result(ResultCode value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.ConstructorResultCodeString">
            <summary>Sets the shim of InteractionApiException.InteractionApiException(ResultCode result, String message)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.ResultGet">
            <summary>Sets the shim of InteractionApiException.get_Result()</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteractionApiException.ResultSetResultCode">
            <summary>Sets the shim of InteractionApiException.set_Result(ResultCode value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimInteropHelper">
            <summary>Shim type of Tobii.Interaction.Client.InteropHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteropHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteropHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimInteropHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteropHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteropHelper.ThrowExceptionResultCode">
            <summary>Sets the shim of InteropHelper.ThrowException(ResultCode result)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteropHelper.ValidateResultCode">
            <summary>Sets the shim of InteropHelper.Validate(ResultCode result)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteropHelper.ValidateResultCodeResultCode">
            <summary>Sets the shim of InteropHelper.Validate(ResultCode result, ResultCode falseResult)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimInteropHelper.ValidateResultCodeResultCodeArray">
            <summary>Sets the shim of InteropHelper.Validate(ResultCode result, ResultCode[] falseResults)</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimLoggingModel">
            <summary>Shim type of Tobii.Interaction.Client.LoggingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimLoggingModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimLoggingModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimLoggingModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimLoggingModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimLoggingModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams">
            <summary>Shim type of Tobii.Interaction.Client.PannableHandsFreeEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimPannableHandsFreeEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams">
            <summary>Shim type of Tobii.Interaction.Client.PannablePanEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimPannablePanEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableParams">
            <summary>Shim type of Tobii.Interaction.Client.PannableParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimPannableParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams">
            <summary>Shim type of Tobii.Interaction.Client.PannableStepEventParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimPannableStepEventParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimRect">
            <summary>Shim type of Tobii.Interaction.Client.Rect</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimRect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimRect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimRect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimRect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimRect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimSchedulingModel">
            <summary>Shim type of Tobii.Interaction.Client.SchedulingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSchedulingModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimSchedulingModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSchedulingModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSchedulingModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimSchedulingModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimSize2">
            <summary>Shim type of Tobii.Interaction.Client.Size2</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSize2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimSize2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSize2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimSize2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimSize2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimThreadingModel">
            <summary>Shim type of Tobii.Interaction.Client.ThreadingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimThreadingModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimThreadingModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimThreadingModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimThreadingModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimThreadingModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimVec2">
            <summary>Shim type of Tobii.Interaction.Client.Vec2</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVec2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimVec2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVec2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVec2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimVec2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams">
            <summary>Shim type of Tobii.Interaction.Client.VirtualWindowParams</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.ShimVirtualWindowParams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs">
            <summary>Stub type of Tobii.Interaction.Client.ConnectionStateChangedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs.#ctor(Tobii.Interaction.Client.ConnectionState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionStateChangedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubConnectionStateChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.StubILoggingModel">
            <summary>Stub type of Tobii.Interaction.Client.ILoggingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubILoggingModel.#ctor">
            <summary>Initializes a new instance of type StubILoggingModel</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubILoggingModel.Tobii#Interaction#Client#ILoggingModel#Targets">
            <summary>Sets the stub of ILoggingModel.get_Targets()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubILoggingModel.TargetsGet">
            <summary>Sets the stub of ILoggingModel.get_Targets()</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubILoggingModel.Tobii#Interaction#Client#ILoggingModel#Write(Tobii.Interaction.Client.LogLevel,System.String,System.String)">
            <summary>Sets the stub of ILoggingModel.Write(LogLevel level, String scope, String message)</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubILoggingModel.WriteLogLevelStringString">
            <summary>Sets the stub of ILoggingModel.Write(LogLevel level, String scope, String message)</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.StubISchedulingModel">
            <summary>Stub type of Tobii.Interaction.Client.ISchedulingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubISchedulingModel.#ctor">
            <summary>Initializes a new instance of type StubISchedulingModel</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubISchedulingModel.Tobii#Interaction#Client#ISchedulingModel#Mode">
            <summary>Sets the stub of ISchedulingModel.get_Mode()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubISchedulingModel.ModeGet">
            <summary>Sets the stub of ISchedulingModel.get_Mode()</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.StubIThreadingModel">
            <summary>Stub type of Tobii.Interaction.Client.IThreadingModel</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubIThreadingModel.#ctor">
            <summary>Initializes a new instance of type StubIThreadingModel</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubIThreadingModel.CreateThreadThreadWorker">
            <summary>Sets the stub of IThreadingModel.CreateThread(ThreadWorker worker)</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubIThreadingModel.DeleteThreadInt32">
            <summary>Sets the stub of IThreadingModel.DeleteThread(Int32 threadId)</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubIThreadingModel.GetCurrentThreadId">
            <summary>Sets the stub of IThreadingModel.GetCurrentThreadId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubIThreadingModel.JoinThreadInt32">
            <summary>Sets the stub of IThreadingModel.JoinThread(Int32 threadId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubIThreadingModel.Tobii#Interaction#Client#IThreadingModel#CreateThread(Tobii.Interaction.Client.ThreadWorker)">
            <summary>Sets the stub of IThreadingModel.CreateThread(ThreadWorker worker)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubIThreadingModel.Tobii#Interaction#Client#IThreadingModel#DeleteThread(System.Int32)">
            <summary>Sets the stub of IThreadingModel.DeleteThread(Int32 threadId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubIThreadingModel.Tobii#Interaction#Client#IThreadingModel#GetCurrentThreadId">
            <summary>Sets the stub of IThreadingModel.GetCurrentThreadId()</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubIThreadingModel.Tobii#Interaction#Client#IThreadingModel#JoinThread(System.Int32)">
            <summary>Sets the stub of IThreadingModel.JoinThread(Int32 threadId)</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Fakes.StubInteractionApiException">
            <summary>Stub type of Tobii.Interaction.Client.InteractionApiException</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.#ctor(Tobii.Interaction.Framework.ResultCode,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInteractionApiException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInteractionApiException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.InitializeStub">
            <summary>Initializes a new instance of type StubInteractionApiException</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Fakes.StubInteractionApiException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Fakes.StubInteractionApiException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Tobii.Interaction.Client.Fakes.StubInteractionApiException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX">
            <summary>Shim type of Tobii.Interaction.Client.Interop.EyeX</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.#ctor(Tobii.Interaction.Client.Interop.EyeX)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Interop.Fakes.ShimEyeX.Constructor">
            <summary>Sets the shim of EyeX.EyeX()</summary>
        </member>
        <member name="T:Tobii.Interaction.Client.Interop.Fakes.StubEyeX">
            <summary>Stub type of Tobii.Interaction.Client.Interop.EyeX</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.StubEyeX.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Interop.Fakes.StubEyeX.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Client.Interop.Fakes.StubEyeX.InitializeStub">
            <summary>Initializes a new instance of type StubEyeX</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Interop.Fakes.StubEyeX.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Client.Interop.Fakes.StubEyeX.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens">
            <summary>Shim type of Tobii.Interaction.Framework.ConnectionTokens</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.#ctor(Tobii.Interaction.Framework.ConnectionTokens)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimConnectionTokens.Constructor">
            <summary>Sets the shim of ConnectionTokens.ConnectionTokens()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean">
            <summary>Shim type of Tobii.Interaction.Framework.EyeXBoolean</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimEyeXBoolean.ImplicitOpEyeXBooleanBoolean">
            <summary>Sets the shim of EyeXBoolean.op_Implicit(EyeXBoolean b)</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals">
            <summary>Shim type of Tobii.Interaction.Framework.InternalLiterals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.#ctor(Tobii.Interaction.Framework.InternalLiterals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimInternalLiterals.Constructor">
            <summary>Sets the shim of InternalLiterals.InternalLiterals()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimLiteralList">
            <summary>Shim type of Tobii.Interaction.Framework.LiteralList</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiteralList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiteralList.#ctor(Tobii.Interaction.Framework.LiteralList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimLiteralList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiteralList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiteralList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimLiteralList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimLiteralList.Constructor">
            <summary>Sets the shim of LiteralList.LiteralList()</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimLiteralList.StaticConstructor">
            <summary>Sets the shim of LiteralList.LiteralList()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimLiterals">
            <summary>Shim type of Tobii.Interaction.Framework.Literals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiterals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiterals.#ctor(Tobii.Interaction.Framework.Literals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimLiterals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiterals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimLiterals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimLiterals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimLiterals.Constructor">
            <summary>Sets the shim of Literals.Literals()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimMaskWeights">
            <summary>Shim type of Tobii.Interaction.Framework.MaskWeights</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.#ctor(Tobii.Interaction.Framework.MaskWeights)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimMaskWeights.Constructor">
            <summary>Sets the shim of MaskWeights.MaskWeights()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals">
            <summary>Shim type of Tobii.Interaction.Framework.SharedLiterals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.#ctor(Tobii.Interaction.Framework.SharedLiterals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimSharedLiterals.Constructor">
            <summary>Sets the shim of SharedLiterals.SharedLiterals()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimStatePaths">
            <summary>Shim type of Tobii.Interaction.Framework.StatePaths</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimStatePaths.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimStatePaths.#ctor(Tobii.Interaction.Framework.StatePaths)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.ShimStatePaths.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimStatePaths.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.ShimStatePaths.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimStatePaths.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.ShimStatePaths.Constructor">
            <summary>Sets the shim of StatePaths.StatePaths()</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubConnectionTokens">
            <summary>Stub type of Tobii.Interaction.Framework.ConnectionTokens</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubConnectionTokens.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubConnectionTokens.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubConnectionTokens.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionTokens</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubConnectionTokens.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubConnectionTokens.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubInternalLiterals">
            <summary>Stub type of Tobii.Interaction.Framework.InternalLiterals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubInternalLiterals.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubInternalLiterals.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubInternalLiterals.InitializeStub">
            <summary>Initializes a new instance of type StubInternalLiterals</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubInternalLiterals.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubInternalLiterals.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubLiteralList">
            <summary>Stub type of Tobii.Interaction.Framework.LiteralList</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubLiteralList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiteralList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubLiteralList.InitializeStub">
            <summary>Initializes a new instance of type StubLiteralList</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiteralList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiteralList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubLiterals">
            <summary>Stub type of Tobii.Interaction.Framework.Literals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubLiterals.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiterals.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubLiterals.InitializeStub">
            <summary>Initializes a new instance of type StubLiterals</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiterals.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubLiterals.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubMaskWeights">
            <summary>Stub type of Tobii.Interaction.Framework.MaskWeights</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubMaskWeights.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubMaskWeights.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubMaskWeights.InitializeStub">
            <summary>Initializes a new instance of type StubMaskWeights</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubMaskWeights.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubMaskWeights.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubSharedLiterals">
            <summary>Stub type of Tobii.Interaction.Framework.SharedLiterals</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubSharedLiterals.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubSharedLiterals.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubSharedLiterals.InitializeStub">
            <summary>Initializes a new instance of type StubSharedLiterals</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubSharedLiterals.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubSharedLiterals.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Framework.Fakes.StubStatePaths">
            <summary>Stub type of Tobii.Interaction.Framework.StatePaths</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubStatePaths.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubStatePaths.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Framework.Fakes.StubStatePaths.InitializeStub">
            <summary>Initializes a new instance of type StubStatePaths</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubStatePaths.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Framework.Fakes.StubStatePaths.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimAsyncData">
            <summary>Shim type of Tobii.Interaction.Model.AsyncData</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.#ctor(Tobii.Interaction.Model.AsyncData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimAsyncData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.AllInstances.DataGet">
            <summary>Sets the shim of AsyncData.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of AsyncData.get_ErrorMessage()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.AllInstances.GetDataAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.AsyncData,``0})">
            <summary>Sets the shim of AsyncData.GetDataAs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.AllInstances.TryGetResultCodeResultCodeOut">
            <summary>Sets the shim of AsyncData.TryGetResultCode(ResultCode&amp; resultCode)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.Bind(Tobii.Interaction.Model.IAsyncData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.ConstructorContextIntPtr">
            <summary>Sets the shim of AsyncData.AsyncData(Context context, IntPtr hAsyncData)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.DataGet">
            <summary>Sets the shim of AsyncData.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.ErrorMessageGet">
            <summary>Sets the shim of AsyncData.get_ErrorMessage()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimAsyncData.GetDataAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of AsyncData.GetDataAs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimAsyncData.TryGetResultCodeResultCodeOut">
            <summary>Sets the shim of AsyncData.TryGetResultCode(ResultCode&amp; resultCode)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimBehavior">
            <summary>Shim type of Tobii.Interaction.Model.Behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.#ctor(Tobii.Interaction.Model.Behavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of Behavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.DataGet">
            <summary>Sets the shim of Behavior.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetActivatableParamsActivatableParamsRef">
            <summary>Sets the shim of Behavior.SetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetFixationDataParamsFixationDataParamsRef">
            <summary>Sets the shim of Behavior.SetFixationDataParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetGazeAwareParamsGazeAwareParamsRef">
            <summary>Sets the shim of Behavior.SetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetGazePointDataParamsGazePointDataParamsRef">
            <summary>Sets the shim of Behavior.SetGazePointDataParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetPannableParamsPannableParamsRef">
            <summary>Sets the shim of Behavior.SetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.SetVirtualWindowBehaviorParamsVirtualWindowParamsRef">
            <summary>Sets the shim of Behavior.SetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetActivatableEventTypeActivatableEventTypeOut">
            <summary>Sets the shim of Behavior.TryGetActivatableEventType(ActivatableEventType&amp; eventType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetActivatableParamsActivatableParamsOut">
            <summary>Sets the shim of Behavior.TryGetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetActivationFocusChangedEventParamsActivationFocusChangedEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetActivationFocusChangedEventParams(ActivationFocusChangedEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetBehaviorEventTimestampDoubleOut">
            <summary>Sets the shim of Behavior.TryGetBehaviorEventTimestamp(Double&amp; timestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetEyePositionDataEventParamsEyePositionDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetEyePositionDataEventParams(EyePositionDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetFixationDataEventParamsFixationDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetFixationDataEventParams(FixationDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetFixationParamsFixationDataParamsOut">
            <summary>Sets the shim of Behavior.TryGetFixationParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetGazeAwareEventParamsGazeAwareEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazeAwareEventParams(GazeAwareEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetGazeAwareParamsGazeAwareParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetGazePointDataEventParamsGazePointDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazePointDataEventParams(GazePointDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetGazePointParamsGazePointDataParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazePointParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetHeadPositionBehaviorParamsHeadPoseDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetHeadPositionBehaviorParams(HeadPoseDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetPannableEventTypePannableEventTypeOut">
            <summary>Sets the shim of Behavior.TryGetPannableEventType(PannableEventType&amp; eventType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetPannableHandsFreeEventParamsPannableHandsFreeEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableHandsFreeEventParams(PannableHandsFreeEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetPannablePanEventParamsPannablePanEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannablePanEventParams(PannablePanEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetPannableParamsPannableParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetPannableStepEventParamsPannableStepEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableStepEventParams(PannableStepEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.AllInstances.TryGetVirtualWindowBehaviorParamsVirtualWindowParamsOut">
            <summary>Sets the shim of Behavior.TryGetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.BehaviorTypeGet">
            <summary>Sets the shim of Behavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.Bind(Tobii.Interaction.Model.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBehavior.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.ConstructorContextIntPtr">
            <summary>Sets the shim of Behavior.Behavior(Context context, IntPtr hBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.DataGet">
            <summary>Sets the shim of Behavior.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetActivatableParamsActivatableParamsRef">
            <summary>Sets the shim of Behavior.SetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetFixationDataParamsFixationDataParamsRef">
            <summary>Sets the shim of Behavior.SetFixationDataParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetGazeAwareParamsGazeAwareParamsRef">
            <summary>Sets the shim of Behavior.SetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetGazePointDataParamsGazePointDataParamsRef">
            <summary>Sets the shim of Behavior.SetGazePointDataParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetPannableParamsPannableParamsRef">
            <summary>Sets the shim of Behavior.SetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.SetVirtualWindowBehaviorParamsVirtualWindowParamsRef">
            <summary>Sets the shim of Behavior.SetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetActivatableEventTypeActivatableEventTypeOut">
            <summary>Sets the shim of Behavior.TryGetActivatableEventType(ActivatableEventType&amp; eventType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetActivatableParamsActivatableParamsOut">
            <summary>Sets the shim of Behavior.TryGetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetActivationFocusChangedEventParamsActivationFocusChangedEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetActivationFocusChangedEventParams(ActivationFocusChangedEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetBehaviorEventTimestampDoubleOut">
            <summary>Sets the shim of Behavior.TryGetBehaviorEventTimestamp(Double&amp; timestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetEyePositionDataEventParamsEyePositionDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetEyePositionDataEventParams(EyePositionDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetFixationDataEventParamsFixationDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetFixationDataEventParams(FixationDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetFixationParamsFixationDataParamsOut">
            <summary>Sets the shim of Behavior.TryGetFixationParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetGazeAwareEventParamsGazeAwareEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazeAwareEventParams(GazeAwareEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetGazeAwareParamsGazeAwareParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetGazePointDataEventParamsGazePointDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazePointDataEventParams(GazePointDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetGazePointParamsGazePointDataParamsOut">
            <summary>Sets the shim of Behavior.TryGetGazePointParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetHeadPositionBehaviorParamsHeadPoseDataEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetHeadPositionBehaviorParams(HeadPoseDataEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetPannableEventTypePannableEventTypeOut">
            <summary>Sets the shim of Behavior.TryGetPannableEventType(PannableEventType&amp; eventType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetPannableHandsFreeEventParamsPannableHandsFreeEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableHandsFreeEventParams(PannableHandsFreeEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetPannablePanEventParamsPannablePanEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannablePanEventParams(PannablePanEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetPannableParamsPannableParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetPannableStepEventParamsPannableStepEventParamsOut">
            <summary>Sets the shim of Behavior.TryGetPannableStepEventParams(PannableStepEventParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBehavior.TryGetVirtualWindowBehaviorParamsVirtualWindowParamsOut">
            <summary>Sets the shim of Behavior.TryGetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimBounds">
            <summary>Shim type of Tobii.Interaction.Model.Bounds</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBounds.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBounds.#ctor(Tobii.Interaction.Model.Bounds)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.BoundsIntersectDoubleDoubleDoubleDoubleInt32Out">
            <summary>Sets the shim of Bounds.BoundsIntersect(Double x, Double y, Double width, Double height, Int32&amp; intersects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.BoundsIntersectRectRectInt32Out">
            <summary>Sets the shim of Bounds.BoundsIntersectRect(Rect rect2, Int32&amp; intersects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.BoundsTypeGet">
            <summary>Sets the shim of Bounds.get_BoundsType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.DataGet">
            <summary>Sets the shim of Bounds.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.DataSetInteractionObject">
            <summary>Sets the shim of Bounds.set_Data(InteractionObject value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.SetRectangularDataDoubleDoubleDoubleDouble">
            <summary>Sets the shim of Bounds.SetRectangularData(Double x, Double y, Double width, Double height)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.SetRectangularDataRect">
            <summary>Sets the shim of Bounds.SetRectangularData(Rect rect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.TryGetRectangularDataDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of Bounds.TryGetRectangularData(Double&amp; x, Double&amp; y, Double&amp; width, Double&amp; height)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.AllInstances.TryGetRectangularDataRectOut">
            <summary>Sets the shim of Bounds.TryGetRectangularData(Rect&amp; rect)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBounds.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBounds.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimBounds.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.BoundsIntersectDoubleDoubleDoubleDoubleInt32Out">
            <summary>Sets the shim of Bounds.BoundsIntersect(Double x, Double y, Double width, Double height, Int32&amp; intersects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.BoundsIntersectRectRectInt32Out">
            <summary>Sets the shim of Bounds.BoundsIntersectRect(Rect rect2, Int32&amp; intersects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.BoundsTypeGet">
            <summary>Sets the shim of Bounds.get_BoundsType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.ConstructorContextIntPtr">
            <summary>Sets the shim of Bounds.Bounds(Context context, IntPtr hBounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.DataGet">
            <summary>Sets the shim of Bounds.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.DataSetInteractionObject">
            <summary>Sets the shim of Bounds.set_Data(InteractionObject value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.SetRectangularDataDoubleDoubleDoubleDouble">
            <summary>Sets the shim of Bounds.SetRectangularData(Double x, Double y, Double width, Double height)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.SetRectangularDataRect">
            <summary>Sets the shim of Bounds.SetRectangularData(Rect rect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimBounds.TryGetRectangularDataRectOut">
            <summary>Sets the shim of Bounds.TryGetRectangularData(Rect&amp; rect)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimCommand">
            <summary>Shim type of Tobii.Interaction.Model.Command</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimCommand.#ctor(Tobii.Interaction.Model.Command)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances.CommandTypeGet">
            <summary>Sets the shim of Command.get_CommandType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances.DataGet">
            <summary>Sets the shim of Command.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances.DataSetInteractionObject">
            <summary>Sets the shim of Command.set_Data(InteractionObject value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances.ExecuteAsync">
            <summary>Sets the shim of Command.ExecuteAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances.ExecuteAsyncAsyncDataHandler">
            <summary>Sets the shim of Command.ExecuteAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.AllInstances._ExecuteAsyncb__8_0TaskCompletionSourceOfInteractionObject">
            <summary>Sets the shim of Command.&lt;ExecuteAsync&gt;b__8_0(TaskCompletionSource`1&lt;InteractionObject&gt; source)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimCommand.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.CommandTypeGet">
            <summary>Sets the shim of Command.get_CommandType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.ConstructorContextIntPtr">
            <summary>Sets the shim of Command.Command(Context context, IntPtr hCommand)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.CreateContextCommandType">
            <summary>Sets the shim of Command.Create(Context context, CommandType commandType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.DataGet">
            <summary>Sets the shim of Command.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.DataSetInteractionObject">
            <summary>Sets the shim of Command.set_Data(InteractionObject value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.ExecuteAsync">
            <summary>Sets the shim of Command.ExecuteAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand.ExecuteAsyncAsyncDataHandler">
            <summary>Sets the shim of Command.ExecuteAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimCommand._ExecuteAsyncb__8_0TaskCompletionSourceOfInteractionObject">
            <summary>Sets the shim of Command.&lt;ExecuteAsync&gt;b__8_0(TaskCompletionSource`1&lt;InteractionObject&gt; source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimContext">
            <summary>Shim type of Tobii.Interaction.Model.Context</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.#ctor(Tobii.Interaction.Model.Context)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.ConnectionStateChangedAddEventHandlerOfConnectionStateChangedEventArgs">
            <summary>Sets the shim of Context.add_ConnectionStateChanged(EventHandler`1&lt;ConnectionStateChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.ConnectionStateChangedRemoveEventHandlerOfConnectionStateChangedEventArgs">
            <summary>Sets the shim of Context.remove_ConnectionStateChanged(EventHandler`1&lt;ConnectionStateChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.ConnectionStateGet">
            <summary>Sets the shim of Context.get_ConnectionState()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateActionCommandActionType">
            <summary>Sets the shim of Context.CreateActionCommand(ActionType actionType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateCommandCommandType">
            <summary>Sets the shim of Context.CreateCommand(CommandType commandType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateInteractionObjectIntPtr">
            <summary>Sets the shim of Context.CreateInteractionObject(IntPtr hObject)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateInteractionObjectPropertyBag">
            <summary>Sets the shim of Context.CreateInteractionObject(PropertyBag sourcePropertyBag)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.CreateProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreatePropertyBagFromObjectObject">
            <summary>Sets the shim of Context.CreatePropertyBagFromObject(Object source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreatePropertyBagPropertyBagType">
            <summary>Sets the shim of Context.CreatePropertyBag(PropertyBagType type)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateSnapshot">
            <summary>Sets the shim of Context.CreateSnapshot()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateSnapshotForQueryQuery">
            <summary>Sets the shim of Context.CreateSnapshotForQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateSnapshotWithQueryBoundsQuery">
            <summary>Sets the shim of Context.CreateSnapshotWithQueryBounds(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateStateBagString">
            <summary>Sets the shim of Context.CreateStateBag(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.CreateWithGlobalInteractorStringInteractorOut">
            <summary>Sets the shim of Context.CreateWithGlobalInteractor(String interactorId, Interactor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.DeleteProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.DeleteProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.DisableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the shim of Context.DisableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.DisableConnection">
            <summary>Sets the shim of Context.DisableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.DontKeepAliveObject">
            <summary>Sets the shim of Context.DontKeepAlive(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.EnableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the shim of Context.EnableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.EnableConnection">
            <summary>Sets the shim of Context.EnableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.GetStateAsyncString">
            <summary>Sets the shim of Context.GetStateAsync(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.GetStateAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.GetStateAsync(String statePath, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.GetStateString">
            <summary>Sets the shim of Context.GetState(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.GetTrackedObjects">
            <summary>Sets the shim of Context.GetTrackedObjects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.KeepAliveObject">
            <summary>Sets the shim of Context.KeepAlive(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.LaunchConfigurationToolConfigurationToolAsyncDataHandler">
            <summary>Sets the shim of Context.LaunchConfigurationTool(ConfigurationTool configurationTool, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.NameGet">
            <summary>Sets the shim of Context.get_Name()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.NameSetString">
            <summary>Sets the shim of Context.set_Name(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.OnConnectionStateChangedConnectionState">
            <summary>Sets the shim of Context.OnConnectionStateChanged(ConnectionState state)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.PerformScheduledJobs">
            <summary>Sets the shim of Context.PerformScheduledJobs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterEventHandlerInteractionEventHandler">
            <summary>Sets the shim of Context.RegisterEventHandler(InteractionEventHandler eventHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterMessageHandlerInternalOf1MessageTypeActionOfM0PropertyBagFuncOfIntPtrM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.Context,Tobii.Interaction.Framework.MessageType,System.Action{``0},Tobii.Interaction.Model.PropertyBag,System.Func{System.IntPtr,``0},System.Int32})">
            <summary>Sets the shim of Context.RegisterMessageHandlerInternal(MessageType messageType, Action`1&lt;!!0&gt; messageHandler, PropertyBag options, Func`2&lt;IntPtr,!!0&gt; factory)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterMessageHandlerMessageTypeMessageHandler">
            <summary>Sets the shim of Context.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterMessageHandlerMessageTypeMessageHandlerPropertyBag">
            <summary>Sets the shim of Context.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler, PropertyBag options)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterNotificationHandlerNotificationHandler">
            <summary>Sets the shim of Context.RegisterNotificationHandler(NotificationHandler notificationHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterQueryHandlerForCurrentProcessQueryHandler">
            <summary>Sets the shim of Context.RegisterQueryHandlerForCurrentProcess(QueryHandler queryHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterQueryHandlerStringQueryHandler">
            <summary>Sets the shim of Context.RegisterQueryHandler(String processId, QueryHandler queryHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterStateChangedHandlerStringAsyncDataHandler">
            <summary>Sets the shim of Context.RegisterStateChangedHandler(String statePath, AsyncDataHandler stateChangedHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RegisterStateObserverString">
            <summary>Sets the shim of Context.RegisterStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of Context.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.RenameProfileAsyncStringStringAsyncDataHandler">
            <summary>Sets the shim of Context.RenameProfileAsync(String oldProfileName, String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.SafeInvokeClientCodeAction">
            <summary>Sets the shim of Context.SafeInvokeClientCode(Action clientCode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.SetCurrentProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.SetCurrentProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.SetProfileCalibrationDataAsyncStringUriStringInt32ByteArrayAsyncDataHandler">
            <summary>Sets the shim of Context.SetProfileCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfDataPoints, Byte[] data, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.SetStateAsyncStringObject">
            <summary>Sets the shim of Context.SetStateAsync(String statePath, Object stateData)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.SetStateAsyncStringObjectAsyncDataHandler">
            <summary>Sets the shim of Context.SetStateAsync(String statePath, Object stateData, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.ShutdownInt32Boolean">
            <summary>Sets the shim of Context.Shutdown(Int32 cleanupTimeout, Boolean logLeakingObjectsInfo)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.UnregisterMessageHandlerInt32">
            <summary>Sets the shim of Context.UnregisterMessageHandler(Int32 ticket)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.UnregisterStateChangedHandlerInt32">
            <summary>Sets the shim of Context.UnregisterStateChangedHandler(Int32 ticket)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances.UnregisterStateObserverString">
            <summary>Sets the shim of Context.UnregisterStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances._RegisterEventHandlerb__27_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterEventHandler&gt;b__27_1(IntPtr hEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances._RegisterNotificationHandlerb__28_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterNotificationHandler&gt;b__28_1(IntPtr hNotification)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances._RegisterQueryHandlerb__25_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterQueryHandler&gt;b__25_1(IntPtr hQuery)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.AllInstances._ctorb__10_0ConnectionStateIntPtr">
            <summary>Sets the shim of Context.&lt;.ctor&gt;b__10_0(ConnectionState state, IntPtr userParam)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.Bind(Tobii.Interaction.Model.IContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ConnectionStateChangedAddEventHandlerOfConnectionStateChangedEventArgs">
            <summary>Sets the shim of Context.add_ConnectionStateChanged(EventHandler`1&lt;ConnectionStateChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ConnectionStateChangedRemoveEventHandlerOfConnectionStateChangedEventArgs">
            <summary>Sets the shim of Context.remove_ConnectionStateChanged(EventHandler`1&lt;ConnectionStateChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ConnectionStateGet">
            <summary>Sets the shim of Context.get_ConnectionState()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ConstructorBoolean">
            <summary>Sets the shim of Context.Context(Boolean trackObjects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateActionCommandActionType">
            <summary>Sets the shim of Context.CreateActionCommand(ActionType actionType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateCommandCommandType">
            <summary>Sets the shim of Context.CreateCommand(CommandType commandType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateContextBoolean">
            <summary>Sets the shim of Context.CreateContext(Boolean trackObjects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateInteractionObjectIntPtr">
            <summary>Sets the shim of Context.CreateInteractionObject(IntPtr hObject)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateInteractionObjectPropertyBag">
            <summary>Sets the shim of Context.CreateInteractionObject(PropertyBag sourcePropertyBag)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.CreateProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreatePropertyBagFromObjectObject">
            <summary>Sets the shim of Context.CreatePropertyBagFromObject(Object source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreatePropertyBagPropertyBagType">
            <summary>Sets the shim of Context.CreatePropertyBag(PropertyBagType type)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateSnapshot">
            <summary>Sets the shim of Context.CreateSnapshot()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateSnapshotForQueryQuery">
            <summary>Sets the shim of Context.CreateSnapshotForQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateSnapshotWithQueryBoundsQuery">
            <summary>Sets the shim of Context.CreateSnapshotWithQueryBounds(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateStateBagString">
            <summary>Sets the shim of Context.CreateStateBag(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.CreateWithGlobalInteractorStringInteractorOut">
            <summary>Sets the shim of Context.CreateWithGlobalInteractor(String interactorId, Interactor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.DeleteProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.DeleteProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.DisableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the shim of Context.DisableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.DisableConnection">
            <summary>Sets the shim of Context.DisableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.DontKeepAliveObject">
            <summary>Sets the shim of Context.DontKeepAlive(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.EnableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the shim of Context.EnableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.EnableConnection">
            <summary>Sets the shim of Context.EnableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.GetStateAsyncString">
            <summary>Sets the shim of Context.GetStateAsync(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.GetStateAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.GetStateAsync(String statePath, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.GetStateString">
            <summary>Sets the shim of Context.GetState(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.GetTrackedObjects">
            <summary>Sets the shim of Context.GetTrackedObjects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.InitializeWrapperTypeLookupTable">
            <summary>Sets the shim of Context.InitializeWrapperTypeLookupTable()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.KeepAliveObject">
            <summary>Sets the shim of Context.KeepAlive(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.LaunchConfigurationToolConfigurationToolAsyncDataHandler">
            <summary>Sets the shim of Context.LaunchConfigurationTool(ConfigurationTool configurationTool, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.NameGet">
            <summary>Sets the shim of Context.get_Name()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.NameSetString">
            <summary>Sets the shim of Context.set_Name(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.OnConnectionStateChangedConnectionState">
            <summary>Sets the shim of Context.OnConnectionStateChanged(ConnectionState state)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.PerformScheduledJobs">
            <summary>Sets the shim of Context.PerformScheduledJobs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterEventHandlerInteractionEventHandler">
            <summary>Sets the shim of Context.RegisterEventHandler(InteractionEventHandler eventHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimContext.RegisterMessageHandlerInternalOf1MessageTypeActionOfM0PropertyBagFuncOfIntPtrM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Framework.MessageType,System.Action{``0},Tobii.Interaction.Model.PropertyBag,System.Func{System.IntPtr,``0},System.Int32})">
            <summary>Sets the shim of Context.RegisterMessageHandlerInternal(MessageType messageType, Action`1&lt;!!0&gt; messageHandler, PropertyBag options, Func`2&lt;IntPtr,!!0&gt; factory)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterMessageHandlerMessageTypeMessageHandler">
            <summary>Sets the shim of Context.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterMessageHandlerMessageTypeMessageHandlerPropertyBag">
            <summary>Sets the shim of Context.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler, PropertyBag options)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterNotificationHandlerNotificationHandler">
            <summary>Sets the shim of Context.RegisterNotificationHandler(NotificationHandler notificationHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterQueryHandlerForCurrentProcessQueryHandler">
            <summary>Sets the shim of Context.RegisterQueryHandlerForCurrentProcess(QueryHandler queryHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterQueryHandlerStringQueryHandler">
            <summary>Sets the shim of Context.RegisterQueryHandler(String processId, QueryHandler queryHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterStateChangedHandlerStringAsyncDataHandler">
            <summary>Sets the shim of Context.RegisterStateChangedHandler(String statePath, AsyncDataHandler stateChangedHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RegisterStateObserverString">
            <summary>Sets the shim of Context.RegisterStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of Context.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.RenameProfileAsyncStringStringAsyncDataHandler">
            <summary>Sets the shim of Context.RenameProfileAsync(String oldProfileName, String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.SafeInvokeClientCodeAction">
            <summary>Sets the shim of Context.SafeInvokeClientCode(Action clientCode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.SetCurrentProfileAsyncStringAsyncDataHandler">
            <summary>Sets the shim of Context.SetCurrentProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.SetProfileCalibrationDataAsyncStringUriStringInt32ByteArrayAsyncDataHandler">
            <summary>Sets the shim of Context.SetProfileCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfDataPoints, Byte[] data, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.SetStateAsyncStringObject">
            <summary>Sets the shim of Context.SetStateAsync(String statePath, Object stateData)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.SetStateAsyncStringObjectAsyncDataHandler">
            <summary>Sets the shim of Context.SetStateAsync(String statePath, Object stateData, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.ShutdownInt32Boolean">
            <summary>Sets the shim of Context.Shutdown(Int32 cleanupTimeout, Boolean logLeakingObjectsInfo)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.StaticConstructor">
            <summary>Sets the shim of Context.Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.UnregisterMessageHandlerInt32">
            <summary>Sets the shim of Context.UnregisterMessageHandler(Int32 ticket)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.UnregisterStateChangedHandlerInt32">
            <summary>Sets the shim of Context.UnregisterStateChangedHandler(Int32 ticket)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext.UnregisterStateObserverString">
            <summary>Sets the shim of Context.UnregisterStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext._RegisterEventHandlerb__27_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterEventHandler&gt;b__27_1(IntPtr hEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext._RegisterNotificationHandlerb__28_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterNotificationHandler&gt;b__28_1(IntPtr hNotification)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext._RegisterQueryHandlerb__25_1IntPtr">
            <summary>Sets the shim of Context.&lt;RegisterQueryHandler&gt;b__25_1(IntPtr hQuery)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimContext._ctorb__10_0ConnectionStateIntPtr">
            <summary>Sets the shim of Context.&lt;.ctor&gt;b__10_0(ConnectionState state, IntPtr userParam)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimDisposableBase">
            <summary>Shim type of Tobii.Interaction.Model.DisposableBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimDisposableBase.#ctor(Tobii.Interaction.Model.DisposableBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances.Dispose">
            <summary>Sets the shim of DisposableBase.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances.DisposeManagedResources">
            <summary>Sets the shim of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances.DisposeNativeResources">
            <summary>Sets the shim of DisposableBase.DisposeNativeResources()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.AllInstances.IsDisposedGet">
            <summary>Sets the shim of DisposableBase.get_IsDisposed()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimDisposableBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimDisposableBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimDisposableBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.Constructor">
            <summary>Sets the shim of DisposableBase.DisposableBase()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.Dispose">
            <summary>Sets the shim of DisposableBase.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.DisposeBoolean">
            <summary>Sets the shim of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.DisposeManagedResources">
            <summary>Sets the shim of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.DisposeNativeResources">
            <summary>Sets the shim of DisposableBase.DisposeNativeResources()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimDisposableBase.IsDisposedGet">
            <summary>Sets the shim of DisposableBase.get_IsDisposed()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimEnvironment">
            <summary>Shim type of Tobii.Interaction.Model.Environment</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimEnvironment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimEnvironment.#ctor(Tobii.Interaction.Model.Environment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimEnvironment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.AllInstances.DisposeNativeResources">
            <summary>Sets the shim of Environment.DisposeNativeResources()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimEnvironment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimEnvironment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimEnvironment.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.ConstructorILoggingModelIThreadingModelISchedulingModel">
            <summary>Sets the shim of Environment.Environment(ILoggingModel loggingModel, IThreadingModel threadingModel, ISchedulingModel schedulingModel)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.DisposeNativeResources">
            <summary>Sets the shim of Environment.DisposeNativeResources()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.GetEyeXAvailability">
            <summary>Sets the shim of Environment.GetEyeXAvailability()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.Initialize">
            <summary>Sets the shim of Environment.Initialize()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeILoggingModelIThreadingModelISchedulingModel">
            <summary>Sets the shim of Environment.Initialize(ILoggingModel loggingModel, IThreadingModel threadingModel, ISchedulingModel schedulingModel)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeLogTarget">
            <summary>Sets the shim of Environment.Initialize(LogTarget logTargets)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeLogTargetIThreadingModel">
            <summary>Sets the shim of Environment.Initialize(LogTarget logTargets, IThreadingModel threadingModel)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeLogTargetSchedulingMode">
            <summary>Sets the shim of Environment.Initialize(LogTarget logTargets, SchedulingMode schedulingMode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeLogWriterHandler">
            <summary>Sets the shim of Environment.Initialize(LogWriterHandler logWriter)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.InitializeSchedulingMode">
            <summary>Sets the shim of Environment.Initialize(SchedulingMode schedulingMode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.IsInitializedGet">
            <summary>Sets the shim of Environment.get_IsInitialized()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimEnvironment.IsRunningOnMonoGet">
            <summary>Sets the shim of Environment.get_IsRunningOnMono()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimHandleWrapper">
            <summary>Shim type of Tobii.Interaction.Model.HandleWrapper</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.#ctor(Tobii.Interaction.Model.HandleWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.AllInstances.GetHandleAsHexString">
            <summary>Sets the shim of HandleWrapper.GetHandleAsHexString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.AllInstances.HandleGet">
            <summary>Sets the shim of HandleWrapper.get_Handle()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.AllInstances.ReleaseHandle">
            <summary>Sets the shim of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.AllInstances.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.ConstructorIntPtr">
            <summary>Sets the shim of HandleWrapper.HandleWrapper(IntPtr handle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.EmptyIfNullSafeHandle">
            <summary>Sets the shim of HandleWrapper.EmptyIfNull(SafeHandle handle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.GetHandleAsHexString">
            <summary>Sets the shim of HandleWrapper.GetHandleAsHexString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.HandleGet">
            <summary>Sets the shim of HandleWrapper.get_Handle()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.ReleaseHandle">
            <summary>Sets the shim of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimHandleWrapper.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionEvent">
            <summary>Shim type of Tobii.Interaction.Model.InteractionEvent</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.#ctor(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.AllInstances.BehaviorsGet">
            <summary>Sets the shim of InteractionEvent.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.AllInstances.InteractorIdGet">
            <summary>Sets the shim of InteractionEvent.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.AllInstances._get_Behaviorsb__4_0IntPtr">
            <summary>Sets the shim of InteractionEvent.&lt;get_Behaviors&gt;b__4_0(IntPtr hBehavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.BehaviorsGet">
            <summary>Sets the shim of InteractionEvent.get_Behaviors()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.ConstructorContextIntPtr">
            <summary>Sets the shim of InteractionEvent.InteractionEvent(Context context, IntPtr hEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent.InteractorIdGet">
            <summary>Sets the shim of InteractionEvent.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionEvent._get_Behaviorsb__4_0IntPtr">
            <summary>Sets the shim of InteractionEvent.&lt;get_Behaviors&gt;b__4_0(IntPtr hBehavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionObject">
            <summary>Shim type of Tobii.Interaction.Model.InteractionObject</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.#ctor(Tobii.Interaction.Model.InteractionObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ContextGet">
            <summary>Sets the shim of InteractionObject.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ContextSetContext">
            <summary>Sets the shim of InteractionObject.set_Context(Context value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.CreatePropertyString">
            <summary>Sets the shim of InteractionObject.CreateProperty(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.GetOrCreatePropertyString">
            <summary>Sets the shim of InteractionObject.GetOrCreateProperty(String name)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.GetPropertyValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.InteractionObject,System.String,``0})">
            <summary>Sets the shim of InteractionObject.GetPropertyValue(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ObjectTypeGet">
            <summary>Sets the shim of InteractionObject.get_ObjectType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ObjectTypeNameGet">
            <summary>Sets the shim of InteractionObject.get_ObjectTypeName()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.PropertiesGet">
            <summary>Sets the shim of InteractionObject.get_Properties()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.PropertyNamesGet">
            <summary>Sets the shim of InteractionObject.get_PropertyNames()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.SetPropertyValueOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tobii.Interaction.Model.InteractionObject,System.String,``0})">
            <summary>Sets the shim of InteractionObject.SetPropertyValue(String name, !!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.ToString01">
            <summary>Sets the shim of InteractionObject.ToString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.TryGetPropertyStringPropertyOut">
            <summary>Sets the shim of InteractionObject.TryGetProperty(String name, Property&amp; property)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances.TryGetPropertyValueOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Tobii.Interaction.Model.InteractionObject,System.String,``0,System.Boolean})">
            <summary>Sets the shim of InteractionObject.TryGetPropertyValue(String name, !!0&amp; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.AllInstances._get_Propertiesb__13_0IntPtr">
            <summary>Sets the shim of InteractionObject.&lt;get_Properties&gt;b__13_0(IntPtr hProperty)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ConstructorContextIntPtrBoolean">
            <summary>Sets the shim of InteractionObject.InteractionObject(Context context, IntPtr handle, Boolean shouldReleaseHandle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ContextGet">
            <summary>Sets the shim of InteractionObject.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ContextSetContext">
            <summary>Sets the shim of InteractionObject.set_Context(Context value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.CreatePropertyString">
            <summary>Sets the shim of InteractionObject.CreateProperty(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.GetOrCreatePropertyString">
            <summary>Sets the shim of InteractionObject.GetOrCreateProperty(String name)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.GetPropertyValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of InteractionObject.GetPropertyValue(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ObjectTypeGet">
            <summary>Sets the shim of InteractionObject.get_ObjectType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ObjectTypeNameGet">
            <summary>Sets the shim of InteractionObject.get_ObjectTypeName()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.PropertiesGet">
            <summary>Sets the shim of InteractionObject.get_Properties()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.PropertyNamesGet">
            <summary>Sets the shim of InteractionObject.get_PropertyNames()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ReleaseNativeObjectIntPtr">
            <summary>Sets the shim of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.SetPropertyValueOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets the shim of InteractionObject.SetPropertyValue(String name, !!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.ToString">
            <summary>Sets the shim of InteractionObject.ToString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject.TryGetPropertyStringPropertyOut">
            <summary>Sets the shim of InteractionObject.TryGetProperty(String name, Property&amp; property)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject.TryGetPropertyValueOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,``0,System.Boolean})">
            <summary>Sets the shim of InteractionObject.TryGetPropertyValue(String name, !!0&amp; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject._get_Propertiesb__13_0IntPtr">
            <summary>Sets the shim of InteractionObject.&lt;get_Properties&gt;b__13_0(IntPtr hProperty)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1">
            <summary>Shim type of Tobii.Interaction.Model.InteractionObject`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.#ctor(Tobii.Interaction.Model.InteractionObject{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractionObject`1.ConstructorContextIntPtrBoolean">
            <summary>Sets the shim of InteractionObject`1.InteractionObject`1(Context context, IntPtr handle, Boolean shouldReleaseHandle)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractor">
            <summary>Shim type of Tobii.Interaction.Model.Interactor</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractor.#ctor(Tobii.Interaction.Model.Interactor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.BehaviorsGet">
            <summary>Sets the shim of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.BoundsGet">
            <summary>Sets the shim of Interactor.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateActivatableBehaviorActivatableParamsRef">
            <summary>Sets the shim of Interactor.CreateActivatableBehavior(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.CreateBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateBoundsBoundsType">
            <summary>Sets the shim of Interactor.CreateBounds(BoundsType boundsType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateFixationDataBehaviorFixationDataParamsRef">
            <summary>Sets the shim of Interactor.CreateFixationDataBehavior(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateGazeAwareBehaviorGazeAwareParamsRef">
            <summary>Sets the shim of Interactor.CreateGazeAwareBehavior(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateGazePointDataBehaviorGazePointDataParamsRef">
            <summary>Sets the shim of Interactor.CreateGazePointDataBehavior(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateMaskMaskTypeInt32Int32ByteArray">
            <summary>Sets the shim of Interactor.CreateMask(MaskType maskType, Int32 columnCount, Int32 rowCount, Byte[] maskData)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreatePannableBehaviorPannableParamsRef">
            <summary>Sets the shim of Interactor.CreatePannableBehavior(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.CreateVirtualWindowBehaviorVirtualWindowParamsRef">
            <summary>Sets the shim of Interactor.CreateVirtualWindowBehavior(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.DeleteBounds">
            <summary>Sets the shim of Interactor.DeleteBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.IdGet">
            <summary>Sets the shim of Interactor.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.IsDeletedGet">
            <summary>Sets the shim of Interactor.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of Interactor.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.IsEnabledGet">
            <summary>Sets the shim of Interactor.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of Interactor.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.MaskBoundsGet">
            <summary>Sets the shim of Interactor.get_MaskBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.MaskBoundsSetNullableOfRect">
            <summary>Sets the shim of Interactor.set_MaskBounds(Nullable`1&lt;Rect&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.MaskGet">
            <summary>Sets the shim of Interactor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.ParentIdGet">
            <summary>Sets the shim of Interactor.get_ParentId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.RemoveBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.RemoveMask">
            <summary>Sets the shim of Interactor.RemoveMask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.SetGazeAwareBehaviorGazeAwareParamsRef">
            <summary>Sets the shim of Interactor.SetGazeAwareBehavior(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.TryGetBehaviorBehaviorTypeBehaviorOut">
            <summary>Sets the shim of Interactor.TryGetBehavior(BehaviorType behaviorType, Behavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.WindowIdGet">
            <summary>Sets the shim of Interactor.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.ZGet">
            <summary>Sets the shim of Interactor.get_Z()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances.ZSetDouble">
            <summary>Sets the shim of Interactor.set_Z(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.AllInstances._get_Behaviorsb__20_0IntPtr">
            <summary>Sets the shim of Interactor.&lt;get_Behaviors&gt;b__20_0(IntPtr hBehavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.BehaviorsGet">
            <summary>Sets the shim of Interactor.get_Behaviors()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimInteractor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.BoundsGet">
            <summary>Sets the shim of Interactor.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.ConstructorContextIntPtr">
            <summary>Sets the shim of Interactor.Interactor(Context context, IntPtr hInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateActivatableBehaviorActivatableParamsRef">
            <summary>Sets the shim of Interactor.CreateActivatableBehavior(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.CreateBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateBoundsBoundsType">
            <summary>Sets the shim of Interactor.CreateBounds(BoundsType boundsType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateContextSnapshotStringStringString">
            <summary>Sets the shim of Interactor.Create(Context context, Snapshot snapshot, String interactorId, String parentId, String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateFixationDataBehaviorFixationDataParamsRef">
            <summary>Sets the shim of Interactor.CreateFixationDataBehavior(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateGazeAwareBehaviorGazeAwareParamsRef">
            <summary>Sets the shim of Interactor.CreateGazeAwareBehavior(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateGazePointDataBehaviorGazePointDataParamsRef">
            <summary>Sets the shim of Interactor.CreateGazePointDataBehavior(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateMaskMaskTypeInt32Int32ByteArray">
            <summary>Sets the shim of Interactor.CreateMask(MaskType maskType, Int32 columnCount, Int32 rowCount, Byte[] maskData)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreatePannableBehaviorPannableParamsRef">
            <summary>Sets the shim of Interactor.CreatePannableBehavior(PannableParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.CreateVirtualWindowBehaviorVirtualWindowParamsRef">
            <summary>Sets the shim of Interactor.CreateVirtualWindowBehavior(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.DeleteBounds">
            <summary>Sets the shim of Interactor.DeleteBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.IdGet">
            <summary>Sets the shim of Interactor.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.IsDeletedGet">
            <summary>Sets the shim of Interactor.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.IsDeletedSetBoolean">
            <summary>Sets the shim of Interactor.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.IsEnabledGet">
            <summary>Sets the shim of Interactor.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.IsEnabledSetBoolean">
            <summary>Sets the shim of Interactor.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.MaskBoundsGet">
            <summary>Sets the shim of Interactor.get_MaskBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.MaskBoundsSetNullableOfRect">
            <summary>Sets the shim of Interactor.set_MaskBounds(Nullable`1&lt;Rect&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.MaskGet">
            <summary>Sets the shim of Interactor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.ParentIdGet">
            <summary>Sets the shim of Interactor.get_ParentId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.RemoveMask">
            <summary>Sets the shim of Interactor.RemoveMask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.SetGazeAwareBehaviorGazeAwareParamsRef">
            <summary>Sets the shim of Interactor.SetGazeAwareBehavior(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.TryGetBehaviorBehaviorTypeBehaviorOut">
            <summary>Sets the shim of Interactor.TryGetBehavior(BehaviorType behaviorType, Behavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.WindowIdGet">
            <summary>Sets the shim of Interactor.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.ZGet">
            <summary>Sets the shim of Interactor.get_Z()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor.ZSetDouble">
            <summary>Sets the shim of Interactor.set_Z(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimInteractor._get_Behaviorsb__20_0IntPtr">
            <summary>Sets the shim of Interactor.&lt;get_Behaviors&gt;b__20_0(IntPtr hBehavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimMask">
            <summary>Shim type of Tobii.Interaction.Model.Mask</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimMask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimMask.#ctor(Tobii.Interaction.Model.Mask)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimMask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.AllInstances.ColumnCountGet">
            <summary>Sets the shim of Mask.get_ColumnCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.AllInstances.DataGet">
            <summary>Sets the shim of Mask.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.AllInstances.RowCountGet">
            <summary>Sets the shim of Mask.get_RowCount()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimMask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimMask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimMask.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.ColumnCountGet">
            <summary>Sets the shim of Mask.get_ColumnCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.ConstructorContextIntPtr">
            <summary>Sets the shim of Mask.Mask(Context context, IntPtr hInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.DataGet">
            <summary>Sets the shim of Mask.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimMask.RowCountGet">
            <summary>Sets the shim of Mask.get_RowCount()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimNotification">
            <summary>Shim type of Tobii.Interaction.Model.Notification</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimNotification.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimNotification.#ctor(Tobii.Interaction.Model.Notification)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimNotification.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.AllInstances.DataGet">
            <summary>Sets the shim of Notification.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.AllInstances.NotificationTypeGet">
            <summary>Sets the shim of Notification.get_NotificationType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimNotification.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimNotification.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimNotification.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.ConstructorContextIntPtr">
            <summary>Sets the shim of Notification.Notification(Context context, IntPtr hNotification)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.DataGet">
            <summary>Sets the shim of Notification.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimNotification.NotificationTypeGet">
            <summary>Sets the shim of Notification.get_NotificationType()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimProperty">
            <summary>Shim type of Tobii.Interaction.Model.Property</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.#ctor(Tobii.Interaction.Model.Property)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.ContextGet">
            <summary>Sets the shim of Property.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.ContextSetContext">
            <summary>Sets the shim of Property.set_Context(Context value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.FlagsGet">
            <summary>Sets the shim of Property.get_Flags()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.GetValue">
            <summary>Sets the shim of Property.GetValue()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.GetValueAsEnumerableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.Property,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Property.GetValueAsEnumerable()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.GetValueAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.Property,``0})">
            <summary>Sets the shim of Property.GetValueAs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.GetValueAsType">
            <summary>Sets the shim of Property.GetValueAs(Type valueType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.IsManuallyClonedGet">
            <summary>Sets the shim of Property.get_IsManuallyCloned()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.NameGet">
            <summary>Sets the shim of Property.get_Name()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.SetValueObject">
            <summary>Sets the shim of Property.SetValue(Object value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.ValueGet">
            <summary>Sets the shim of Property.get_Value()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.ValueSetObject">
            <summary>Sets the shim of Property.set_Value(Object value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.AllInstances.ValueTypeGet">
            <summary>Sets the shim of Property.get_ValueType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ConstructorContextIntPtr">
            <summary>Sets the shim of Property.Property(Context context, IntPtr hProperty)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ContextGet">
            <summary>Sets the shim of Property.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ContextSetContext">
            <summary>Sets the shim of Property.set_Context(Context value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.FlagsGet">
            <summary>Sets the shim of Property.get_Flags()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.GetValue">
            <summary>Sets the shim of Property.GetValue()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.GetValueAsEnumerableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Property.GetValueAsEnumerable()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimProperty.GetValueAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of Property.GetValueAs()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.GetValueAsType">
            <summary>Sets the shim of Property.GetValueAs(Type valueType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.IsManuallyClonedGet">
            <summary>Sets the shim of Property.get_IsManuallyCloned()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.NameGet">
            <summary>Sets the shim of Property.get_Name()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.SetValueObject">
            <summary>Sets the shim of Property.SetValue(Object value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ValueGet">
            <summary>Sets the shim of Property.get_Value()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ValueSetObject">
            <summary>Sets the shim of Property.set_Value(Object value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimProperty.ValueTypeGet">
            <summary>Sets the shim of Property.get_ValueType()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimPropertyBag">
            <summary>Shim type of Tobii.Interaction.Model.PropertyBag</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimPropertyBag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimPropertyBag.#ctor(Tobii.Interaction.Model.PropertyBag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimPropertyBag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.AllInstances.PopulateObject">
            <summary>Sets the shim of PropertyBag.Populate(Object source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.AllInstances.PopulateObjectObject">
            <summary>Sets the shim of PropertyBag.PopulateObject(Object target)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.AllInstances.PropertyBagTypeGet">
            <summary>Sets the shim of PropertyBag.get_PropertyBagType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimPropertyBag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimPropertyBag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimPropertyBag.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.ConstructorContextIntPtr">
            <summary>Sets the shim of PropertyBag.PropertyBag(Context context, IntPtr hPropertyBag)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.PopulateObject">
            <summary>Sets the shim of PropertyBag.Populate(Object source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.PopulateObjectObject">
            <summary>Sets the shim of PropertyBag.PopulateObject(Object target)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimPropertyBag.PropertyBagTypeGet">
            <summary>Sets the shim of PropertyBag.get_PropertyBagType()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimQuery">
            <summary>Shim type of Tobii.Interaction.Model.Query</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimQuery.#ctor(Tobii.Interaction.Model.Query)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.AllInstances.BoundsGet">
            <summary>Sets the shim of Query.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.AllInstances.GetBoundsRect">
            <summary>Sets the shim of Query.GetBoundsRect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.AllInstances.GetCachedWindowIds">
            <summary>Sets the shim of Query.GetCachedWindowIds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.AllInstances.WindowIdsGet">
            <summary>Sets the shim of Query.get_WindowIds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimQuery.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.BoundsGet">
            <summary>Sets the shim of Query.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.ConstructorContextIntPtr">
            <summary>Sets the shim of Query.Query(Context context, IntPtr hQuery)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.GetBoundsRect">
            <summary>Sets the shim of Query.GetBoundsRect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.GetCachedWindowIds">
            <summary>Sets the shim of Query.GetCachedWindowIds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimQuery.WindowIdsGet">
            <summary>Sets the shim of Query.get_WindowIds()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimSnapshot">
            <summary>Shim type of Tobii.Interaction.Model.Snapshot</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimSnapshot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimSnapshot.#ctor(Tobii.Interaction.Model.Snapshot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AddWindowIdString">
            <summary>Sets the shim of Snapshot.AddWindowId(String windowId)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.AddWindowIdString">
            <summary>Sets the shim of Snapshot.AddWindowId(String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.BoundsGet">
            <summary>Sets the shim of Snapshot.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CommitAsync">
            <summary>Sets the shim of Snapshot.CommitAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CommitAsyncAsyncDataHandler">
            <summary>Sets the shim of Snapshot.CommitAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CreateBoundsBoundsType">
            <summary>Sets the shim of Snapshot.CreateBounds(BoundsType boundsType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CreateFreeFloatingVirtualWindowRectStringBoolean">
            <summary>Sets the shim of Snapshot.CreateFreeFloatingVirtualWindow(Rect bounds, String id, Boolean nonoccluding)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CreateInteractorStringStringString">
            <summary>Sets the shim of Snapshot.CreateInteractor(String interactorId, String parentId, String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.CreateZLinkedVirtualWindowRectStringStringBoolean">
            <summary>Sets the shim of Snapshot.CreateZLinkedVirtualWindow(Rect bounds, String id, String zlinkedWindowId, Boolean nonoccluding)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.DeleteBounds">
            <summary>Sets the shim of Snapshot.DeleteBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.InteractorsGet">
            <summary>Sets the shim of Snapshot.get_Interactors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.RemoveInteractorString">
            <summary>Sets the shim of Snapshot.RemoveInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances.WindowIdsGet">
            <summary>Sets the shim of Snapshot.get_WindowIds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances._CommitAsyncb__20_0TaskCompletionSourceOfInteractionObject">
            <summary>Sets the shim of Snapshot.&lt;CommitAsync&gt;b__20_0(TaskCompletionSource`1&lt;InteractionObject&gt; source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.AllInstances._get_Interactorsb__10_0IntPtr">
            <summary>Sets the shim of Snapshot.&lt;get_Interactors&gt;b__10_0(IntPtr hInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimSnapshot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimSnapshot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimSnapshot.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.BoundsGet">
            <summary>Sets the shim of Snapshot.get_Bounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CommitAsync">
            <summary>Sets the shim of Snapshot.CommitAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CommitAsyncAsyncDataHandler">
            <summary>Sets the shim of Snapshot.CommitAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.ConstructorContextIntPtr">
            <summary>Sets the shim of Snapshot.Snapshot(Context context, IntPtr hSnapshot)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateBoundsBoundsType">
            <summary>Sets the shim of Snapshot.CreateBounds(BoundsType boundsType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateContext">
            <summary>Sets the shim of Snapshot.Create(Context context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateForQueryQuery">
            <summary>Sets the shim of Snapshot.CreateForQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateFreeFloatingVirtualWindowRectStringBoolean">
            <summary>Sets the shim of Snapshot.CreateFreeFloatingVirtualWindow(Rect bounds, String id, Boolean nonoccluding)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateInteractorStringStringString">
            <summary>Sets the shim of Snapshot.CreateInteractor(String interactorId, String parentId, String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateWithGlobalInteractorContextStringInteractorOut">
            <summary>Sets the shim of Snapshot.CreateWithGlobalInteractor(Context context, String interactorId, Interactor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateWithQueryBoundsQuery">
            <summary>Sets the shim of Snapshot.CreateWithQueryBounds(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.CreateZLinkedVirtualWindowRectStringStringBoolean">
            <summary>Sets the shim of Snapshot.CreateZLinkedVirtualWindow(Rect bounds, String id, String zlinkedWindowId, Boolean nonoccluding)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.DeleteBounds">
            <summary>Sets the shim of Snapshot.DeleteBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.GenerateVirtualWindowIdString">
            <summary>Sets the shim of Snapshot.GenerateVirtualWindowId(String virtualWindowName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.InteractorsGet">
            <summary>Sets the shim of Snapshot.get_Interactors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.RemoveInteractorString">
            <summary>Sets the shim of Snapshot.RemoveInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot.WindowIdsGet">
            <summary>Sets the shim of Snapshot.get_WindowIds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot._CommitAsyncb__20_0TaskCompletionSourceOfInteractionObject">
            <summary>Sets the shim of Snapshot.&lt;CommitAsync&gt;b__20_0(TaskCompletionSource`1&lt;InteractionObject&gt; source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimSnapshot._get_Interactorsb__10_0IntPtr">
            <summary>Sets the shim of Snapshot.&lt;get_Interactors&gt;b__10_0(IntPtr hInteractor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimStateBag">
            <summary>Shim type of Tobii.Interaction.Model.StateBag</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.#ctor(Tobii.Interaction.Model.StateBag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.GetStateValueOrDefaultOf1StringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Model.StateBag,System.String[],``0})">
            <summary>Sets the shim of StateBag.GetStateValueOrDefault(String[] path)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.SetAsyncAsyncDataHandler">
            <summary>Sets the shim of StateBag.SetAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.SetStateValueOf1StringArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tobii.Interaction.Model.StateBag,System.String[],``0})">
            <summary>Sets the shim of StateBag.SetStateValue(String[] path, !!0 value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.SetStateValueOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tobii.Interaction.Model.StateBag,System.String,``0})">
            <summary>Sets the shim of StateBag.SetStateValue(String path, !!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.StatePathGet">
            <summary>Sets the shim of StateBag.get_StatePath()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.TryGetStateValueAsEnumerableOf1StringArrayIEnumerableOfM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Tobii.Interaction.Model.StateBag,System.String[],System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValueAsEnumerable(String[] path, IEnumerable`1&lt;!!0&gt;&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.TryGetStateValueAsEnumerableOf1StringIEnumerableOfM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Tobii.Interaction.Model.StateBag,System.String,System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValueAsEnumerable(String path, IEnumerable`1&lt;!!0&gt;&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.TryGetStateValueOf1StringArrayM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Tobii.Interaction.Model.StateBag,System.String[],``0,System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValue(String[] path, !!0&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.AllInstances.TryGetStateValueOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Tobii.Interaction.Model.StateBag,System.String,``0,System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValue(String path, !!0&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.BuildStatePathStringArray">
            <summary>Sets the shim of StateBag.BuildStatePath(String[] path)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.ConstructorContextIntPtr">
            <summary>Sets the shim of StateBag.StateBag(Context context, IntPtr hStateBag)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.GetStateValueOrDefaultOf1StringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String[],``0})">
            <summary>Sets the shim of StateBag.GetStateValueOrDefault(String[] path)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.SetAsyncAsyncDataHandler">
            <summary>Sets the shim of StateBag.SetAsync(AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.SetStateValueOf1StringArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String[],``0})">
            <summary>Sets the shim of StateBag.SetStateValue(String[] path, !!0 value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.SetStateValueOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets the shim of StateBag.SetStateValue(String path, !!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimStateBag.StatePathGet">
            <summary>Sets the shim of StateBag.get_StatePath()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.TryGetStateValueAsEnumerableOf1StringArrayIEnumerableOfM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String[],System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValueAsEnumerable(String[] path, IEnumerable`1&lt;!!0&gt;&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.TryGetStateValueAsEnumerableOf1StringIEnumerableOfM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValueAsEnumerable(String path, IEnumerable`1&lt;!!0&gt;&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.TryGetStateValueOf1StringArrayM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String[],``0,System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValue(String[] path, !!0&amp; value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimStateBag.TryGetStateValueOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,``0,System.Boolean})">
            <summary>Sets the shim of StateBag.TryGetStateValue(String path, !!0&amp; value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimTaskExtensions">
            <summary>Shim type of Tobii.Interaction.Model.TaskExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.CompleteAsyncOperationOf1TaskCompletionSourceOfM0IAsyncData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.TaskCompletionSource{``0},Tobii.Interaction.Model.IAsyncData})">
            <summary>Sets the shim of TaskExtensions.CompleteAsyncOperation(TaskCompletionSource`1&lt;!!0&gt; source, IAsyncData asyncData)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTaskExtensions.WorkOf1TaskCompletionSourceOfM0ActionOfTaskCompletionSourceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.TaskCompletionSource{``0},System.Action{System.Threading.Tasks.TaskCompletionSource{``0}},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of TaskExtensions.Work(TaskCompletionSource`1&lt;!!0&gt; self, Action`1&lt;TaskCompletionSource`1&lt;!!0&gt;&gt; work)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimTempHandle">
            <summary>Shim type of Tobii.Interaction.Model.TempHandle</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTempHandle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTempHandle.#ctor(Tobii.Interaction.Model.TempHandle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.ShimTempHandle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTempHandle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTempHandle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimTempHandle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.ShimTempHandle.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimTempHandle.ConstructorIntPtr">
            <summary>Sets the shim of TempHandle.TempHandle(IntPtr handle)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.ShimTempHandle.Empty">
            <summary>Sets the shim of TempHandle.Empty()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubContext">
            <summary>Stub type of Tobii.Interaction.Model.Context</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubContext.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.InitializeStub">
            <summary>Initializes a new instance of type StubContext</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubContext.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubContext.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.OnConnectionStateChanged(Tobii.Interaction.Client.ConnectionState)">
            <summary>Sets the stub of Context.OnConnectionStateChanged(ConnectionState state)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubContext.OnConnectionStateChangedConnectionState">
            <summary>Sets the stub of Context.OnConnectionStateChanged(ConnectionState state)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubContext.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubContext.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of Context.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubContext.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of Context.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubDisposableBase">
            <summary>Stub type of Tobii.Interaction.Model.DisposableBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubDisposableBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubDisposableBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubDisposableBase.Dispose(System.Boolean)">
            <summary>Sets the stub of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubDisposableBase.DisposeBoolean">
            <summary>Sets the stub of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubDisposableBase.DisposeManagedResources">
            <summary>Sets the stub of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubDisposableBase.DisposeManagedResources01">
            <summary>Sets the stub of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubDisposableBase.DisposeNativeResources">
            <summary>Sets the stub of DisposableBase.DisposeNativeResources()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubDisposableBase.DisposeNativeResources01">
            <summary>Sets the stub of DisposableBase.DisposeNativeResources()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubDisposableBase.InitializeStub">
            <summary>Initializes a new instance of type StubDisposableBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubDisposableBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubDisposableBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubEnvironment">
            <summary>Stub type of Tobii.Interaction.Model.Environment</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubEnvironment.#ctor(Tobii.Interaction.Client.ILoggingModel,Tobii.Interaction.Client.IThreadingModel,Tobii.Interaction.Client.ISchedulingModel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubEnvironment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubEnvironment.Dispose(System.Boolean)">
            <summary>Sets the stub of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubEnvironment.DisposeBoolean">
            <summary>Sets the stub of DisposableBase.Dispose(Boolean isDisposingManagedResources)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubEnvironment.DisposeManagedResources">
            <summary>Sets the stub of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubEnvironment.DisposeManagedResources01">
            <summary>Sets the stub of DisposableBase.DisposeManagedResources()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubEnvironment.DisposeNativeResources">
            <summary>Sets the stub of Environment.DisposeNativeResources()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubEnvironment.DisposeNativeResources01">
            <summary>Sets the stub of Environment.DisposeNativeResources()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubEnvironment.InitializeStub">
            <summary>Initializes a new instance of type StubEnvironment</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubEnvironment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubEnvironment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubHandleWrapper">
            <summary>Stub type of Tobii.Interaction.Model.HandleWrapper</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubHandleWrapper.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubHandleWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubHandleWrapper.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubHandleWrapper.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubHandleWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubHandleWrapper</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubHandleWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubHandleWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubHandleWrapper.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubHandleWrapper.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubHandleWrapper.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubHandleWrapper.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubHandleWrapper.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubHandleWrapper.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubIAsyncData">
            <summary>Stub type of Tobii.Interaction.Model.IAsyncData</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIAsyncData.#ctor">
            <summary>Initializes a new instance of type StubIAsyncData</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIAsyncData.Tobii#Interaction#Model#IAsyncData#Data">
            <summary>Sets the stub of IAsyncData.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIAsyncData.DataGet">
            <summary>Sets the stub of IAsyncData.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIAsyncData.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIAsyncData.Tobii#Interaction#Model#IAsyncData#ErrorMessage">
            <summary>Sets the stub of IAsyncData.get_ErrorMessage()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIAsyncData.ErrorMessageGet">
            <summary>Sets the stub of IAsyncData.get_ErrorMessage()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIAsyncData.GetDataAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetDataAs()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIAsyncData.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIAsyncData.Tobii#Interaction#Model#IAsyncData#GetDataAs``1">
            <summary>Sets the stub of IAsyncData.GetDataAs()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIAsyncData.Tobii#Interaction#Model#IAsyncData#TryGetResultCode(Tobii.Interaction.Framework.ResultCode@)">
            <summary>Sets the stub of IAsyncData.TryGetResultCode(ResultCode&amp; resultCode)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIAsyncData.TryGetResultCodeResultCodeOut">
            <summary>Sets the stub of IAsyncData.TryGetResultCode(ResultCode&amp; resultCode)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubIBehavior">
            <summary>Stub type of Tobii.Interaction.Model.IBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.#ctor">
            <summary>Initializes a new instance of type StubIBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#BehaviorType">
            <summary>Sets the stub of IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.BehaviorTypeGet">
            <summary>Sets the stub of IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#Data">
            <summary>Sets the stub of IBehavior.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.DataGet">
            <summary>Sets the stub of IBehavior.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetActivatableParamsActivatableParamsRef">
            <summary>Sets the stub of IBehavior.SetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetFixationDataParamsFixationDataParamsRef">
            <summary>Sets the stub of IBehavior.SetFixationDataParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetGazeAwareParamsGazeAwareParamsRef">
            <summary>Sets the stub of IBehavior.SetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetGazePointDataParamsGazePointDataParamsRef">
            <summary>Sets the stub of IBehavior.SetGazePointDataParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetPannableParamsPannableParamsRef">
            <summary>Sets the stub of IBehavior.SetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.SetVirtualWindowBehaviorParamsVirtualWindowParamsRef">
            <summary>Sets the stub of IBehavior.SetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetActivatableParams(Tobii.Interaction.Client.ActivatableParams@)">
            <summary>Sets the stub of IBehavior.SetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetFixationDataParams(Tobii.Interaction.Client.FixationDataParams@)">
            <summary>Sets the stub of IBehavior.SetFixationDataParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetGazeAwareParams(Tobii.Interaction.Client.GazeAwareParams@)">
            <summary>Sets the stub of IBehavior.SetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetGazePointDataParams(Tobii.Interaction.Client.GazePointDataParams@)">
            <summary>Sets the stub of IBehavior.SetGazePointDataParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetPannableParams(Tobii.Interaction.Client.PannableParams@)">
            <summary>Sets the stub of IBehavior.SetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#SetVirtualWindowBehaviorParams(Tobii.Interaction.Client.VirtualWindowParams@)">
            <summary>Sets the stub of IBehavior.SetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetActivatableEventType(Tobii.Interaction.Framework.ActivatableEventType@)">
            <summary>Sets the stub of IBehavior.TryGetActivatableEventType(ActivatableEventType&amp; eventType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetActivatableParams(Tobii.Interaction.Client.ActivatableParams@)">
            <summary>Sets the stub of IBehavior.TryGetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetActivationFocusChangedEventParams(Tobii.Interaction.Client.ActivationFocusChangedEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetActivationFocusChangedEventParams(ActivationFocusChangedEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetBehaviorEventTimestamp(System.Double@)">
            <summary>Sets the stub of IBehavior.TryGetBehaviorEventTimestamp(Double&amp; timestamp)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetEyePositionDataEventParams(Tobii.Interaction.Client.EyePositionDataEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetEyePositionDataEventParams(EyePositionDataEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetFixationDataEventParams(Tobii.Interaction.Client.FixationDataEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetFixationDataEventParams(FixationDataEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetFixationParams(Tobii.Interaction.Client.FixationDataParams@)">
            <summary>Sets the stub of IBehavior.TryGetFixationParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetGazeAwareEventParams(Tobii.Interaction.Client.GazeAwareEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetGazeAwareEventParams(GazeAwareEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetGazeAwareParams(Tobii.Interaction.Client.GazeAwareParams@)">
            <summary>Sets the stub of IBehavior.TryGetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetGazePointDataEventParams(Tobii.Interaction.Client.GazePointDataEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetGazePointDataEventParams(GazePointDataEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetGazePointParams(Tobii.Interaction.Client.GazePointDataParams@)">
            <summary>Sets the stub of IBehavior.TryGetGazePointParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetHeadPositionBehaviorParams(Tobii.Interaction.Client.HeadPoseDataEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetHeadPositionBehaviorParams(HeadPoseDataEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetPannableEventType(Tobii.Interaction.Framework.PannableEventType@)">
            <summary>Sets the stub of IBehavior.TryGetPannableEventType(PannableEventType&amp; eventType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetPannableHandsFreeEventParams(Tobii.Interaction.Client.PannableHandsFreeEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetPannableHandsFreeEventParams(PannableHandsFreeEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetPannablePanEventParams(Tobii.Interaction.Client.PannablePanEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetPannablePanEventParams(PannablePanEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetPannableParams(Tobii.Interaction.Client.PannableParams@)">
            <summary>Sets the stub of IBehavior.TryGetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetPannableStepEventParams(Tobii.Interaction.Client.PannableStepEventParams@)">
            <summary>Sets the stub of IBehavior.TryGetPannableStepEventParams(PannableStepEventParams&amp; parameters)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIBehavior.Tobii#Interaction#Model#IBehavior#TryGetVirtualWindowBehaviorParams(Tobii.Interaction.Client.VirtualWindowParams@)">
            <summary>Sets the stub of IBehavior.TryGetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetActivatableEventTypeActivatableEventTypeOut">
            <summary>Sets the stub of IBehavior.TryGetActivatableEventType(ActivatableEventType&amp; eventType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetActivatableParamsActivatableParamsOut">
            <summary>Sets the stub of IBehavior.TryGetActivatableParams(ActivatableParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetActivationFocusChangedEventParamsActivationFocusChangedEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetActivationFocusChangedEventParams(ActivationFocusChangedEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetBehaviorEventTimestampDoubleOut">
            <summary>Sets the stub of IBehavior.TryGetBehaviorEventTimestamp(Double&amp; timestamp)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetEyePositionDataEventParamsEyePositionDataEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetEyePositionDataEventParams(EyePositionDataEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetFixationDataEventParamsFixationDataEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetFixationDataEventParams(FixationDataEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetFixationParamsFixationDataParamsOut">
            <summary>Sets the stub of IBehavior.TryGetFixationParams(FixationDataParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetGazeAwareEventParamsGazeAwareEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetGazeAwareEventParams(GazeAwareEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetGazeAwareParamsGazeAwareParamsOut">
            <summary>Sets the stub of IBehavior.TryGetGazeAwareParams(GazeAwareParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetGazePointDataEventParamsGazePointDataEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetGazePointDataEventParams(GazePointDataEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetGazePointParamsGazePointDataParamsOut">
            <summary>Sets the stub of IBehavior.TryGetGazePointParams(GazePointDataParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetHeadPositionBehaviorParamsHeadPoseDataEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetHeadPositionBehaviorParams(HeadPoseDataEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetPannableEventTypePannableEventTypeOut">
            <summary>Sets the stub of IBehavior.TryGetPannableEventType(PannableEventType&amp; eventType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetPannableHandsFreeEventParamsPannableHandsFreeEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetPannableHandsFreeEventParams(PannableHandsFreeEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetPannablePanEventParamsPannablePanEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetPannablePanEventParams(PannablePanEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetPannableParamsPannableParamsOut">
            <summary>Sets the stub of IBehavior.TryGetPannableParams(PannableParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetPannableStepEventParamsPannableStepEventParamsOut">
            <summary>Sets the stub of IBehavior.TryGetPannableStepEventParams(PannableStepEventParams&amp; parameters)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIBehavior.TryGetVirtualWindowBehaviorParamsVirtualWindowParamsOut">
            <summary>Sets the stub of IBehavior.TryGetVirtualWindowBehaviorParams(VirtualWindowParams&amp; parameters)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubIContext">
            <summary>Stub type of Tobii.Interaction.Model.IContext</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.#ctor">
            <summary>Initializes a new instance of type StubIContext</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIContext.Name as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#ConnectionState">
            <summary>Sets the stub of IContext.get_ConnectionState()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.ConnectionStateGet">
            <summary>Sets the stub of IContext.get_ConnectionState()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateActionCommandActionType">
            <summary>Sets the stub of IContext.CreateActionCommand(ActionType actionType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateCommandCommandType">
            <summary>Sets the stub of IContext.CreateCommand(CommandType commandType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateInteractionObjectIntPtr">
            <summary>Sets the stub of IContext.CreateInteractionObject(IntPtr hObject)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateInteractionObjectPropertyBag">
            <summary>Sets the stub of IContext.CreateInteractionObject(PropertyBag sourcePropertyBag)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateProfileAsyncStringAsyncDataHandler">
            <summary>Sets the stub of IContext.CreateProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreatePropertyBagFromObjectObject">
            <summary>Sets the stub of IContext.CreatePropertyBagFromObject(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreatePropertyBagPropertyBagType">
            <summary>Sets the stub of IContext.CreatePropertyBag(PropertyBagType type)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateSnapshot">
            <summary>Sets the stub of IContext.CreateSnapshot()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateSnapshotForQueryQuery">
            <summary>Sets the stub of IContext.CreateSnapshotForQuery(Query query)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateSnapshotWithQueryBoundsQuery">
            <summary>Sets the stub of IContext.CreateSnapshotWithQueryBounds(Query query)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.CreateStateBagString">
            <summary>Sets the stub of IContext.CreateStateBag(String statePath)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.DeleteProfileAsyncStringAsyncDataHandler">
            <summary>Sets the stub of IContext.DeleteProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.DisableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the stub of IContext.DisableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.DisableConnection">
            <summary>Sets the stub of IContext.DisableConnection()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.EnableBuiltinKeysIntPtrAsyncDataHandler">
            <summary>Sets the stub of IContext.EnableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.EnableConnection">
            <summary>Sets the stub of IContext.EnableConnection()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.GetStateAsyncString">
            <summary>Sets the stub of IContext.GetStateAsync(String statePath)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.GetStateAsyncStringAsyncDataHandler">
            <summary>Sets the stub of IContext.GetStateAsync(String statePath, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.GetStateString">
            <summary>Sets the stub of IContext.GetState(String statePath)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.GetTrackedObjects">
            <summary>Sets the stub of IContext.GetTrackedObjects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#Handle">
            <summary>Sets the stub of IContext.get_Handle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.HandleGet">
            <summary>Sets the stub of IContext.get_Handle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.LaunchConfigurationToolConfigurationToolAsyncDataHandler">
            <summary>Sets the stub of IContext.LaunchConfigurationTool(ConfigurationTool configurationTool, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#Name">
            <summary>Sets the stub of IContext.get_Name()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.NameGet">
            <summary>Sets the stub of IContext.get_Name()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.NameSetString">
            <summary>Sets the stub of IContext.set_Name(String value)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.PerformScheduledJobs">
            <summary>Sets the stub of IContext.PerformScheduledJobs()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterEventHandlerInteractionEventHandler">
            <summary>Sets the stub of IContext.RegisterEventHandler(InteractionEventHandler eventHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterMessageHandlerMessageTypeMessageHandler">
            <summary>Sets the stub of IContext.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterMessageHandlerMessageTypeMessageHandlerPropertyBag">
            <summary>Sets the stub of IContext.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler, PropertyBag options)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterNotificationHandlerNotificationHandler">
            <summary>Sets the stub of IContext.RegisterNotificationHandler(NotificationHandler notificationHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterQueryHandlerForCurrentProcessQueryHandler">
            <summary>Sets the stub of IContext.RegisterQueryHandlerForCurrentProcess(QueryHandler queryHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterQueryHandlerStringQueryHandler">
            <summary>Sets the stub of IContext.RegisterQueryHandler(String processId, QueryHandler queryHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterStateChangedHandlerStringAsyncDataHandler">
            <summary>Sets the stub of IContext.RegisterStateChangedHandler(String statePath, AsyncDataHandler stateChangedHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RegisterStateObserverString">
            <summary>Sets the stub of IContext.RegisterStateObserver(String statePath)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.RenameProfileAsyncStringStringAsyncDataHandler">
            <summary>Sets the stub of IContext.RenameProfileAsync(String oldProfileName, String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.SetCurrentProfileAsyncStringAsyncDataHandler">
            <summary>Sets the stub of IContext.SetCurrentProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.SetProfileCalibrationDataAsyncStringUriStringInt32ByteArrayAsyncDataHandler">
            <summary>Sets the stub of IContext.SetProfileCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfDataPoints, Byte[] data, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.SetStateAsyncStringObject">
            <summary>Sets the stub of IContext.SetStateAsync(String statePath, Object stateData)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.SetStateAsyncStringObjectAsyncDataHandler">
            <summary>Sets the stub of IContext.SetStateAsync(String statePath, Object stateData, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.ShutdownInt32Boolean">
            <summary>Sets the stub of IContext.Shutdown(Int32 cleanupTimeout, Boolean logLeakingObjectsInfo)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateActionCommand(Tobii.Interaction.Framework.ActionType)">
            <summary>Sets the stub of IContext.CreateActionCommand(ActionType actionType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateCommand(Tobii.Interaction.Framework.CommandType)">
            <summary>Sets the stub of IContext.CreateCommand(CommandType commandType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateInteractionObject(System.IntPtr)">
            <summary>Sets the stub of IContext.CreateInteractionObject(IntPtr hObject)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateInteractionObject(Tobii.Interaction.Model.PropertyBag)">
            <summary>Sets the stub of IContext.CreateInteractionObject(PropertyBag sourcePropertyBag)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateProfileAsync(System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.CreateProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreatePropertyBag(Tobii.Interaction.Client.PropertyBagType)">
            <summary>Sets the stub of IContext.CreatePropertyBag(PropertyBagType type)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreatePropertyBagFromObject(System.Object)">
            <summary>Sets the stub of IContext.CreatePropertyBagFromObject(Object source)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateSnapshot">
            <summary>Sets the stub of IContext.CreateSnapshot()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateSnapshotForQuery(Tobii.Interaction.Model.Query)">
            <summary>Sets the stub of IContext.CreateSnapshotForQuery(Query query)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateSnapshotWithQueryBounds(Tobii.Interaction.Model.Query)">
            <summary>Sets the stub of IContext.CreateSnapshotWithQueryBounds(Query query)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#CreateStateBag(System.String)">
            <summary>Sets the stub of IContext.CreateStateBag(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#DeleteProfileAsync(System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.DeleteProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#DisableBuiltinKeys(System.IntPtr,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.DisableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#DisableConnection">
            <summary>Sets the stub of IContext.DisableConnection()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#EnableBuiltinKeys(System.IntPtr,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.EnableBuiltinKeys(IntPtr windowId, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#EnableConnection">
            <summary>Sets the stub of IContext.EnableConnection()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#GetState(System.String)">
            <summary>Sets the stub of IContext.GetState(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#GetStateAsync(System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.GetStateAsync(String statePath, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#GetStateAsync(System.String)">
            <summary>Sets the stub of IContext.GetStateAsync(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#GetTrackedObjects">
            <summary>Sets the stub of IContext.GetTrackedObjects()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#LaunchConfigurationTool(Tobii.Interaction.Framework.ConfigurationTool,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.LaunchConfigurationTool(ConfigurationTool configurationTool, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#PerformScheduledJobs">
            <summary>Sets the stub of IContext.PerformScheduledJobs()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterEventHandler(Tobii.Interaction.Model.InteractionEventHandler)">
            <summary>Sets the stub of IContext.RegisterEventHandler(InteractionEventHandler eventHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterMessageHandler(Tobii.Interaction.Framework.MessageType,Tobii.Interaction.Model.MessageHandler)">
            <summary>Sets the stub of IContext.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterMessageHandler(Tobii.Interaction.Framework.MessageType,Tobii.Interaction.Model.MessageHandler,Tobii.Interaction.Model.PropertyBag)">
            <summary>Sets the stub of IContext.RegisterMessageHandler(MessageType messageType, MessageHandler messageHandler, PropertyBag options)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterNotificationHandler(Tobii.Interaction.Model.NotificationHandler)">
            <summary>Sets the stub of IContext.RegisterNotificationHandler(NotificationHandler notificationHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterQueryHandler(System.String,Tobii.Interaction.Model.QueryHandler)">
            <summary>Sets the stub of IContext.RegisterQueryHandler(String processId, QueryHandler queryHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterQueryHandlerForCurrentProcess(Tobii.Interaction.Model.QueryHandler)">
            <summary>Sets the stub of IContext.RegisterQueryHandlerForCurrentProcess(QueryHandler queryHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterStateChangedHandler(System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.RegisterStateChangedHandler(String statePath, AsyncDataHandler stateChangedHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RegisterStateObserver(System.String)">
            <summary>Sets the stub of IContext.RegisterStateObserver(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#RenameProfileAsync(System.String,System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.RenameProfileAsync(String oldProfileName, String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#SetCurrentProfileAsync(System.String,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.SetCurrentProfileAsync(String profileName, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#SetProfileCalibrationDataAsync(System.String,System.Uri,System.String,System.Int32,System.Byte[],Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.SetProfileCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfDataPoints, Byte[] data, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#SetStateAsync(System.String,System.Object,Tobii.Interaction.Model.AsyncDataHandler)">
            <summary>Sets the stub of IContext.SetStateAsync(String statePath, Object stateData, AsyncDataHandler completionHandler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#SetStateAsync(System.String,System.Object)">
            <summary>Sets the stub of IContext.SetStateAsync(String statePath, Object stateData)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#Shutdown(System.Int32,System.Boolean)">
            <summary>Sets the stub of IContext.Shutdown(Int32 cleanupTimeout, Boolean logLeakingObjectsInfo)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#UnregisterMessageHandler(System.Int32)">
            <summary>Sets the stub of IContext.UnregisterMessageHandler(Int32 ticket)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#UnregisterStateChangedHandler(System.Int32)">
            <summary>Sets the stub of IContext.UnregisterStateChangedHandler(Int32 ticket)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubIContext.Tobii#Interaction#Model#IContext#UnregisterStateObserver(System.String)">
            <summary>Sets the stub of IContext.UnregisterStateObserver(String statePath)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.UnregisterMessageHandlerInt32">
            <summary>Sets the stub of IContext.UnregisterMessageHandler(Int32 ticket)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.UnregisterStateChangedHandlerInt32">
            <summary>Sets the stub of IContext.UnregisterStateChangedHandler(Int32 ticket)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubIContext.UnregisterStateObserverString">
            <summary>Sets the stub of IContext.UnregisterStateObserver(String statePath)</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubInteractionObject">
            <summary>Stub type of Tobii.Interaction.Model.InteractionObject</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.#ctor(Tobii.Interaction.Model.Context,System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.InitializeStub">
            <summary>Initializes a new instance of type StubInteractionObject</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject.ToString">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject.ToString01">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubInteractionObject`1">
            <summary>Stub type of Tobii.Interaction.Model.InteractionObject`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.#ctor(Tobii.Interaction.Model.Context,System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.InitializeStub">
            <summary>Initializes a new instance of type StubInteractionObject</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ToString">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubInteractionObject`1.ToString01">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubMask">
            <summary>Stub type of Tobii.Interaction.Model.Mask</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.#ctor(Tobii.Interaction.Model.Context,System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubMask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubMask.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.InitializeStub">
            <summary>Initializes a new instance of type StubMask</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubMask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubMask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubMask.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubMask.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubMask.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubMask.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of InteractionObject.ReleaseNativeObject(IntPtr nativeHandle)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubMask.ToString">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubMask.ToString01">
            <summary>Sets the stub of InteractionObject.ToString()</summary>
        </member>
        <member name="T:Tobii.Interaction.Model.Fakes.StubTempHandle">
            <summary>Stub type of Tobii.Interaction.Model.TempHandle</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubTempHandle.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubTempHandle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubTempHandle.Dispose(System.Boolean)">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubTempHandle.DisposeBoolean">
            <summary>Sets the stub of SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubTempHandle.InitializeStub">
            <summary>Initializes a new instance of type StubTempHandle</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubTempHandle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubTempHandle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Model.Fakes.StubTempHandle.IsInvalid">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubTempHandle.IsInvalidGet">
            <summary>Sets the stub of SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubTempHandle.ReleaseHandle">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubTempHandle.ReleaseHandle01">
            <summary>Sets the stub of HandleWrapper.ReleaseHandle()</summary>
        </member>
        <member name="M:Tobii.Interaction.Model.Fakes.StubTempHandle.ReleaseNativeObject(System.IntPtr)">
            <summary>Sets the stub of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
        <member name="F:Tobii.Interaction.Model.Fakes.StubTempHandle.ReleaseNativeObjectIntPtr">
            <summary>Sets the stub of HandleWrapper.ReleaseNativeObject(IntPtr handle)</summary>
        </member>
    </members>
</doc>
