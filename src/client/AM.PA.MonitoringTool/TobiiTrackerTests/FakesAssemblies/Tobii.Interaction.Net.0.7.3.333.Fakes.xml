<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tobii.Interaction.Net.0.7.3.333.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.TobiiInteractionNetDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Tobii.Interaction.Net</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimActivatableBehavior">
            <summary>Shim type of Tobii.Interaction.ActivatableBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.#ctor(Tobii.Interaction.ActivatableBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.ActivatedAddEventHandlerOfBehaviorEventArgs">
            <summary>Sets the shim of ActivatableBehavior.add_Activated(EventHandler`1&lt;BehaviorEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.ActivatedRemoveEventHandlerOfBehaviorEventArgs">
            <summary>Sets the shim of ActivatableBehavior.remove_Activated(EventHandler`1&lt;BehaviorEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.ActivationFocusChangedAddEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehavior.add_ActivationFocusChanged(EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.ActivationFocusChangedRemoveEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehavior.remove_ActivationFocusChanged(EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.ActivatedAddEventHandlerOfBehaviorEventArgs">
            <summary>Sets the shim of ActivatableBehavior.add_Activated(EventHandler`1&lt;BehaviorEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.ActivatedRemoveEventHandlerOfBehaviorEventArgs">
            <summary>Sets the shim of ActivatableBehavior.remove_Activated(EventHandler`1&lt;BehaviorEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.ActivationFocusChangedAddEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehavior.add_ActivationFocusChanged(EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.ActivationFocusChangedRemoveEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehavior.remove_ActivationFocusChanged(EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.HandleActivatedEventString">
            <summary>Sets the shim of ActivatableBehavior.HandleActivatedEvent(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.HandleActivationFocusChangedEventStringBooleanBoolean">
            <summary>Sets the shim of ActivatableBehavior.HandleActivationFocusChangedEvent(String interactorId, Boolean hasTentativeActivationFocus, Boolean hasActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of ActivatableBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.SmallItemDetectionEnabledGet">
            <summary>Sets the shim of ActivatableBehavior.get_SmallItemDetectionEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.SmallItemDetectionEnabledSetBoolean">
            <summary>Sets the shim of ActivatableBehavior.set_SmallItemDetectionEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.TentativeFocusEnabledGet">
            <summary>Sets the shim of ActivatableBehavior.get_TentativeFocusEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.TentativeFocusEnabledSetBoolean">
            <summary>Sets the shim of ActivatableBehavior.set_TentativeFocusEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.Constructor">
            <summary>Sets the shim of ActivatableBehavior.ActivatableBehavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.ConstructorBooleanBoolean">
            <summary>Sets the shim of ActivatableBehavior.ActivatableBehavior(Boolean enableTentativeFocus, Boolean enableSmallItemDetection)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.HandleActivatedEventString">
            <summary>Sets the shim of ActivatableBehavior.HandleActivatedEvent(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.HandleActivationFocusChangedEventStringBooleanBoolean">
            <summary>Sets the shim of ActivatableBehavior.HandleActivationFocusChangedEvent(String interactorId, Boolean hasTentativeActivationFocus, Boolean hasActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.IsEnabledGet">
            <summary>Sets the shim of ActivatableBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of ActivatableBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.SmallItemDetectionEnabledGet">
            <summary>Sets the shim of ActivatableBehavior.get_SmallItemDetectionEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.SmallItemDetectionEnabledSetBoolean">
            <summary>Sets the shim of ActivatableBehavior.set_SmallItemDetectionEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.TentativeFocusEnabledGet">
            <summary>Sets the shim of ActivatableBehavior.get_TentativeFocusEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.TentativeFocusEnabledSetBoolean">
            <summary>Sets the shim of ActivatableBehavior.set_TentativeFocusEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of ActivatableBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions">
            <summary>Shim type of Tobii.Interaction.ActivatableBehaviorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.HasActivationFocusActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.HasActivationFocus(ActivatableBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.HasActivationFocusIEnumerableOfActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.HasActivationFocus(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.HasTentativeFocusActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.HasTentativeFocus(ActivatableBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.HasTentativeFocusIEnumerableOfActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.HasTentativeFocus(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.LostFocusActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.LostFocus(ActivatableBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.LostFocusIEnumerableOfActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.LostFocus(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.SetSmallItemDetectionEnabledActivatableBehaviorBoolean">
            <summary>Sets the shim of ActivatableBehaviorExtensions.SetSmallItemDetectionEnabled(ActivatableBehavior behaviors, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.SetSmallItemDetectionEnabledIEnumerableOfActivatableBehaviorBoolean">
            <summary>Sets the shim of ActivatableBehaviorExtensions.SetSmallItemDetectionEnabled(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.SetTentativeFocusEnabledActivatableBehaviorBoolean">
            <summary>Sets the shim of ActivatableBehaviorExtensions.SetTentativeFocusEnabled(ActivatableBehavior behaviors, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.SetTentativeFocusEnabledIEnumerableOfActivatableBehaviorBoolean">
            <summary>Sets the shim of ActivatableBehaviorExtensions.SetTentativeFocusEnabled(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenActivatedActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenActivated(ActivatableBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenActivatedActivatableBehaviorEventHandlerOfBehaviorEventArgs">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenActivated(ActivatableBehavior behavior, EventHandler`1&lt;BehaviorEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenActivatedIEnumerableOfActivatableBehaviorBehaviorCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenActivated(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenFocusChangedActivatableBehaviorActivationFocusChangedCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenFocusChanged(ActivatableBehavior behavior, ActivationFocusChangedCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenFocusChangedActivatableBehaviorEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenFocusChanged(ActivatableBehavior behavior, EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenFocusChangedIEnumerableOfActivatableBehaviorActivationFocusChangedCallback">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenFocusChanged(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, ActivationFocusChangedCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivatableBehaviorExtensions.WhenFocusChangedIEnumerableOfActivatableBehaviorEventHandlerOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of ActivatableBehaviorExtensions.WhenFocusChanged(IEnumerable`1&lt;ActivatableBehavior&gt; behaviors, EventHandler`1&lt;ActivationFocusChangedEventArgs&gt; handler)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs">
            <summary>Shim type of Tobii.Interaction.ActivationFocusChangedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.#ctor(Tobii.Interaction.ActivationFocusChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.AllInstances.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.AllInstances.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.AllInstances.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.AllInstances.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.ConstructorStringBooleanBoolean">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.ActivationFocusChangedEventArgs(String interactorId, Boolean hasTentativeActivationFocus, Boolean hasActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimActivationFocusChangedEventArgs.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedEventArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimBehaviorEventArgs">
            <summary>Shim type of Tobii.Interaction.BehaviorEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.#ctor(Tobii.Interaction.BehaviorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.AllInstances.InteractorIdGet">
            <summary>Sets the shim of BehaviorEventArgs.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.AllInstances.InteractorIdSetString">
            <summary>Sets the shim of BehaviorEventArgs.set_InteractorId(String value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.ConstructorString">
            <summary>Sets the shim of BehaviorEventArgs.BehaviorEventArgs(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.InteractorIdGet">
            <summary>Sets the shim of BehaviorEventArgs.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventArgs.InteractorIdSetString">
            <summary>Sets the shim of BehaviorEventArgs.set_InteractorId(String value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions">
            <summary>Shim type of Tobii.Interaction.BehaviorEventHandlerExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.AddActivatedEventHandlerActivatableBehaviorObjectActionOfBehaviorEventArgs">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.AddActivatedEventHandler(ActivatableBehavior behavior, Object key, Action`1&lt;BehaviorEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.AddActivationFocusChangedEventHandlerActivatableBehaviorObjectActionOfActivationFocusChangedEventArgs">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.AddActivationFocusChangedEventHandler(ActivatableBehavior behavior, Object key, Action`1&lt;ActivationFocusChangedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.AddHasGazeChangedEventHandlerGazeAwareBehaviorObjectActionOfHasGazeChangedEventArgs">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.AddHasGazeChangedEventHandler(GazeAwareBehavior behavior, Object key, Action`1&lt;HasGazeChangedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.AddPanEventHandlerPannableBehaviorObjectActionOfPanEventArgs">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.AddPanEventHandler(PannableBehavior behavior, Object key, Action`1&lt;PanEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.AddStepEventHandlerPannableBehaviorObjectActionOfStepEventArgs">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.AddStepEventHandler(PannableBehavior behavior, Object key, Action`1&lt;StepEventArgs&gt; handler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.RemoveActivatedEventHandlerActivatableBehaviorObject">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.RemoveActivatedEventHandler(ActivatableBehavior behavior, Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.RemoveActivationFocusChangedEventHandlerActivatableBehaviorObject">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.RemoveActivationFocusChangedEventHandler(ActivatableBehavior behavior, Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.RemoveHasGazeChangedEventHandlerGazeAwareBehaviorObject">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.RemoveHasGazeChangedEventHandler(GazeAwareBehavior behavior, Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.RemovePanEventHandlerPannableBehaviorObject">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.RemovePanEventHandler(PannableBehavior behavior, Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimBehaviorEventHandlerExtensions.RemoveStepEventHandlerPannableBehaviorObject">
            <summary>Sets the shim of BehaviorEventHandlerExtensions.RemoveStepEventHandler(PannableBehavior behavior, Object key)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor">
            <summary>Shim type of Tobii.Interaction.CachedBoundsInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.#ctor(Tobii.Interaction.CachedBoundsInteractor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.AnyDataChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.add_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.AnyDataChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.remove_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.CachedBoundsChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.add_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.CachedBoundsChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.remove_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.CachedBoundsGet">
            <summary>Sets the shim of CachedBoundsInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.GetBounds">
            <summary>Sets the shim of CachedBoundsInteractor.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.PrivateAnyDataChangedAddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.add_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.PrivateAnyDataChangedRemoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.remove_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.PrivateCachedBoundsChangedAddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.add_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.PrivateCachedBoundsChangedRemoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.remove_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.RaiseAnyDataChanged">
            <summary>Sets the shim of CachedBoundsInteractor.RaiseAnyDataChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.RaiseCachedBoundsChanged">
            <summary>Sets the shim of CachedBoundsInteractor.RaiseCachedBoundsChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.SetCachedBoundsRectangle">
            <summary>Sets the shim of CachedBoundsInteractor.SetCachedBounds(Rectangle bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances.TobiiInteractionICachedBoundsInteractorSetIsDeletedBoolean">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AllInstances._ctorb__1_0Object">
            <summary>Sets the shim of CachedBoundsInteractor.&lt;.ctor&gt;b__1_0(Object changedInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AnyDataChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.add_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.AnyDataChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.remove_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.Bind(Tobii.Interaction.ICachedBoundsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.Bind(Tobii.Interaction.IMutableBehaviorsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.CachedBoundsChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.add_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.CachedBoundsChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.remove_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.CachedBoundsGet">
            <summary>Sets the shim of CachedBoundsInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.ConstructorRectangleString">
            <summary>Sets the shim of CachedBoundsInteractor.CachedBoundsInteractor(Rectangle bounds, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.GetBounds">
            <summary>Sets the shim of CachedBoundsInteractor.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.PrivateAnyDataChangedAddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.add_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.PrivateAnyDataChangedRemoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.remove_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.PrivateCachedBoundsChangedAddEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.add_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.PrivateCachedBoundsChangedRemoveEventHandler">
            <summary>Sets the shim of CachedBoundsInteractor.remove_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.RaiseAnyDataChanged">
            <summary>Sets the shim of CachedBoundsInteractor.RaiseAnyDataChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.RaiseCachedBoundsChanged">
            <summary>Sets the shim of CachedBoundsInteractor.RaiseCachedBoundsChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.SetCachedBoundsRectangle">
            <summary>Sets the shim of CachedBoundsInteractor.SetCachedBounds(Rectangle bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor.TobiiInteractionICachedBoundsInteractorSetIsDeletedBoolean">
            <summary>Sets the shim of CachedBoundsInteractor.Tobii.Interaction.ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCachedBoundsInteractor._ctorb__1_0Object">
            <summary>Sets the shim of CachedBoundsInteractor.&lt;.ctor&gt;b__1_0(Object changedInteractor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCommandProvider">
            <summary>Shim type of Tobii.Interaction.CommandProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandProvider.#ctor(Tobii.Interaction.CommandProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCommandProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.AllInstances.InputGet">
            <summary>Sets the shim of CommandProvider.get_Input()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.AllInstances.ProfileGet">
            <summary>Sets the shim of CommandProvider.get_Profile()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.ConstructorContext">
            <summary>Sets the shim of CommandProvider.CommandProvider(Context context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.InputGet">
            <summary>Sets the shim of CommandProvider.get_Input()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandProvider.ProfileGet">
            <summary>Sets the shim of CommandProvider.get_Profile()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCommandResult">
            <summary>Shim type of Tobii.Interaction.CommandResult</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandResult.#ctor(Tobii.Interaction.CommandResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimCommandResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimCommandResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimCommandResult.Constructor">
            <summary>Sets the shim of CommandResult.CommandResult()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimDataStreamBase`2">
            <summary>Shim type of Tobii.Interaction.DataStreamBase`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.#ctor(Tobii.Interaction.DataStreamBase{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AddActionObserverActionOfStringT1Object">
            <summary>Sets the shim of DataStreamBase`2.AddActionObserver(Action`2&lt;String,!1&gt; action, Object key)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.AddActionObserverActionOfStringT1Object">
            <summary>Sets the shim of DataStreamBase`2.AddActionObserver(Action`2&lt;String,!1&gt; action, Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.BehaviorGet">
            <summary>Sets the shim of DataStreamBase`2.get_Behavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.BehaviorSetT0">
            <summary>Sets the shim of DataStreamBase`2.set_Behavior(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of DataStreamBase`2.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of DataStreamBase`2.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.IsEnabledGet">
            <summary>Sets the shim of DataStreamBase`2.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of DataStreamBase`2.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.NextAddEventHandlerOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.add_Next(EventHandler`1&lt;StreamData`1&lt;!1&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.NextRemoveEventHandlerOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.remove_Next(EventHandler`1&lt;StreamData`1&lt;!1&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of DataStreamBase`2.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.SubscribeIObserverOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.Subscribe(IObserver`1&lt;StreamData`1&lt;!1&gt;&gt; observer)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaviorGet">
            <summary>Sets the shim of DataStreamBase`2.get_Behavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaviorSetT0">
            <summary>Sets the shim of DataStreamBase`2.set_Behavior(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaviorTypeGet">
            <summary>Sets the shim of DataStreamBase`2.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.Bind(Tobii.Interaction.IDataStream{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBase`2.Bind(System.IObservable{Tobii.Interaction.StreamData{`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.ConstructorT0Boolean">
            <summary>Sets the shim of DataStreamBase`2.DataStreamBase`2(!0 behavior, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.HandleEventStringIBehavior">
            <summary>Sets the shim of DataStreamBase`2.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.IsEnabledGet">
            <summary>Sets the shim of DataStreamBase`2.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.IsEnabledSetBoolean">
            <summary>Sets the shim of DataStreamBase`2.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.NextAddEventHandlerOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.add_Next(EventHandler`1&lt;StreamData`1&lt;!1&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.NextRemoveEventHandlerOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.remove_Next(EventHandler`1&lt;StreamData`1&lt;!1&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of DataStreamBase`2.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.SubscribeIObserverOfStreamDataOfT1">
            <summary>Sets the shim of DataStreamBase`2.Subscribe(IObserver`1&lt;StreamData`1&lt;!1&gt;&gt; observer)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBase`2.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of DataStreamBase`2.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1">
            <summary>Shim type of Tobii.Interaction.DataStreamBehaviorBase`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.#ctor(Tobii.Interaction.DataStreamBehaviorBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersChangedGet">
            <summary>Sets the shim of DataStreamBehaviorBase`1.get_HasSubscribersChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersChangedSetAction">
            <summary>Sets the shim of DataStreamBehaviorBase`1.set_HasSubscribersChanged(Action value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersChangedTobiiInteractionISubscriberAwareObservableget">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.get_HasSubscribersChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersChangedTobiiInteractionISubscriberAwareObservablesetAction">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.set_HasSubscribersChanged(Action value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersGet">
            <summary>Sets the shim of DataStreamBehaviorBase`1.get_HasSubscribers()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.HasSubscribersTobiiInteractionISubscriberAwareObservableget">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.get_HasSubscribers()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.NotifyObserversStringT0">
            <summary>Sets the shim of DataStreamBehaviorBase`1.NotifyObservers(String id, !0 data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.AllInstances.SubscribeIObserverOfStreamDataOfT0">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Subscribe(IObserver`1&lt;StreamData`1&lt;!0&gt;&gt; observer)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.Bind(System.IObservable{Tobii.Interaction.StreamData{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.Constructor">
            <summary>Sets the shim of DataStreamBehaviorBase`1.DataStreamBehaviorBase`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersChangedGet">
            <summary>Sets the shim of DataStreamBehaviorBase`1.get_HasSubscribersChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersChangedSetAction">
            <summary>Sets the shim of DataStreamBehaviorBase`1.set_HasSubscribersChanged(Action value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersChangedTobiiInteractionISubscriberAwareObservableget">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.get_HasSubscribersChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersChangedTobiiInteractionISubscriberAwareObservablesetAction">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.set_HasSubscribersChanged(Action value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersGet">
            <summary>Sets the shim of DataStreamBehaviorBase`1.get_HasSubscribers()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.HasSubscribersTobiiInteractionISubscriberAwareObservableget">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Tobii.Interaction.ISubscriberAwareObservable.get_HasSubscribers()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.NotifyObserversStringT0">
            <summary>Sets the shim of DataStreamBehaviorBase`1.NotifyObservers(String id, !0 data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimDataStreamBehaviorBase`1.SubscribeIObserverOfStreamDataOfT0">
            <summary>Sets the shim of DataStreamBehaviorBase`1.Subscribe(IObserver`1&lt;StreamData`1&lt;!0&gt;&gt; observer)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateObserver`1">
            <summary>Shim type of Tobii.Interaction.EngineStateObserver`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.#ctor(Tobii.Interaction.EngineStateObserver{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.ChangedAddEventHandlerOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.add_Changed(EventHandler`1&lt;EngineStateValue`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.ChangedRemoveEventHandlerOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.remove_Changed(EventHandler`1&lt;EngineStateValue`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.CurrentValueGet">
            <summary>Sets the shim of EngineStateObserver`1.get_CurrentValue()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.CurrentValueSetEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.set_CurrentValue(EngineStateValue`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.Dispose">
            <summary>Sets the shim of EngineStateObserver`1.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EngineStateObserver`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.ExtractValueStateBag">
            <summary>Sets the shim of EngineStateObserver`1.ExtractValue(StateBag stateBag)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.IsDisposedGet">
            <summary>Sets the shim of EngineStateObserver`1.get_IsDisposed()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.OnConnected">
            <summary>Sets the shim of EngineStateObserver`1.OnConnected()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.OnConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of EngineStateObserver`1.OnConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.OnGetStateAsyncDoneIAsyncData">
            <summary>Sets the shim of EngineStateObserver`1.OnGetStateAsyncDone(IAsyncData data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.OnStateChangedIAsyncData">
            <summary>Sets the shim of EngineStateObserver`1.OnStateChanged(IAsyncData data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.RaiseChanged">
            <summary>Sets the shim of EngineStateObserver`1.RaiseChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.AllInstances.WhenChangedActionOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.WhenChanged(Action`1&lt;EngineStateValue`1&lt;!0&gt;&gt; callback)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.Bind(Tobii.Interaction.IEngineStateObserver{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.ChangedAddEventHandlerOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.add_Changed(EventHandler`1&lt;EngineStateValue`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.ChangedRemoveEventHandlerOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.remove_Changed(EventHandler`1&lt;EngineStateValue`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.ConstructorIContextString">
            <summary>Sets the shim of EngineStateObserver`1.EngineStateObserver`1(IContext context, String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.CurrentValueGet">
            <summary>Sets the shim of EngineStateObserver`1.get_CurrentValue()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.CurrentValueSetEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.set_CurrentValue(EngineStateValue`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.Dispose">
            <summary>Sets the shim of EngineStateObserver`1.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.DisposeBoolean">
            <summary>Sets the shim of EngineStateObserver`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.ExtractValueDefaultStateBagString">
            <summary>Sets the shim of EngineStateObserver`1.ExtractValueDefault(StateBag stateBag, String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.ExtractValueStateBag">
            <summary>Sets the shim of EngineStateObserver`1.ExtractValue(StateBag stateBag)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.IsConnectedConnectionState">
            <summary>Sets the shim of EngineStateObserver`1.IsConnected(ConnectionState connectionState)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.IsDisposedGet">
            <summary>Sets the shim of EngineStateObserver`1.get_IsDisposed()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.OnConnected">
            <summary>Sets the shim of EngineStateObserver`1.OnConnected()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.OnConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of EngineStateObserver`1.OnConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.OnGetStateAsyncDoneIAsyncData">
            <summary>Sets the shim of EngineStateObserver`1.OnGetStateAsyncDone(IAsyncData data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.OnStateChangedIAsyncData">
            <summary>Sets the shim of EngineStateObserver`1.OnStateChanged(IAsyncData data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.RaiseChanged">
            <summary>Sets the shim of EngineStateObserver`1.RaiseChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateObserver`1.WhenChangedActionOfEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateObserver`1.WhenChanged(Action`1&lt;EngineStateValue`1&lt;!0&gt;&gt; callback)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateProvider">
            <summary>Shim type of Tobii.Interaction.EngineStateProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.#ctor(Tobii.Interaction.EngineStateProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.ContextGet">
            <summary>Sets the shim of EngineStateProvider.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.ContextSetIContext">
            <summary>Sets the shim of EngineStateProvider.set_Context(IContext value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateDisplaySizeObserver">
            <summary>Sets the shim of EngineStateProvider.CreateDisplaySizeObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateEyeTrackingDeviceStatusObserver">
            <summary>Sets the shim of EngineStateProvider.CreateEyeTrackingDeviceStatusObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateGazeTrackingObserver">
            <summary>Sets the shim of EngineStateProvider.CreateGazeTrackingObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateScreenBoundsObserver">
            <summary>Sets the shim of EngineStateProvider.CreateScreenBoundsObserver()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateStateObserverOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.EngineStateProvider,System.String,Tobii.Interaction.EngineStateObserver{``0}})">
            <summary>Sets the shim of EngineStateProvider.CreateStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateUserPresenceObserver">
            <summary>Sets the shim of EngineStateProvider.CreateUserPresenceObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.CreateUserProfileNameObserver">
            <summary>Sets the shim of EngineStateProvider.CreateUserProfileNameObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetDisplaySizeAsync">
            <summary>Sets the shim of EngineStateProvider.GetDisplaySizeAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetEyeTrackingDeviceStatusAsync">
            <summary>Sets the shim of EngineStateProvider.GetEyeTrackingDeviceStatusAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetGazeTrackingAsync">
            <summary>Sets the shim of EngineStateProvider.GetGazeTrackingAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetScreenBoundsAsync">
            <summary>Sets the shim of EngineStateProvider.GetScreenBoundsAsync()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetStateAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.EngineStateProvider,System.String,System.Threading.Tasks.Task{Tobii.Interaction.EngineStateValue{``0}}})">
            <summary>Sets the shim of EngineStateProvider.GetStateAsync(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetStateAsyncOf1StringFuncOfStateBagStringEngineStateValueOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.EngineStateProvider,System.String,System.Func{Tobii.Interaction.Model.StateBag,System.String,Tobii.Interaction.EngineStateValue{``0}},System.Threading.Tasks.Task{Tobii.Interaction.EngineStateValue{``0}}})">
            <summary>Sets the shim of EngineStateProvider.GetStateAsync(String statePath, Func`3&lt;StateBag,String,EngineStateValue`1&lt;!!0&gt;&gt; extractValueFunction)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetUserPresenceAsync">
            <summary>Sets the shim of EngineStateProvider.GetUserPresenceAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.GetUserProfileNameAsync">
            <summary>Sets the shim of EngineStateProvider.GetUserProfileNameAsync()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.AllInstances.SetStateValueAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.EngineStateProvider,System.String,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EngineStateProvider.SetStateValueAsync(String statePath, !!0 value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.ConstructorIContext">
            <summary>Sets the shim of EngineStateProvider.EngineStateProvider(IContext context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.ContextGet">
            <summary>Sets the shim of EngineStateProvider.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.ContextSetIContext">
            <summary>Sets the shim of EngineStateProvider.set_Context(IContext value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateDisplaySizeObserver">
            <summary>Sets the shim of EngineStateProvider.CreateDisplaySizeObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateEyeTrackingDeviceStatusObserver">
            <summary>Sets the shim of EngineStateProvider.CreateEyeTrackingDeviceStatusObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateGazeTrackingObserver">
            <summary>Sets the shim of EngineStateProvider.CreateGazeTrackingObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateScreenBoundsObserver">
            <summary>Sets the shim of EngineStateProvider.CreateScreenBoundsObserver()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateStateObserverOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Tobii.Interaction.EngineStateObserver{``0}})">
            <summary>Sets the shim of EngineStateProvider.CreateStateObserver(String statePath)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateUserPresenceObserver">
            <summary>Sets the shim of EngineStateProvider.CreateUserPresenceObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.CreateUserProfileNameObserver">
            <summary>Sets the shim of EngineStateProvider.CreateUserProfileNameObserver()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetDisplaySizeAsync">
            <summary>Sets the shim of EngineStateProvider.GetDisplaySizeAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetEyeTrackingDeviceStatusAsync">
            <summary>Sets the shim of EngineStateProvider.GetEyeTrackingDeviceStatusAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetGazeTrackingAsync">
            <summary>Sets the shim of EngineStateProvider.GetGazeTrackingAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetScreenBoundsAsync">
            <summary>Sets the shim of EngineStateProvider.GetScreenBoundsAsync()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetStateAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Tobii.Interaction.EngineStateValue{``0}}})">
            <summary>Sets the shim of EngineStateProvider.GetStateAsync(String statePath)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetStateAsyncOf1StringFuncOfStateBagStringEngineStateValueOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{Tobii.Interaction.Model.StateBag,System.String,Tobii.Interaction.EngineStateValue{``0}},System.Threading.Tasks.Task{Tobii.Interaction.EngineStateValue{``0}}})">
            <summary>Sets the shim of EngineStateProvider.GetStateAsync(String statePath, Func`3&lt;StateBag,String,EngineStateValue`1&lt;!!0&gt;&gt; extractValueFunction)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetUserPresenceAsync">
            <summary>Sets the shim of EngineStateProvider.GetUserPresenceAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateProvider.GetUserProfileNameAsync">
            <summary>Sets the shim of EngineStateProvider.GetUserProfileNameAsync()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateProvider.SetStateValueAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EngineStateProvider.SetStateValueAsync(String statePath, !!0 value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateValue`1">
            <summary>Shim type of Tobii.Interaction.EngineStateValue`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateValue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateValue`1.#ctor(Tobii.Interaction.EngineStateValue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.EqualsEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateValue`1.Equals(EngineStateValue`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.EqualsObject">
            <summary>Sets the shim of EngineStateValue`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of EngineStateValue`1.GetHashCode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.IsValidGet">
            <summary>Sets the shim of EngineStateValue`1.get_IsValid()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.IsValidSetBoolean">
            <summary>Sets the shim of EngineStateValue`1.set_IsValid(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.ToString01">
            <summary>Sets the shim of EngineStateValue`1.ToString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.ValueGet">
            <summary>Sets the shim of EngineStateValue`1.get_Value()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of EngineStateValue`1.set_Value(!0 value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateValue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateValue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEngineStateValue`1.Bind(System.IEquatable{Tobii.Interaction.EngineStateValue{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.Constructor">
            <summary>Sets the shim of EngineStateValue`1.EngineStateValue`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.ConstructorT0">
            <summary>Sets the shim of EngineStateValue`1.EngineStateValue`1(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.EqualsEngineStateValueOfT0">
            <summary>Sets the shim of EngineStateValue`1.Equals(EngineStateValue`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.EqualsObject">
            <summary>Sets the shim of EngineStateValue`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.GetHashCode">
            <summary>Sets the shim of EngineStateValue`1.GetHashCode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.InvalidGet">
            <summary>Sets the shim of EngineStateValue`1.get_Invalid()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.IsValidGet">
            <summary>Sets the shim of EngineStateValue`1.get_IsValid()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.IsValidSetBoolean">
            <summary>Sets the shim of EngineStateValue`1.set_IsValid(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.ToString">
            <summary>Sets the shim of EngineStateValue`1.ToString()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.ValueGet">
            <summary>Sets the shim of EngineStateValue`1.get_Value()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEngineStateValue`1.ValueSetT0">
            <summary>Sets the shim of EngineStateValue`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEventHandlingBase">
            <summary>Shim type of Tobii.Interaction.EventHandlingBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.#ctor(Tobii.Interaction.EventHandlingBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.AddEventHandlerOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Action{``0},System.Object})">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Action`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.AddEventHandlerOf1StringObjectActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Object,System.Action{``0}})">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Object key, Action`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AddEventHandlerStringActionOfObject">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Action`1&lt;Object&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AddEventHandlerStringObjectActionOfObject">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Object key, Action`1&lt;Object&gt; handler)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.AddEventHandlerOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.EventHandlingBase,System.String,System.Action{``0},System.Object})">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Action`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.AddEventHandlerOf1StringObjectActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tobii.Interaction.EventHandlingBase,System.String,System.Object,System.Action{``0}})">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Object key, Action`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.AddEventHandlerStringActionOfObject">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Action`1&lt;Object&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.AddEventHandlerStringObjectActionOfObject">
            <summary>Sets the shim of EventHandlingBase.AddEventHandler(String eventName, Object key, Action`1&lt;Object&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.GetEventHandlersString">
            <summary>Sets the shim of EventHandlingBase.GetEventHandlers(String eventName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.InvokeOnDomainThreadAction">
            <summary>Sets the shim of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.RaiseEventStringObject">
            <summary>Sets the shim of EventHandlingBase.RaiseEvent(String eventName, Object args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.AllInstances.RemoveEventHandlerStringObject">
            <summary>Sets the shim of EventHandlingBase.RemoveEventHandler(String eventName, Object key)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEventHandlingBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.Constructor">
            <summary>Sets the shim of EventHandlingBase.EventHandlingBase()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.GetEventHandlersString">
            <summary>Sets the shim of EventHandlingBase.GetEventHandlers(String eventName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.InvokeOnDomainThreadAction">
            <summary>Sets the shim of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.RaiseEventStringObject">
            <summary>Sets the shim of EventHandlingBase.RaiseEvent(String eventName, Object args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEventHandlingBase.RemoveEventHandlerStringObject">
            <summary>Sets the shim of EventHandlingBase.RemoveEventHandler(String eventName, Object key)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionBehavior">
            <summary>Shim type of Tobii.Interaction.EyePositionBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.#ctor(Tobii.Interaction.EyePositionBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of EyePositionBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.IsEnabledGet">
            <summary>Sets the shim of EyePositionBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of EyePositionBehavior.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of EyePositionBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionBehavior.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.EyePositionData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.Constructor">
            <summary>Sets the shim of EyePositionBehavior.EyePositionBehavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of EyePositionBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.IsEnabledGet">
            <summary>Sets the shim of EyePositionBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.IsEnabledSetBoolean">
            <summary>Sets the shim of EyePositionBehavior.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of EyePositionBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.SetIsEnabledBoolean">
            <summary>Sets the shim of EyePositionBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of EyePositionBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionData">
            <summary>Shim type of Tobii.Interaction.EyePositionData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionData.#ctor(Tobii.Interaction.EyePositionData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.EngineTimestampGet">
            <summary>Sets the shim of EyePositionData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.EngineTimestampSetDouble">
            <summary>Sets the shim of EyePositionData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.HasLeftEyePositionGet">
            <summary>Sets the shim of EyePositionData.get_HasLeftEyePosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.HasLeftEyePositionSetBoolean">
            <summary>Sets the shim of EyePositionData.set_HasLeftEyePosition(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.HasRightEyePositionGet">
            <summary>Sets the shim of EyePositionData.get_HasRightEyePosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.HasRightEyePositionSetBoolean">
            <summary>Sets the shim of EyePositionData.set_HasRightEyePosition(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.LeftEyeGet">
            <summary>Sets the shim of EyePositionData.get_LeftEye()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.LeftEyeNormalizedGet">
            <summary>Sets the shim of EyePositionData.get_LeftEyeNormalized()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.LeftEyeNormalizedSetVector3">
            <summary>Sets the shim of EyePositionData.set_LeftEyeNormalized(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.LeftEyeSetVector3">
            <summary>Sets the shim of EyePositionData.set_LeftEye(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.RightEyeGet">
            <summary>Sets the shim of EyePositionData.get_RightEye()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.RightEyeNormalizedGet">
            <summary>Sets the shim of EyePositionData.get_RightEyeNormalized()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.RightEyeNormalizedSetVector3">
            <summary>Sets the shim of EyePositionData.set_RightEyeNormalized(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.RightEyeSetVector3">
            <summary>Sets the shim of EyePositionData.set_RightEye(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.TimestampGet">
            <summary>Sets the shim of EyePositionData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.AllInstances.TimestampSetDouble">
            <summary>Sets the shim of EyePositionData.set_Timestamp(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.ConstructorBooleanBooleanVector3Vector3Vector3Vector3DoubleDouble">
            <summary>Sets the shim of EyePositionData.EyePositionData(Boolean hasLeftEyePosition, Boolean hasRightEyePosition, Vector3 leftEye, Vector3 leftEyeNormalized, Vector3 rightEye, Vector3 rightEyeNormalized, Double timestamp, Double engineTimestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.EngineTimestampGet">
            <summary>Sets the shim of EyePositionData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.EngineTimestampSetDouble">
            <summary>Sets the shim of EyePositionData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.HasLeftEyePositionGet">
            <summary>Sets the shim of EyePositionData.get_HasLeftEyePosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.HasLeftEyePositionSetBoolean">
            <summary>Sets the shim of EyePositionData.set_HasLeftEyePosition(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.HasRightEyePositionGet">
            <summary>Sets the shim of EyePositionData.get_HasRightEyePosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.HasRightEyePositionSetBoolean">
            <summary>Sets the shim of EyePositionData.set_HasRightEyePosition(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.LeftEyeGet">
            <summary>Sets the shim of EyePositionData.get_LeftEye()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.LeftEyeNormalizedGet">
            <summary>Sets the shim of EyePositionData.get_LeftEyeNormalized()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.LeftEyeNormalizedSetVector3">
            <summary>Sets the shim of EyePositionData.set_LeftEyeNormalized(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.LeftEyeSetVector3">
            <summary>Sets the shim of EyePositionData.set_LeftEye(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.RightEyeGet">
            <summary>Sets the shim of EyePositionData.get_RightEye()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.RightEyeNormalizedGet">
            <summary>Sets the shim of EyePositionData.get_RightEyeNormalized()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.RightEyeNormalizedSetVector3">
            <summary>Sets the shim of EyePositionData.set_RightEyeNormalized(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.RightEyeSetVector3">
            <summary>Sets the shim of EyePositionData.set_RightEye(Vector3 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.TimestampGet">
            <summary>Sets the shim of EyePositionData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionData.TimestampSetDouble">
            <summary>Sets the shim of EyePositionData.set_Timestamp(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions">
            <summary>Shim type of Tobii.Interaction.EyePositionDataStreamExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionDataStreamExtensions.GetEyePositionStreamIMutableBehaviorsInteractorBoolean">
            <summary>Sets the shim of EyePositionDataStreamExtensions.GetEyePositionStream(IMutableBehaviorsInteractor interactor, Boolean enabled)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionStream">
            <summary>Shim type of Tobii.Interaction.EyePositionStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.#ctor(Tobii.Interaction.EyePositionStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimEyePositionStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionStream.AllInstances.EyePositionActionOfEyePositionData">
            <summary>Sets the shim of EyePositionStream.EyePosition(Action`1&lt;EyePositionData&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.Bind(Tobii.Interaction.IDataStream{Tobii.Interaction.EyePositionData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimEyePositionStream.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.EyePositionData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionStream.ConstructorEyePositionBehaviorActionBoolean">
            <summary>Sets the shim of EyePositionStream.EyePositionStream(EyePositionBehavior eyePositionBehavior, Action hasSubscribersChanged, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimEyePositionStream.EyePositionActionOfEyePositionData">
            <summary>Sets the shim of EyePositionStream.EyePosition(Action`1&lt;EyePositionData&gt; action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationData">
            <summary>Shim type of Tobii.Interaction.FixationData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationData.#ctor(Tobii.Interaction.FixationData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.EngineTimestampGet">
            <summary>Sets the shim of FixationData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.EngineTimestampSetDouble">
            <summary>Sets the shim of FixationData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.EventTypeGet">
            <summary>Sets the shim of FixationData.get_EventType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.EventTypeSetFixationDataEventType">
            <summary>Sets the shim of FixationData.set_EventType(FixationDataEventType value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.ModeGet">
            <summary>Sets the shim of FixationData.get_Mode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.ModeSetFixationDataMode">
            <summary>Sets the shim of FixationData.set_Mode(FixationDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.TimestampGet">
            <summary>Sets the shim of FixationData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.TimestampSetDouble">
            <summary>Sets the shim of FixationData.set_Timestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.XGet">
            <summary>Sets the shim of FixationData.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.XSetDouble">
            <summary>Sets the shim of FixationData.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.YGet">
            <summary>Sets the shim of FixationData.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.AllInstances.YSetDouble">
            <summary>Sets the shim of FixationData.set_Y(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.ConstructorFixationDataModeFixationDataEventTypeDoubleDoubleDoubleDouble">
            <summary>Sets the shim of FixationData.FixationData(FixationDataMode fixationDataMode, FixationDataEventType eventType, Double x, Double y, Double timestamp, Double engineTimestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.EngineTimestampGet">
            <summary>Sets the shim of FixationData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.EngineTimestampSetDouble">
            <summary>Sets the shim of FixationData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.EventTypeGet">
            <summary>Sets the shim of FixationData.get_EventType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.EventTypeSetFixationDataEventType">
            <summary>Sets the shim of FixationData.set_EventType(FixationDataEventType value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.ModeGet">
            <summary>Sets the shim of FixationData.get_Mode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.ModeSetFixationDataMode">
            <summary>Sets the shim of FixationData.set_Mode(FixationDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.TimestampGet">
            <summary>Sets the shim of FixationData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.TimestampSetDouble">
            <summary>Sets the shim of FixationData.set_Timestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.XGet">
            <summary>Sets the shim of FixationData.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.XSetDouble">
            <summary>Sets the shim of FixationData.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.YGet">
            <summary>Sets the shim of FixationData.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationData.YSetDouble">
            <summary>Sets the shim of FixationData.set_Y(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationDataBehavior">
            <summary>Shim type of Tobii.Interaction.FixationDataBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.#ctor(Tobii.Interaction.FixationDataBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.FixationDataModeGet">
            <summary>Sets the shim of FixationDataBehavior.get_FixationDataMode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.FixationDataModeSetFixationDataMode">
            <summary>Sets the shim of FixationDataBehavior.set_FixationDataMode(FixationDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of FixationDataBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.IsEnabledGet">
            <summary>Sets the shim of FixationDataBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of FixationDataBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of FixationDataBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataBehavior.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.FixationData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.ConstructorFixationDataMode">
            <summary>Sets the shim of FixationDataBehavior.FixationDataBehavior(FixationDataMode fixationDataMode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.FixationDataModeGet">
            <summary>Sets the shim of FixationDataBehavior.get_FixationDataMode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.FixationDataModeSetFixationDataMode">
            <summary>Sets the shim of FixationDataBehavior.set_FixationDataMode(FixationDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of FixationDataBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.IsEnabledGet">
            <summary>Sets the shim of FixationDataBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of FixationDataBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.SetIsEnabledBoolean">
            <summary>Sets the shim of FixationDataBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of FixationDataBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationDataStream">
            <summary>Shim type of Tobii.Interaction.FixationDataStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.#ctor(Tobii.Interaction.FixationDataStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationDataStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.AllInstances.BeginActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.Begin(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.AllInstances.DataActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.Data(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.AllInstances.EndActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.End(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.BeginActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.Begin(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.Bind(Tobii.Interaction.IDataStream{Tobii.Interaction.FixationData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStream.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.FixationData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.ConstructorFixationDataBehaviorActionBoolean">
            <summary>Sets the shim of FixationDataStream.FixationDataStream(FixationDataBehavior fixationDataBehavior, Action hasSubscribersChanged, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.DataActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.Data(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStream.EndActionOfDoubleDoubleDouble">
            <summary>Sets the shim of FixationDataStream.End(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions">
            <summary>Shim type of Tobii.Interaction.FixationDataStreamExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFixationDataStreamExtensions.GetFixationDataStreamIMutableBehaviorsInteractorFixationDataModeBoolean">
            <summary>Sets the shim of FixationDataStreamExtensions.GetFixationDataStream(IMutableBehaviorsInteractor interactor, FixationDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFoundationException">
            <summary>Shim type of Tobii.Interaction.FoundationException</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFoundationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFoundationException.#ctor(Tobii.Interaction.FoundationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFoundationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFoundationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFoundationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFoundationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFoundationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFoundationException.Constructor">
            <summary>Sets the shim of FoundationException.FoundationException()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFoundationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FoundationException.FoundationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFoundationException.ConstructorString">
            <summary>Sets the shim of FoundationException.FoundationException(String message)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFoundationException.ConstructorStringException">
            <summary>Sets the shim of FoundationException.FoundationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow">
            <summary>Shim type of Tobii.Interaction.FreeFloatingVirtualWindow</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.#ctor(Tobii.Interaction.FreeFloatingVirtualWindow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.AllInstances.IsZLinkedToWindowGet">
            <summary>Sets the shim of FreeFloatingVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.Bind(Tobii.Interaction.ICachedBoundsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.ConstructorStringRectangleBooleanInt32">
            <summary>Sets the shim of FreeFloatingVirtualWindow.FreeFloatingVirtualWindow(String name, Rectangle bounds, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimFreeFloatingVirtualWindow.IsZLinkedToWindowGet">
            <summary>Sets the shim of FreeFloatingVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazeAwareBehavior">
            <summary>Shim type of Tobii.Interaction.GazeAwareBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.#ctor(Tobii.Interaction.GazeAwareBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.DelayTimeGet">
            <summary>Sets the shim of GazeAwareBehavior.get_DelayTime()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.DelayTimeSetTimeSpan">
            <summary>Sets the shim of GazeAwareBehavior.set_DelayTime(TimeSpan value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.HandleGazeChangedEventStringBoolean">
            <summary>Sets the shim of GazeAwareBehavior.HandleGazeChangedEvent(String interactorId, Boolean hasGaze)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.HasGazeChangedAddEventHandlerOfHasGazeChangedEventArgs">
            <summary>Sets the shim of GazeAwareBehavior.add_HasGazeChanged(EventHandler`1&lt;HasGazeChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.HasGazeChangedRemoveEventHandlerOfHasGazeChangedEventArgs">
            <summary>Sets the shim of GazeAwareBehavior.remove_HasGazeChanged(EventHandler`1&lt;HasGazeChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.ModeGet">
            <summary>Sets the shim of GazeAwareBehavior.get_Mode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.ModeSetGazeAwareMode">
            <summary>Sets the shim of GazeAwareBehavior.set_Mode(GazeAwareMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.Constructor">
            <summary>Sets the shim of GazeAwareBehavior.GazeAwareBehavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.ConstructorGazeAwareModeNullableOfTimeSpan">
            <summary>Sets the shim of GazeAwareBehavior.GazeAwareBehavior(GazeAwareMode mode, Nullable`1&lt;TimeSpan&gt; delayTime)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.DelayTimeGet">
            <summary>Sets the shim of GazeAwareBehavior.get_DelayTime()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.DelayTimeSetTimeSpan">
            <summary>Sets the shim of GazeAwareBehavior.set_DelayTime(TimeSpan value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.HandleGazeChangedEventStringBoolean">
            <summary>Sets the shim of GazeAwareBehavior.HandleGazeChangedEvent(String interactorId, Boolean hasGaze)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.HasGazeChangedAddEventHandlerOfHasGazeChangedEventArgs">
            <summary>Sets the shim of GazeAwareBehavior.add_HasGazeChanged(EventHandler`1&lt;HasGazeChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.HasGazeChangedRemoveEventHandlerOfHasGazeChangedEventArgs">
            <summary>Sets the shim of GazeAwareBehavior.remove_HasGazeChanged(EventHandler`1&lt;HasGazeChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.IsEnabledGet">
            <summary>Sets the shim of GazeAwareBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.ModeGet">
            <summary>Sets the shim of GazeAwareBehavior.get_Mode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.ModeSetGazeAwareMode">
            <summary>Sets the shim of GazeAwareBehavior.set_Mode(GazeAwareMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of GazeAwareBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions">
            <summary>Shim type of Tobii.Interaction.GazeAwareBehaviorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.HasGazeGazeAwareBehaviorAction">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.HasGaze(GazeAwareBehavior behavior, Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.HasGazeGazeAwareBehaviorBehaviorCallback">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.HasGaze(GazeAwareBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.HasGazeIEnumerableOfGazeAwareBehaviorBehaviorCallback">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.HasGaze(IEnumerable`1&lt;GazeAwareBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.LostGazeGazeAwareBehaviorAction">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.LostGaze(GazeAwareBehavior behavior, Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.LostGazeGazeAwareBehaviorBehaviorCallback">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.LostGaze(GazeAwareBehavior behavior, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.LostGazeIEnumerableOfGazeAwareBehaviorBehaviorCallback">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.LostGaze(IEnumerable`1&lt;GazeAwareBehavior&gt; behaviors, BehaviorCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.SetDelayGazeAwareBehaviorTimeSpan">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.SetDelay(GazeAwareBehavior behavior, TimeSpan delay)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazeAwareBehaviorExtensions.SetDelayIEnumerableOfGazeAwareBehaviorTimeSpan">
            <summary>Sets the shim of GazeAwareBehaviorExtensions.SetDelay(IEnumerable`1&lt;GazeAwareBehavior&gt; behaviors, TimeSpan delay)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointData">
            <summary>Shim type of Tobii.Interaction.GazePointData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointData.#ctor(Tobii.Interaction.GazePointData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.EngineTimestampGet">
            <summary>Sets the shim of GazePointData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.EngineTimestampSetDouble">
            <summary>Sets the shim of GazePointData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.TimestampGet">
            <summary>Sets the shim of GazePointData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.TimestampSetDouble">
            <summary>Sets the shim of GazePointData.set_Timestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.XGet">
            <summary>Sets the shim of GazePointData.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.XSetDouble">
            <summary>Sets the shim of GazePointData.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.YGet">
            <summary>Sets the shim of GazePointData.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.AllInstances.YSetDouble">
            <summary>Sets the shim of GazePointData.set_Y(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.ConstructorDoubleDoubleDoubleDouble">
            <summary>Sets the shim of GazePointData.GazePointData(Double x, Double y, Double timestamp, Double engineTimestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.EngineTimestampGet">
            <summary>Sets the shim of GazePointData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.EngineTimestampSetDouble">
            <summary>Sets the shim of GazePointData.set_EngineTimestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.TimestampGet">
            <summary>Sets the shim of GazePointData.get_Timestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.TimestampSetDouble">
            <summary>Sets the shim of GazePointData.set_Timestamp(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.XGet">
            <summary>Sets the shim of GazePointData.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.XSetDouble">
            <summary>Sets the shim of GazePointData.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.YGet">
            <summary>Sets the shim of GazePointData.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointData.YSetDouble">
            <summary>Sets the shim of GazePointData.set_Y(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointDataBehavior">
            <summary>Shim type of Tobii.Interaction.GazePointDataBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.#ctor(Tobii.Interaction.GazePointDataBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.GazePointDataModeGet">
            <summary>Sets the shim of GazePointDataBehavior.get_GazePointDataMode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.GazePointDataModeSetGazePointDataMode">
            <summary>Sets the shim of GazePointDataBehavior.set_GazePointDataMode(GazePointDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.IsEnabledGet">
            <summary>Sets the shim of GazePointDataBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of GazePointDataBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.GazePointData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.ConstructorGazePointDataMode">
            <summary>Sets the shim of GazePointDataBehavior.GazePointDataBehavior(GazePointDataMode gazePointDataMode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.GazePointDataModeGet">
            <summary>Sets the shim of GazePointDataBehavior.get_GazePointDataMode()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.GazePointDataModeSetGazePointDataMode">
            <summary>Sets the shim of GazePointDataBehavior.set_GazePointDataMode(GazePointDataMode value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.IsEnabledGet">
            <summary>Sets the shim of GazePointDataBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.SetIsEnabledBoolean">
            <summary>Sets the shim of GazePointDataBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of GazePointDataBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointDataStream">
            <summary>Shim type of Tobii.Interaction.GazePointDataStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.#ctor(Tobii.Interaction.GazePointDataStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointDataStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStream.AllInstances.GazePointActionOfDoubleDoubleDouble">
            <summary>Sets the shim of GazePointDataStream.GazePoint(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.Bind(Tobii.Interaction.IDataStream{Tobii.Interaction.GazePointData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStream.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.GazePointData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStream.ConstructorGazePointDataBehaviorActionBoolean">
            <summary>Sets the shim of GazePointDataStream.GazePointDataStream(GazePointDataBehavior gazePointDataBehavior, Action hasSubscribersChanged, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStream.GazePointActionOfDoubleDoubleDouble">
            <summary>Sets the shim of GazePointDataStream.GazePoint(Action`3&lt;Double,Double,Double&gt; action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions">
            <summary>Shim type of Tobii.Interaction.GazePointDataStreamExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGazePointDataStreamExtensions.GetGazePointDataStreamIMutableBehaviorsInteractorGazePointDataModeBoolean">
            <summary>Sets the shim of GazePointDataStreamExtensions.GetGazePointDataStream(IMutableBehaviorsInteractor interactor, GazePointDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent">
            <summary>Shim type of Tobii.Interaction.GlobalDataStreamAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.#ctor(Tobii.Interaction.GlobalDataStreamAgent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.CreateEyePositionStreamBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateEyePositionStream(Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.CreateFixationDataStreamFixationDataModeBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateFixationDataStream(FixationDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.CreateGazePointDataStreamGazePointDataModeBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateGazePointDataStream(GazePointDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.CreateHeadPoseStreamBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateHeadPoseStream(Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.HandleEventInteractionEvent">
            <summary>Sets the shim of GlobalDataStreamAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.OnConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of GlobalDataStreamAgent.OnConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances.SendSnapshotAsync">
            <summary>Sets the shim of GlobalDataStreamAgent.SendSnapshotAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances._CreateEyePositionStreamb__6_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateEyePositionStream&gt;b__6_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances._CreateFixationDataStreamb__8_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateFixationDataStream&gt;b__8_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances._CreateGazePointDataStreamb__9_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateGazePointDataStream&gt;b__9_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.AllInstances._CreateHeadPoseStreamb__7_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateHeadPoseStream&gt;b__7_1()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.ConstructorContext">
            <summary>Sets the shim of GlobalDataStreamAgent.GlobalDataStreamAgent(Context context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.CreateEyePositionStreamBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateEyePositionStream(Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.CreateFixationDataStreamFixationDataModeBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateFixationDataStream(FixationDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.CreateGazePointDataStreamGazePointDataModeBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateGazePointDataStream(GazePointDataMode mode, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.CreateHeadPoseStreamBoolean">
            <summary>Sets the shim of GlobalDataStreamAgent.CreateHeadPoseStream(Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.GetIdForModelBehaviorIBehavior">
            <summary>Sets the shim of GlobalDataStreamAgent.GetIdForModelBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.HandleEventInteractionEvent">
            <summary>Sets the shim of GlobalDataStreamAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.IdGet">
            <summary>Sets the shim of GlobalDataStreamAgent.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.OnConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of GlobalDataStreamAgent.OnConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent.SendSnapshotAsync">
            <summary>Sets the shim of GlobalDataStreamAgent.SendSnapshotAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent._CreateEyePositionStreamb__6_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateEyePositionStream&gt;b__6_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent._CreateFixationDataStreamb__8_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateFixationDataStream&gt;b__8_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent._CreateGazePointDataStreamb__9_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateGazePointDataStream&gt;b__9_1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimGlobalDataStreamAgent._CreateHeadPoseStreamb__7_1">
            <summary>Sets the shim of GlobalDataStreamAgent.&lt;CreateHeadPoseStream&gt;b__7_1()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs">
            <summary>Shim type of Tobii.Interaction.HasGazeChangedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.#ctor(Tobii.Interaction.HasGazeChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.AllInstances.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedEventArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.AllInstances.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedEventArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.ConstructorStringBoolean">
            <summary>Sets the shim of HasGazeChangedEventArgs.HasGazeChangedEventArgs(String interactorId, Boolean hasGaze)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedEventArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHasGazeChangedEventArgs.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedEventArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseBehavior">
            <summary>Shim type of Tobii.Interaction.HeadPoseBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.#ctor(Tobii.Interaction.HeadPoseBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of HeadPoseBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.IsEnabledGet">
            <summary>Sets the shim of HeadPoseBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of HeadPoseBehavior.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of HeadPoseBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.BehaviorTypeGet">
            <summary>Sets the shim of HeadPoseBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.HeadPoseData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.Constructor">
            <summary>Sets the shim of HeadPoseBehavior.HeadPoseBehavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.IsEnabledGet">
            <summary>Sets the shim of HeadPoseBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.IsEnabledSetBoolean">
            <summary>Sets the shim of HeadPoseBehavior.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.SetIsEnabledBoolean">
            <summary>Sets the shim of HeadPoseBehavior.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of HeadPoseBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseData">
            <summary>Shim type of Tobii.Interaction.HeadPoseData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseData.#ctor(Tobii.Interaction.HeadPoseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.EngineTimestampGet">
            <summary>Sets the shim of HeadPoseData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.HasHeadPositionGet">
            <summary>Sets the shim of HeadPoseData.get_HasHeadPosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.HasRotationGet">
            <summary>Sets the shim of HeadPoseData.get_HasRotation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.HeadPositionGet">
            <summary>Sets the shim of HeadPoseData.get_HeadPosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.HeadRotationGet">
            <summary>Sets the shim of HeadPoseData.get_HeadRotation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.AllInstances.TimestampGet">
            <summary>Sets the shim of HeadPoseData.get_Timestamp()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.ConstructorBooleanVector3HeadPoseHasRotationVector3DoubleDouble">
            <summary>Sets the shim of HeadPoseData.HeadPoseData(Boolean hasHeadPosition, Vector3 headPosition, HeadPoseHasRotation hasRotation, Vector3 headRotation, Double timestamp, Double engineTimestamp)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.EngineTimestampGet">
            <summary>Sets the shim of HeadPoseData.get_EngineTimestamp()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.HasHeadPositionGet">
            <summary>Sets the shim of HeadPoseData.get_HasHeadPosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.HasRotationGet">
            <summary>Sets the shim of HeadPoseData.get_HasRotation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.HeadPositionGet">
            <summary>Sets the shim of HeadPoseData.get_HeadPosition()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.HeadRotationGet">
            <summary>Sets the shim of HeadPoseData.get_HeadRotation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseData.TimestampGet">
            <summary>Sets the shim of HeadPoseData.get_Timestamp()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions">
            <summary>Shim type of Tobii.Interaction.HeadPoseDataStreamExtenstions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseDataStreamExtenstions.GetHeadPoseStreamIMutableBehaviorsInteractorBoolean">
            <summary>Sets the shim of HeadPoseDataStreamExtenstions.GetHeadPoseStream(IMutableBehaviorsInteractor interactor, Boolean enabled)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper">
            <summary>Shim type of Tobii.Interaction.HeadPoseEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.#ctor(Tobii.Interaction.HeadPoseEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.ConstructorActionOfStringHeadPoseData">
            <summary>Sets the shim of HeadPoseEventHelper.HeadPoseEventHelper(Action`2&lt;String,HeadPoseData&gt; nextHeadPositionCallback)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseEventHelper.HandleEventStringIBehavior">
            <summary>Sets the shim of HeadPoseEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation">
            <summary>Shim type of Tobii.Interaction.HeadPoseHasRotation</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseHasRotation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseStream">
            <summary>Shim type of Tobii.Interaction.HeadPoseStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.#ctor(Tobii.Interaction.HeadPoseStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHeadPoseStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseStream.AllInstances.HeadPoseActionOfDoubleVector3Vector3">
            <summary>Sets the shim of HeadPoseStream.HeadPose(Action`3&lt;Double,Vector3,Vector3&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.Bind(Tobii.Interaction.IDataStream{Tobii.Interaction.HeadPoseData})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHeadPoseStream.Bind(System.IObservable{Tobii.Interaction.StreamData{Tobii.Interaction.HeadPoseData}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseStream.ConstructorHeadPoseBehaviorActionBoolean">
            <summary>Sets the shim of HeadPoseStream.HeadPoseStream(HeadPoseBehavior headPoseBehavior, Action hasSubscribedChanged, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHeadPoseStream.HeadPoseActionOfDoubleVector3Vector3">
            <summary>Sets the shim of HeadPoseStream.HeadPose(Action`3&lt;Double,Vector3,Vector3&gt; action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHost">
            <summary>Shim type of Tobii.Interaction.Host</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHost.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHost.#ctor(Tobii.Interaction.Host)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AddInteractorAgentIInteractorAgentString">
            <summary>Sets the shim of Host.AddInteractorAgent(IInteractorAgent agent, String processId)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHost.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.AddInteractorAgentIInteractorAgentString">
            <summary>Sets the shim of Host.AddInteractorAgent(IInteractorAgent agent, String processId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.CommandsGet">
            <summary>Sets the shim of Host.get_Commands()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.ContextGet">
            <summary>Sets the shim of Host.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.CreateSnapshotForRect">
            <summary>Sets the shim of Host.CreateSnapshotFor(Rect bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.DisableConnection">
            <summary>Sets the shim of Host.DisableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.Dispose">
            <summary>Sets the shim of Host.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.EnableConnection">
            <summary>Sets the shim of Host.EnableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.ForceSendSnapshotRectIInteractorAgent">
            <summary>Sets the shim of Host.ForceSendSnapshot(Rect bounds, IInteractorAgent agent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.HandleQueryQuery">
            <summary>Sets the shim of Host.HandleQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.OnContextConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of Host.OnContextConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.OnEventInteractionEvent">
            <summary>Sets the shim of Host.OnEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.OnQueryQuery">
            <summary>Sets the shim of Host.OnQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.PopulateSnapshotSnapshotQueryIEnumerableOfIInteractorAgent">
            <summary>Sets the shim of Host.PopulateSnapshot(Snapshot snapshot, Query query, IEnumerable`1&lt;IInteractorAgent&gt; agents)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.RemoveAllInteractorAgents">
            <summary>Sets the shim of Host.RemoveAllInteractorAgents()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.RemoveInteractorAgentIInteractorAgentString">
            <summary>Sets the shim of Host.RemoveInteractorAgent(IInteractorAgent agent, String processId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.RemoveInteractorAgentStringString">
            <summary>Sets the shim of Host.RemoveInteractorAgent(String agentId, String processId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.StatesGet">
            <summary>Sets the shim of Host.get_States()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.StreamsGet">
            <summary>Sets the shim of Host.get_Streams()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances.TryGetInteractorAgentIInteractorAgentOutString">
            <summary>Sets the shim of Host.TryGetInteractorAgent(IInteractorAgent&amp; agent, String agentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.AllInstances._OnContextConnectionStateChangedb__40_0">
            <summary>Sets the shim of Host.&lt;OnContextConnectionStateChanged&gt;b__40_0()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHost.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.CommandsGet">
            <summary>Sets the shim of Host.get_Commands()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.CommitAndDisposeSnapshotSnapshot">
            <summary>Sets the shim of Host.CommitAndDisposeSnapshot(Snapshot snapshot)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.ConstructorString">
            <summary>Sets the shim of Host.Host(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.ContextGet">
            <summary>Sets the shim of Host.get_Context()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.CreateSnapshotForRect">
            <summary>Sets the shim of Host.CreateSnapshotFor(Rect bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.DisableConnection">
            <summary>Sets the shim of Host.DisableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.Dispose">
            <summary>Sets the shim of Host.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.EnableConnection">
            <summary>Sets the shim of Host.EnableConnection()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.EyeXAvailabilityGet">
            <summary>Sets the shim of Host.get_EyeXAvailability()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.ForceSendSnapshotRectIInteractorAgent">
            <summary>Sets the shim of Host.ForceSendSnapshot(Rect bounds, IInteractorAgent agent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.GetAgentIdForEventInteractionEvent">
            <summary>Sets the shim of Host.GetAgentIdForEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.HandleQueryQuery">
            <summary>Sets the shim of Host.HandleQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.OnContextConnectionStateChangedObjectConnectionStateChangedEventArgs">
            <summary>Sets the shim of Host.OnContextConnectionStateChanged(Object sender, ConnectionStateChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.OnEventInteractionEvent">
            <summary>Sets the shim of Host.OnEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.OnQueryQuery">
            <summary>Sets the shim of Host.OnQuery(Query query)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.PopulateSnapshotSnapshotQueryIEnumerableOfIInteractorAgent">
            <summary>Sets the shim of Host.PopulateSnapshot(Snapshot snapshot, Query query, IEnumerable`1&lt;IInteractorAgent&gt; agents)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.RemoveAllInteractorAgents">
            <summary>Sets the shim of Host.RemoveAllInteractorAgents()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.RemoveInteractorAgentIInteractorAgentString">
            <summary>Sets the shim of Host.RemoveInteractorAgent(IInteractorAgent agent, String processId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.RemoveInteractorAgentStringString">
            <summary>Sets the shim of Host.RemoveInteractorAgent(String agentId, String processId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.StatesGet">
            <summary>Sets the shim of Host.get_States()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost.StreamsGet">
            <summary>Sets the shim of Host.get_Streams()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHost._OnContextConnectionStateChangedb__40_0">
            <summary>Sets the shim of Host.&lt;OnContextConnectionStateChanged&gt;b__40_0()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimHostExtensions">
            <summary>Shim type of Tobii.Interaction.HostExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHostExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHostExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHostExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHostExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimHostExtensions.InitializeAndAddAgentOf1HostStringFuncOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Host,System.String,System.Func{System.String,``0},``0})">
            <summary>Sets the shim of HostExtensions.InitializeAndAddAgent(Host host, String agentId, Func`2&lt;String,!!0&gt; factory)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHostExtensions.InitializeVirtualInteractorAgentHostIntPtrString">
            <summary>Sets the shim of HostExtensions.InitializeVirtualInteractorAgent(Host host, IntPtr defaultWindowId, String agentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHostExtensions.InitializeVirtualInteractorAgentHostStringString">
            <summary>Sets the shim of HostExtensions.InitializeVirtualInteractorAgent(Host host, String defaultWindowId, String agentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHostExtensions.InitializeVirtualWindowsAgentHost">
            <summary>Sets the shim of HostExtensions.InitializeVirtualWindowsAgent(Host host)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimHostExtensions.InitializeWpfAgentHostString">
            <summary>Sets the shim of HostExtensions.InitializeWpfAgent(Host host, String agentId)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInputCommandProvider">
            <summary>Shim type of Tobii.Interaction.InputCommandProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInputCommandProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInputCommandProvider.#ctor(Tobii.Interaction.InputCommandProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.ExecuteActionType">
            <summary>Sets the shim of InputCommandProvider.Execute(ActionType type)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendActivation">
            <summary>Sets the shim of InputCommandProvider.SendActivation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendActivationModeOff">
            <summary>Sets the shim of InputCommandProvider.SendActivationModeOff()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendActivationModeOn">
            <summary>Sets the shim of InputCommandProvider.SendActivationModeOn()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendPanningBegin">
            <summary>Sets the shim of InputCommandProvider.SendPanningBegin()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendPanningEnd">
            <summary>Sets the shim of InputCommandProvider.SendPanningEnd()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendPanningStep">
            <summary>Sets the shim of InputCommandProvider.SendPanningStep()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendZoomIn">
            <summary>Sets the shim of InputCommandProvider.SendZoomIn()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.AllInstances.SendZoomOut">
            <summary>Sets the shim of InputCommandProvider.SendZoomOut()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInputCommandProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInputCommandProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.ConstructorContext">
            <summary>Sets the shim of InputCommandProvider.InputCommandProvider(Context context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.ExecuteActionType">
            <summary>Sets the shim of InputCommandProvider.Execute(ActionType type)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendActivation">
            <summary>Sets the shim of InputCommandProvider.SendActivation()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendActivationModeOff">
            <summary>Sets the shim of InputCommandProvider.SendActivationModeOff()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendActivationModeOn">
            <summary>Sets the shim of InputCommandProvider.SendActivationModeOn()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendPanningBegin">
            <summary>Sets the shim of InputCommandProvider.SendPanningBegin()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendPanningEnd">
            <summary>Sets the shim of InputCommandProvider.SendPanningEnd()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendPanningStep">
            <summary>Sets the shim of InputCommandProvider.SendPanningStep()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendZoomIn">
            <summary>Sets the shim of InputCommandProvider.SendZoomIn()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInputCommandProvider.SendZoomOut">
            <summary>Sets the shim of InputCommandProvider.SendZoomOut()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractor">
            <summary>Shim type of Tobii.Interaction.Interactor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.#ctor(Tobii.Interaction.Interactor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AddBehaviorIBehavior">
            <summary>Sets the shim of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.AddBehaviorObserverOf1ObjectActionOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.Action{``0,System.Boolean}})">
            <summary>Sets the shim of Interactor.AddBehaviorObserver(Object key, Action`2&lt;!!0,Boolean&gt; behaviorChanged)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.AddBehaviorIBehavior">
            <summary>Sets the shim of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.AddBehaviorObserverOf1ObjectActionOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tobii.Interaction.Interactor,System.Object,System.Action{``0,System.Boolean}})">
            <summary>Sets the shim of Interactor.AddBehaviorObserver(Object key, Action`2&lt;!!0,Boolean&gt; behaviorChanged)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.BehaviorsGet">
            <summary>Sets the shim of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.GetAdditionalChecksumData">
            <summary>Sets the shim of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.RemoveBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.RemoveBehaviorObserverObject">
            <summary>Sets the shim of Interactor.RemoveBehaviorObserver(Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.AllInstances.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the shim of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.BehaviorsGet">
            <summary>Sets the shim of Interactor.get_Behaviors()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractor.Bind(Tobii.Interaction.IMutableBehaviorsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.ConstructorString">
            <summary>Sets the shim of Interactor.Interactor(String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.GetAdditionalChecksumData">
            <summary>Sets the shim of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the shim of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.RemoveBehaviorObserverObject">
            <summary>Sets the shim of Interactor.RemoveBehaviorObserver(Object key)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the shim of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorAgent">
            <summary>Shim type of Tobii.Interaction.InteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorAgent.#ctor(Tobii.Interaction.InteractorAgent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.Dispose">
            <summary>Sets the shim of InteractorAgent.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.HandleEventInteractionEvent">
            <summary>Sets the shim of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.IdGet">
            <summary>Sets the shim of InteractorAgent.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.IdSetString">
            <summary>Sets the shim of InteractorAgent.set_Id(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.IsDisposedGet">
            <summary>Sets the shim of InteractorAgent.get_IsDisposed()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.PopulateSnapshotWithInteractorSnapshotIInteractor">
            <summary>Sets the shim of InteractorAgent.PopulateSnapshotWithInteractor(Snapshot snapshot, IInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.SnapshotsSuspendedGet">
            <summary>Sets the shim of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.SnapshotsSuspendedSetBoolean">
            <summary>Sets the shim of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.TobiiInteractionIInteractorAgentHandleEventInteractionEvent">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.TobiiInteractionIInteractorAgentPopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.AllInstances.TobiiInteractionIInteractorAgentPreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorAgent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorAgent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorAgent.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorAgent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.ConstructorString">
            <summary>Sets the shim of InteractorAgent.InteractorAgent(String agentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.Dispose">
            <summary>Sets the shim of InteractorAgent.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.DisposeBoolean">
            <summary>Sets the shim of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.HandleEventInteractionEvent">
            <summary>Sets the shim of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.IdGet">
            <summary>Sets the shim of InteractorAgent.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.IdSetString">
            <summary>Sets the shim of InteractorAgent.set_Id(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.IsDisposedGet">
            <summary>Sets the shim of InteractorAgent.get_IsDisposed()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.PopulateSnapshotWithInteractorSnapshotIInteractor">
            <summary>Sets the shim of InteractorAgent.PopulateSnapshotWithInteractor(Snapshot snapshot, IInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.SnapshotsSuspendedGet">
            <summary>Sets the shim of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.SnapshotsSuspendedSetBoolean">
            <summary>Sets the shim of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.TobiiInteractionIInteractorAgentHandleEventInteractionEvent">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.TobiiInteractionIInteractorAgentPopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorAgent.TobiiInteractionIInteractorAgentPreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorAgent.Tobii.Interaction.IInteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorBase">
            <summary>Shim type of Tobii.Interaction.InteractorBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorBase.#ctor(Tobii.Interaction.InteractorBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.GetAdditionalChecksumData">
            <summary>Sets the shim of InteractorBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.HandleEventInteractionEvent">
            <summary>Sets the shim of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IdGet">
            <summary>Sets the shim of InteractorBase.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IdSetString">
            <summary>Sets the shim of InteractorBase.set_Id(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.InvalidateChecksum">
            <summary>Sets the shim of InteractorBase.InvalidateChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IsDeletedGet">
            <summary>Sets the shim of InteractorBase.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of InteractorBase.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IsEnabledGet">
            <summary>Sets the shim of InteractorBase.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of InteractorBase.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.MaskBoundsGet">
            <summary>Sets the shim of InteractorBase.get_MaskBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.MaskBoundsSetNullableOfRectangle">
            <summary>Sets the shim of InteractorBase.set_MaskBounds(Nullable`1&lt;Rectangle&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.MaskGet">
            <summary>Sets the shim of InteractorBase.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.MaskSetIMask">
            <summary>Sets the shim of InteractorBase.set_Mask(IMask value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.ParentIdGet">
            <summary>Sets the shim of InteractorBase.get_ParentId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.ParentIdSetString">
            <summary>Sets the shim of InteractorBase.set_ParentId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.PopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.TobiiInteractionIInteractorHandleEventInteractionEvent">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.TobiiInteractionIInteractorPopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.WindowIdGet">
            <summary>Sets the shim of InteractorBase.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.WindowIdSetString">
            <summary>Sets the shim of InteractorBase.set_WindowId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.ZGet">
            <summary>Sets the shim of InteractorBase.get_Z()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.AllInstances.ZSetDouble">
            <summary>Sets the shim of InteractorBase.set_Z(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorBase.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorBase.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.ConstructorString">
            <summary>Sets the shim of InteractorBase.InteractorBase(String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.GetAdditionalChecksumData">
            <summary>Sets the shim of InteractorBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.HandleEventInteractionEvent">
            <summary>Sets the shim of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IdGet">
            <summary>Sets the shim of InteractorBase.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IdSetString">
            <summary>Sets the shim of InteractorBase.set_Id(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.InvalidateChecksum">
            <summary>Sets the shim of InteractorBase.InvalidateChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IsDeletedGet">
            <summary>Sets the shim of InteractorBase.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IsDeletedSetBoolean">
            <summary>Sets the shim of InteractorBase.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IsEnabledGet">
            <summary>Sets the shim of InteractorBase.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.IsEnabledSetBoolean">
            <summary>Sets the shim of InteractorBase.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.MaskBoundsGet">
            <summary>Sets the shim of InteractorBase.get_MaskBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.MaskBoundsSetNullableOfRectangle">
            <summary>Sets the shim of InteractorBase.set_MaskBounds(Nullable`1&lt;Rectangle&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.MaskGet">
            <summary>Sets the shim of InteractorBase.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.MaskSetIMask">
            <summary>Sets the shim of InteractorBase.set_Mask(IMask value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.ParentIdGet">
            <summary>Sets the shim of InteractorBase.get_ParentId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.ParentIdSetString">
            <summary>Sets the shim of InteractorBase.set_ParentId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.PopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.StaticConstructor">
            <summary>Sets the shim of InteractorBase.InteractorBase()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.TobiiInteractionIInteractorHandleEventInteractionEvent">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.TobiiInteractionIInteractorPopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of InteractorBase.Tobii.Interaction.IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.WindowIdGet">
            <summary>Sets the shim of InteractorBase.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.WindowIdSetString">
            <summary>Sets the shim of InteractorBase.set_WindowId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.ZGet">
            <summary>Sets the shim of InteractorBase.get_Z()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorBase.ZSetDouble">
            <summary>Sets the shim of InteractorBase.set_Z(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorExtensions">
            <summary>Shim type of Tobii.Interaction.InteractorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetBehaviorIInteractorBehaviorType">
            <summary>Sets the shim of InteractorExtensions.GetBehavior(IInteractor interactor, BehaviorType type)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetBehaviorOf1IInteractor``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.IInteractor,``0})">
            <summary>Sets the shim of InteractorExtensions.GetBehavior(IInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetOrAddOf1IEnumerableOfIMutableBehaviorsInteractor``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{Tobii.Interaction.IMutableBehaviorsInteractor},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of InteractorExtensions.GetOrAdd(IEnumerable`1&lt;IMutableBehaviorsInteractor&gt; interactors)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetOrAddOf1IMutableBehaviorsInteractor``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.IMutableBehaviorsInteractor,``0})">
            <summary>Sets the shim of InteractorExtensions.GetOrAdd(IMutableBehaviorsInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetOrAddOf2IEnumerableOfM0ActionOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Action{``1},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of InteractorExtensions.GetOrAdd(IEnumerable`1&lt;!!0&gt; interactors, Action`1&lt;!!1&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.GetOrAddOf2M0ActionOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``1},``0})">
            <summary>Sets the shim of InteractorExtensions.GetOrAdd(!!0 interactor, Action`1&lt;!!1&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.ModifyBehaviorOf1IInteractorActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.IInteractor,System.Action{``0},``0})">
            <summary>Sets the shim of InteractorExtensions.ModifyBehavior(IInteractor interactor, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithActivatableIEnumerableOfIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithActivatable(IEnumerable`1&lt;IMutableBehaviorsInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithActivatableIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithActivatable(IMutableBehaviorsInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithActivatableOf1IEnumerableOfM0ActionOfActivatableBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Action{Tobii.Interaction.ActivatableBehavior},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of InteractorExtensions.WithActivatable(IEnumerable`1&lt;!!0&gt; interactors, Action`1&lt;ActivatableBehavior&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithActivatableOf1M0ActionOfActivatableBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{Tobii.Interaction.ActivatableBehavior},``0})">
            <summary>Sets the shim of InteractorExtensions.WithActivatable(!!0 interactor, Action`1&lt;ActivatableBehavior&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithGazeAwareIEnumerableOfIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithGazeAware(IEnumerable`1&lt;IMutableBehaviorsInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithGazeAwareIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithGazeAware(IMutableBehaviorsInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithGazeAwareOf1IEnumerableOfM0ActionOfGazeAwareBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Action{Tobii.Interaction.GazeAwareBehavior},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of InteractorExtensions.WithGazeAware(IEnumerable`1&lt;!!0&gt; interactors, Action`1&lt;GazeAwareBehavior&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithGazeAwareOf1M0ActionOfGazeAwareBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{Tobii.Interaction.GazeAwareBehavior},``0})">
            <summary>Sets the shim of InteractorExtensions.WithGazeAware(!!0 interactor, Action`1&lt;GazeAwareBehavior&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithPannableIEnumerableOfIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithPannable(IEnumerable`1&lt;IMutableBehaviorsInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithPannableIMutableBehaviorsInteractor">
            <summary>Sets the shim of InteractorExtensions.WithPannable(IMutableBehaviorsInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithPannableOf1IEnumerableOfM0ActionOfPannableBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Action{Tobii.Interaction.PannableBehavior},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of InteractorExtensions.WithPannable(IEnumerable`1&lt;!!0&gt; interactors, Action`1&lt;PannableBehavior&gt; action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorExtensions.WithPannableOf1M0ActionOfPannableBehavior``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{Tobii.Interaction.PannableBehavior},``0})">
            <summary>Sets the shim of InteractorExtensions.WithPannable(!!0 interactor, Action`1&lt;PannableBehavior&gt; action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorRepository`1">
            <summary>Shim type of Tobii.Interaction.InteractorRepository`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.#ctor(Tobii.Interaction.InteractorRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AddT0">
            <summary>Sets the shim of InteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.AddT0">
            <summary>Sets the shim of InteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.Clear">
            <summary>Sets the shim of InteractorRepository`1.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.CollectInteractorsFuncOfT0Boolean">
            <summary>Sets the shim of InteractorRepository`1.CollectInteractors(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.FindFuncOfT0Boolean">
            <summary>Sets the shim of InteractorRepository`1.Find(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorRepository`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.RemoveString">
            <summary>Sets the shim of InteractorRepository`1.Remove(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.SetDirtyBoundsObjectEventArgs">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyBounds(Object source, EventArgs eventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.SetDirtyBoundsT0">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyBounds(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.SetDirtyDataObjectEventArgs">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyData(Object source, EventArgs eventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.SetDirtyDataT0">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyData(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.TobiiInteractionIInteractorProviderFindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.TobiiInteractionIInteractorRepositoryAddIInteractor">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.TobiiInteractionIInteractorRepositoryFindFuncOfIInteractorBoolean">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.AllInstances.TryGetStringIInteractorOut">
            <summary>Sets the shim of InteractorRepository`1.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Bind(Tobii.Interaction.IInteractorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Bind(Tobii.Interaction.IInteractorRepository)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Bind(Tobii.Interaction.IInteractorRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Clear">
            <summary>Sets the shim of InteractorRepository`1.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.CollectInteractorsFuncOfT0Boolean">
            <summary>Sets the shim of InteractorRepository`1.CollectInteractors(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.Constructor">
            <summary>Sets the shim of InteractorRepository`1.InteractorRepository`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.FindFuncOfT0Boolean">
            <summary>Sets the shim of InteractorRepository`1.Find(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorRepository`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.RemoveString">
            <summary>Sets the shim of InteractorRepository`1.Remove(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.SetDirtyBoundsObjectEventArgs">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyBounds(Object source, EventArgs eventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.SetDirtyBoundsT0">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyBounds(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.SetDirtyDataObjectEventArgs">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyData(Object source, EventArgs eventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.SetDirtyDataT0">
            <summary>Sets the shim of InteractorRepository`1.SetDirtyData(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.TobiiInteractionIInteractorProviderFindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.TobiiInteractionIInteractorRepositoryAddIInteractor">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.TobiiInteractionIInteractorRepositoryFindFuncOfIInteractorBoolean">
            <summary>Sets the shim of InteractorRepository`1.Tobii.Interaction.IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimInteractorRepository`1.TryGetStringIInteractorOut">
            <summary>Sets the shim of InteractorRepository`1.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimMask">
            <summary>Shim type of Tobii.Interaction.Mask</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.#ctor(Tobii.Interaction.Mask)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimMask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.ColumnCountGet">
            <summary>Sets the shim of Mask.get_ColumnCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.ColumnCountSetInt32">
            <summary>Sets the shim of Mask.set_ColumnCount(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.DataGet">
            <summary>Sets the shim of Mask.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.DataSetByteArray">
            <summary>Sets the shim of Mask.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.RowCountGet">
            <summary>Sets the shim of Mask.get_RowCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.RowCountSetInt32">
            <summary>Sets the shim of Mask.set_RowCount(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of Mask.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimMask.Bind(Tobii.Interaction.IMask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.ColumnCountGet">
            <summary>Sets the shim of Mask.get_ColumnCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.ColumnCountSetInt32">
            <summary>Sets the shim of Mask.set_ColumnCount(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.ConstructorInt32Int32ByteArray">
            <summary>Sets the shim of Mask.Mask(Int32 columnCount, Int32 rowCount, Byte[] data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.DataGet">
            <summary>Sets the shim of Mask.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.DataSetByteArray">
            <summary>Sets the shim of Mask.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.RowCountGet">
            <summary>Sets the shim of Mask.get_RowCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.RowCountSetInt32">
            <summary>Sets the shim of Mask.set_RowCount(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimMask.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of Mask.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPanEventArgs">
            <summary>Shim type of Tobii.Interaction.PanEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPanEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPanEventArgs.#ctor(Tobii.Interaction.PanEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPanEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.AllInstances.VelocityXGet">
            <summary>Sets the shim of PanEventArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.AllInstances.VelocityXSetDouble">
            <summary>Sets the shim of PanEventArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.AllInstances.VelocityYGet">
            <summary>Sets the shim of PanEventArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.AllInstances.VelocityYSetDouble">
            <summary>Sets the shim of PanEventArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPanEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPanEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.ConstructorStringDoubleDouble">
            <summary>Sets the shim of PanEventArgs.PanEventArgs(String interactorId, Double velocityX, Double velocityY)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.VelocityXGet">
            <summary>Sets the shim of PanEventArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.VelocityXSetDouble">
            <summary>Sets the shim of PanEventArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.VelocityYGet">
            <summary>Sets the shim of PanEventArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPanEventArgs.VelocityYSetDouble">
            <summary>Sets the shim of PanEventArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPannableBehavior">
            <summary>Shim type of Tobii.Interaction.PannableBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.#ctor(Tobii.Interaction.PannableBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.AvailableDirectionsGet">
            <summary>Sets the shim of PannableBehavior.get_AvailableDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.AvailableDirectionsSetPanDirection">
            <summary>Sets the shim of PannableBehavior.set_AvailableDirections(PanDirection value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of PannableBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.HandlePanEventStringDoubleDouble">
            <summary>Sets the shim of PannableBehavior.HandlePanEvent(String interactorId, Double panVelocityX, Double panVelocityY)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.HandleStepEventStringDoubleDoubleDouble">
            <summary>Sets the shim of PannableBehavior.HandleStepEvent(String interactorId, Double stepX, Double stepY, Double stepDuration)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.PanAddEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehavior.add_Pan(EventHandler`1&lt;PanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.PanRemoveEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehavior.remove_Pan(EventHandler`1&lt;PanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of PannableBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.ProfileGet">
            <summary>Sets the shim of PannableBehavior.get_Profile()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.ProfileSetPanningProfile">
            <summary>Sets the shim of PannableBehavior.set_Profile(PanningProfile value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.StepAddEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehavior.add_Step(EventHandler`1&lt;StepEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.StepRemoveEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehavior.remove_Step(EventHandler`1&lt;StepEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AllInstances.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AvailableDirectionsGet">
            <summary>Sets the shim of PannableBehavior.get_AvailableDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.AvailableDirectionsSetPanDirection">
            <summary>Sets the shim of PannableBehavior.set_AvailableDirections(PanDirection value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.BehaviorTypeTobiiInteractionIBehaviorget">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.Bind(Tobii.Interaction.IBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehavior.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.Constructor">
            <summary>Sets the shim of PannableBehavior.PannableBehavior()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.ConstructorPanningProfilePanDirection">
            <summary>Sets the shim of PannableBehavior.PannableBehavior(PanningProfile profile, PanDirection availableDirections)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.HandleEventStringIBehavior">
            <summary>Sets the shim of PannableBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.HandlePanEventStringDoubleDouble">
            <summary>Sets the shim of PannableBehavior.HandlePanEvent(String interactorId, Double panVelocityX, Double panVelocityY)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.HandleStepEventStringDoubleDoubleDouble">
            <summary>Sets the shim of PannableBehavior.HandleStepEvent(String interactorId, Double stepX, Double stepY, Double stepDuration)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.IsEnabledGet">
            <summary>Sets the shim of PannableBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.IsEnabledTobiiInteractionIBehaviorget">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.PanAddEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehavior.add_Pan(EventHandler`1&lt;PanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.PanRemoveEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehavior.remove_Pan(EventHandler`1&lt;PanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of PannableBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.ProfileGet">
            <summary>Sets the shim of PannableBehavior.get_Profile()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.ProfileSetPanningProfile">
            <summary>Sets the shim of PannableBehavior.set_Profile(PanningProfile value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.StepAddEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehavior.add_Step(EventHandler`1&lt;StepEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.StepRemoveEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehavior.remove_Step(EventHandler`1&lt;StepEventArgs&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.TobiiInteractionIBehaviorHandleEventStringIBehavior">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.TobiiInteractionIBehaviorPopulateSnapshotBehaviorIBehavior">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehavior.TobiiInteractionIChecksummableGetChecksum">
            <summary>Sets the shim of PannableBehavior.Tobii.Interaction.IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions">
            <summary>Shim type of Tobii.Interaction.PannableBehaviorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.SetAvailableDirectionsIEnumerableOfPannableBehaviorPanDirection">
            <summary>Sets the shim of PannableBehaviorExtensions.SetAvailableDirections(IEnumerable`1&lt;PannableBehavior&gt; behaviors, PanDirection direction)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.SetAvailableDirectionsPannableBehaviorPanDirection">
            <summary>Sets the shim of PannableBehaviorExtensions.SetAvailableDirections(PannableBehavior behavior, PanDirection direction)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.SetProfileIEnumerableOfPannableBehaviorPanningProfile">
            <summary>Sets the shim of PannableBehaviorExtensions.SetProfile(IEnumerable`1&lt;PannableBehavior&gt; behaviors, PanningProfile profile)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.SetProfilePannableBehaviorPanningProfile">
            <summary>Sets the shim of PannableBehaviorExtensions.SetProfile(PannableBehavior behavior, PanningProfile profile)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenPanIEnumerableOfPannableBehaviorEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenPan(IEnumerable`1&lt;PannableBehavior&gt; behaviors, EventHandler`1&lt;PanEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenPanIEnumerableOfPannableBehaviorPanCallback">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenPan(IEnumerable`1&lt;PannableBehavior&gt; behaviors, PanCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenPanPannableBehaviorEventHandlerOfPanEventArgs">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenPan(PannableBehavior behavior, EventHandler`1&lt;PanEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenPanPannableBehaviorPanCallback">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenPan(PannableBehavior behavior, PanCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenStepIEnumerableOfPannableBehaviorEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenStep(IEnumerable`1&lt;PannableBehavior&gt; behaviors, EventHandler`1&lt;StepEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenStepIEnumerableOfPannableBehaviorStepCallback">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenStep(IEnumerable`1&lt;PannableBehavior&gt; behaviors, StepCallback action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenStepPannableBehaviorEventHandlerOfStepEventArgs">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenStep(PannableBehavior behavior, EventHandler`1&lt;StepEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableBehaviorExtensions.WhenStepPannableBehaviorStepCallback">
            <summary>Sets the shim of PannableBehaviorExtensions.WhenStep(PannableBehavior behavior, StepCallback action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPannableEventHelper">
            <summary>Shim type of Tobii.Interaction.PannableEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableEventHelper.#ctor(Tobii.Interaction.PannableEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimPannableEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableEventHelper.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of PannableEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimPannableEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableEventHelper.ConstructorActionOfStringDoubleDoubleActionOfStringDoubleDoubleDouble">
            <summary>Sets the shim of PannableEventHelper.PannableEventHelper(Action`3&lt;String,Double,Double&gt; panCallback, Action`4&lt;String,Double,Double,Double&gt; stepCallback)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimPannableEventHelper.HandleEventStringIBehavior">
            <summary>Sets the shim of PannableEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimProfileCommandProvider">
            <summary>Shim type of Tobii.Interaction.ProfileCommandProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProfileCommandProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProfileCommandProvider.#ctor(Tobii.Interaction.ProfileCommandProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances.CreateAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.CreateAsync(String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances.DeleteAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.DeleteAsync(String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances.RenameAsyncStringString">
            <summary>Sets the shim of ProfileCommandProvider.RenameAsync(String oldProfileName, String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances.SetCalibrationDataAsyncStringUriStringInt32ByteArray">
            <summary>Sets the shim of ProfileCommandProvider.SetCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfCalibrationPoints, Byte[] data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.AllInstances.SetCurrentAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.SetCurrentAsync(String profileName)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProfileCommandProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProfileCommandProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.ConstructorContext">
            <summary>Sets the shim of ProfileCommandProvider.ProfileCommandProvider(Context context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.CreateAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.CreateAsync(String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.DeleteAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.DeleteAsync(String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.RenameAsyncStringString">
            <summary>Sets the shim of ProfileCommandProvider.RenameAsync(String oldProfileName, String profileName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.SetCalibrationDataAsyncStringUriStringInt32ByteArray">
            <summary>Sets the shim of ProfileCommandProvider.SetCalibrationDataAsync(String profileName, Uri trackerUri, String timestamp, Int32 numOfCalibrationPoints, Byte[] data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProfileCommandProvider.SetCurrentAsyncString">
            <summary>Sets the shim of ProfileCommandProvider.SetCurrentAsync(String profileName)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1">
            <summary>Shim type of Tobii.Interaction.ProviderInteractorAgent`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.#ctor(Tobii.Interaction.ProviderInteractorAgent{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.FilterCachedInteractorsIEnumerableOfIInteractor">
            <summary>Sets the shim of ProviderInteractorAgent`1.FilterCachedInteractors(IEnumerable`1&lt;IInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the shim of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.ProviderGet">
            <summary>Sets the shim of ProviderInteractorAgent`1.get_Provider()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.ProviderSetT0">
            <summary>Sets the shim of ProviderInteractorAgent`1.set_Provider(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances.TryGetInteractorStringIInteractorOut">
            <summary>Sets the shim of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.AllInstances._FilterCachedInteractorsb__14_5String">
            <summary>Sets the shim of ProviderInteractorAgent`1.&lt;FilterCachedInteractors&gt;b__14_5(String interactorId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.ConstructorStringT0NullableOfTimeSpan">
            <summary>Sets the shim of ProviderInteractorAgent`1.ProviderInteractorAgent`1(String agentId, !0 provider, Nullable`1&lt;TimeSpan&gt; cacheTimeout)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.FilterCachedInteractorsIEnumerableOfIInteractor">
            <summary>Sets the shim of ProviderInteractorAgent`1.FilterCachedInteractors(IEnumerable`1&lt;IInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the shim of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.ProviderGet">
            <summary>Sets the shim of ProviderInteractorAgent`1.get_Provider()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.ProviderSetT0">
            <summary>Sets the shim of ProviderInteractorAgent`1.set_Provider(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1.TryGetInteractorStringIInteractorOut">
            <summary>Sets the shim of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimProviderInteractorAgent`1._FilterCachedInteractorsb__14_5String">
            <summary>Sets the shim of ProviderInteractorAgent`1.&lt;FilterCachedInteractors&gt;b__14_5(String interactorId)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimRectangle">
            <summary>Shim type of Tobii.Interaction.Rectangle</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimRectangle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimRectangle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimRectangle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimRectangle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimRectangle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimSize">
            <summary>Shim type of Tobii.Interaction.Size</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimStepEventArgs">
            <summary>Shim type of Tobii.Interaction.StepEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStepEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStepEventArgs.#ctor(Tobii.Interaction.StepEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.DurationGet">
            <summary>Sets the shim of StepEventArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.DurationSetDouble">
            <summary>Sets the shim of StepEventArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.XGet">
            <summary>Sets the shim of StepEventArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.XSetDouble">
            <summary>Sets the shim of StepEventArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.YGet">
            <summary>Sets the shim of StepEventArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.AllInstances.YSetDouble">
            <summary>Sets the shim of StepEventArgs.set_Y(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStepEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStepEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.ConstructorStringDoubleDoubleDouble">
            <summary>Sets the shim of StepEventArgs.StepEventArgs(String interactorId, Double x, Double y, Double duration)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.DurationGet">
            <summary>Sets the shim of StepEventArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.DurationSetDouble">
            <summary>Sets the shim of StepEventArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.XGet">
            <summary>Sets the shim of StepEventArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.XSetDouble">
            <summary>Sets the shim of StepEventArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.YGet">
            <summary>Sets the shim of StepEventArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStepEventArgs.YSetDouble">
            <summary>Sets the shim of StepEventArgs.set_Y(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimStreamData`1">
            <summary>Shim type of Tobii.Interaction.StreamData`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStreamData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStreamData`1.#ctor(Tobii.Interaction.StreamData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimStreamData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.AllInstances.DataGet">
            <summary>Sets the shim of StreamData`1.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.AllInstances.DataSetT0">
            <summary>Sets the shim of StreamData`1.set_Data(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.AllInstances.InteractorIdGet">
            <summary>Sets the shim of StreamData`1.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.AllInstances.InteractorIdSetString">
            <summary>Sets the shim of StreamData`1.set_InteractorId(String value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStreamData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimStreamData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.Constructor">
            <summary>Sets the shim of StreamData`1.StreamData`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.CreateStringT0">
            <summary>Sets the shim of StreamData`1.Create(String interactorId, !0 data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.DataGet">
            <summary>Sets the shim of StreamData`1.get_Data()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.DataSetT0">
            <summary>Sets the shim of StreamData`1.set_Data(!0 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.InteractorIdGet">
            <summary>Sets the shim of StreamData`1.get_InteractorId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimStreamData`1.InteractorIdSetString">
            <summary>Sets the shim of StreamData`1.set_InteractorId(String value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVector2">
            <summary>Shim type of Tobii.Interaction.Vector2</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVector2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVector2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVector3">
            <summary>Shim type of Tobii.Interaction.Vector3</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVector3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVector3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVector3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractor">
            <summary>Shim type of Tobii.Interaction.VirtualInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.#ctor(Tobii.Interaction.VirtualInteractor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.CachedBoundsGet">
            <summary>Sets the shim of VirtualInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.CachedBoundsSetRectangle">
            <summary>Sets the shim of VirtualInteractor.set_CachedBounds(Rectangle value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of VirtualInteractor.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetMaskBoundsNullableOfRectangle">
            <summary>Sets the shim of VirtualInteractor.SetMaskBounds(Nullable`1&lt;Rectangle&gt; maskBounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetMaskIMask">
            <summary>Sets the shim of VirtualInteractor.SetMask(IMask mask)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetMaskInt32Int32ByteArray">
            <summary>Sets the shim of VirtualInteractor.SetMask(Int32 columnCount, Int32 rowCount, Byte[] data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetParentIdString">
            <summary>Sets the shim of VirtualInteractor.SetParentId(String parentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetWindowIdString">
            <summary>Sets the shim of VirtualInteractor.SetWindowId(String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.AllInstances.SetZDouble">
            <summary>Sets the shim of VirtualInteractor.SetZ(Double z)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.Bind(Tobii.Interaction.ICachedBoundsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractor.Bind(Tobii.Interaction.IMutableBehaviorsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.CachedBoundsGet">
            <summary>Sets the shim of VirtualInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.CachedBoundsSetRectangle">
            <summary>Sets the shim of VirtualInteractor.set_CachedBounds(Rectangle value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.ConstructorRectangleStringStringStringDouble">
            <summary>Sets the shim of VirtualInteractor.VirtualInteractor(Rectangle bounds, String id, String parentId, String windowId, Double z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetIsEnabledBoolean">
            <summary>Sets the shim of VirtualInteractor.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetMaskBoundsNullableOfRectangle">
            <summary>Sets the shim of VirtualInteractor.SetMaskBounds(Nullable`1&lt;Rectangle&gt; maskBounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetMaskIMask">
            <summary>Sets the shim of VirtualInteractor.SetMask(IMask mask)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetMaskInt32Int32ByteArray">
            <summary>Sets the shim of VirtualInteractor.SetMask(Int32 columnCount, Int32 rowCount, Byte[] data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetParentIdString">
            <summary>Sets the shim of VirtualInteractor.SetParentId(String parentId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetWindowIdString">
            <summary>Sets the shim of VirtualInteractor.SetWindowId(String windowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractor.SetZDouble">
            <summary>Sets the shim of VirtualInteractor.SetZ(Double z)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent">
            <summary>Shim type of Tobii.Interaction.VirtualInteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.#ctor(Tobii.Interaction.VirtualInteractorAgent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.AllInstances.InteractorsGet">
            <summary>Sets the shim of VirtualInteractorAgent.get_Interactors()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.ConstructorStringString">
            <summary>Sets the shim of VirtualInteractorAgent.VirtualInteractorAgent(String agentId, String defaultWindowId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.CreateInteractorRectangleStringDoubleStringString">
            <summary>Sets the shim of VirtualInteractorAgent.CreateInteractor(Rectangle bounds, String parentId, Double z, String windowId, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent.InteractorsGet">
            <summary>Sets the shim of VirtualInteractorAgent.get_Interactors()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2">
            <summary>Shim type of Tobii.Interaction.VirtualInteractorAgent`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.#ctor(Tobii.Interaction.VirtualInteractorAgent{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AddInteractorForT1">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorFor(!1 data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AddInteractorForT1StringDoubleStringString">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorFor(!1 data, String parentId, Double z, String windowId, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AddInteractorsForT1Array">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorsFor(!1[] datas)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.AddInteractorForT1">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorFor(!1 data)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.AddInteractorForT1StringDoubleStringString">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorFor(!1 data, String parentId, Double z, String windowId, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.AddInteractorsForT1Array">
            <summary>Sets the shim of VirtualInteractorAgent`2.AddInteractorsFor(!1[] datas)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.Clear">
            <summary>Sets the shim of VirtualInteractorAgent`2.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.DefaultWindowIdGet">
            <summary>Sets the shim of VirtualInteractorAgent`2.get_DefaultWindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.DefaultWindowIdSetString">
            <summary>Sets the shim of VirtualInteractorAgent`2.set_DefaultWindowId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.FindInteractorString">
            <summary>Sets the shim of VirtualInteractorAgent`2.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.FindInteractorsStringArray">
            <summary>Sets the shim of VirtualInteractorAgent`2.FindInteractors(String[] ids)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.RemoveInteractorString">
            <summary>Sets the shim of VirtualInteractorAgent`2.RemoveInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.RemoveInteractorsStringArray">
            <summary>Sets the shim of VirtualInteractorAgent`2.RemoveInteractors(String[] ids)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.RepositoryGet">
            <summary>Sets the shim of VirtualInteractorAgent`2.get_Repository()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.Resume">
            <summary>Sets the shim of VirtualInteractorAgent`2.Resume()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances.Suspend">
            <summary>Sets the shim of VirtualInteractorAgent`2.Suspend()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.AllInstances._AddInteractorsForb__13_0T1">
            <summary>Sets the shim of VirtualInteractorAgent`2.&lt;AddInteractorsFor&gt;b__13_0(!1 data)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Clear">
            <summary>Sets the shim of VirtualInteractorAgent`2.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.ConstructorStringStringIInteractorRepositoryOfT0VirtualInteractorAgentCreateInteractorDelegateOfT0T1">
            <summary>Sets the shim of VirtualInteractorAgent`2.VirtualInteractorAgent`2(String agentId, String defaultWindowId, IInteractorRepository`1&lt;!0&gt; repository, CreateInteractorDelegate&lt;!0,!1&gt; createInteractorDelegate)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.DefaultWindowIdGet">
            <summary>Sets the shim of VirtualInteractorAgent`2.get_DefaultWindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.DefaultWindowIdSetString">
            <summary>Sets the shim of VirtualInteractorAgent`2.set_DefaultWindowId(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.DisposeBoolean">
            <summary>Sets the shim of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.FindInteractorString">
            <summary>Sets the shim of VirtualInteractorAgent`2.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.FindInteractorsStringArray">
            <summary>Sets the shim of VirtualInteractorAgent`2.FindInteractors(String[] ids)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.RemoveInteractorString">
            <summary>Sets the shim of VirtualInteractorAgent`2.RemoveInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.RemoveInteractorsStringArray">
            <summary>Sets the shim of VirtualInteractorAgent`2.RemoveInteractors(String[] ids)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.RepositoryGet">
            <summary>Sets the shim of VirtualInteractorAgent`2.get_Repository()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Resume">
            <summary>Sets the shim of VirtualInteractorAgent`2.Resume()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2.Suspend">
            <summary>Sets the shim of VirtualInteractorAgent`2.Suspend()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorAgent`2._AddInteractorsForb__13_0T1">
            <summary>Sets the shim of VirtualInteractorAgent`2.&lt;AddInteractorsFor&gt;b__13_0(!1 data)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions">
            <summary>Shim type of Tobii.Interaction.VirtualInteractorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.MoveCenterToVirtualInteractorVector2">
            <summary>Sets the shim of VirtualInteractorExtensions.MoveCenterTo(VirtualInteractor interactor, Vector2 to)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.MoveToVirtualInteractorVector2">
            <summary>Sets the shim of VirtualInteractorExtensions.MoveTo(VirtualInteractor interactor, Vector2 to)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.MoveVirtualInteractorVector2">
            <summary>Sets the shim of VirtualInteractorExtensions.Move(VirtualInteractor interactor, Vector2 by)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.ResizeAroundCenterVirtualInteractorSize">
            <summary>Sets the shim of VirtualInteractorExtensions.ResizeAroundCenter(VirtualInteractor interactor, Size toSize)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualInteractorExtensions.ResizeVirtualInteractorSize">
            <summary>Sets the shim of VirtualInteractorExtensions.Resize(VirtualInteractor interactor, Size toSize)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowBase">
            <summary>Shim type of Tobii.Interaction.VirtualWindowBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.#ctor(Tobii.Interaction.VirtualWindowBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.AnyDataChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.add_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.AnyDataChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.remove_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.BehaviorsGet">
            <summary>Sets the shim of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.CachedBoundsChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.add_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.CachedBoundsChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.remove_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.CachedBoundsGet">
            <summary>Sets the shim of VirtualWindowBase.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.GetAdditionalChecksumData">
            <summary>Sets the shim of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.GetBounds">
            <summary>Sets the shim of VirtualWindowBase.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.NonOccludingGet">
            <summary>Sets the shim of VirtualWindowBase.get_NonOccluding()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.NonOccludingSetBoolean">
            <summary>Sets the shim of VirtualWindowBase.set_NonOccluding(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.PrivateAnyDataChangedAddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.add_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.PrivateAnyDataChangedRemoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.remove_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.PrivateCachedBoundsChangedAddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.add_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.PrivateCachedBoundsChangedRemoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.remove_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.RaiseAnyDataChanged">
            <summary>Sets the shim of VirtualWindowBase.RaiseAnyDataChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.RaiseCachedBoundsChanged">
            <summary>Sets the shim of VirtualWindowBase.RaiseCachedBoundsChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.SetBoundsRectangle">
            <summary>Sets the shim of VirtualWindowBase.SetBounds(Rectangle bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.TobiiInteractionICachedBoundsInteractorSetIsDeletedBoolean">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AllInstances.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the shim of VirtualWindowBase.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AnyDataChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.add_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.AnyDataChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.remove_AnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.BehaviorsGet">
            <summary>Sets the shim of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.Bind(Tobii.Interaction.ICachedBoundsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowBase.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.CachedBoundsChangedTobiiInteractionICachedBoundsInteractoraddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.add_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.CachedBoundsChangedTobiiInteractionICachedBoundsInteractorremoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.remove_CachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.CachedBoundsGet">
            <summary>Sets the shim of VirtualWindowBase.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.ConstructorStringRectangleBooleanInt32">
            <summary>Sets the shim of VirtualWindowBase.VirtualWindowBase(String name, Rectangle bounds, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.GetAdditionalChecksumData">
            <summary>Sets the shim of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.GetBounds">
            <summary>Sets the shim of VirtualWindowBase.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.NonOccludingGet">
            <summary>Sets the shim of VirtualWindowBase.get_NonOccluding()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.NonOccludingSetBoolean">
            <summary>Sets the shim of VirtualWindowBase.set_NonOccluding(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.PrivateAnyDataChangedAddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.add_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.PrivateAnyDataChangedRemoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.remove_PrivateAnyDataChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.PrivateCachedBoundsChangedAddEventHandler">
            <summary>Sets the shim of VirtualWindowBase.add_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.PrivateCachedBoundsChangedRemoveEventHandler">
            <summary>Sets the shim of VirtualWindowBase.remove_PrivateCachedBoundsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.RaiseAnyDataChanged">
            <summary>Sets the shim of VirtualWindowBase.RaiseAnyDataChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.RaiseCachedBoundsChanged">
            <summary>Sets the shim of VirtualWindowBase.RaiseCachedBoundsChanged()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.SetBoundsRectangle">
            <summary>Sets the shim of VirtualWindowBase.SetBounds(Rectangle bounds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.TobiiInteractionICachedBoundsInteractorSetIsDeletedBoolean">
            <summary>Sets the shim of VirtualWindowBase.Tobii.Interaction.ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowBase.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the shim of VirtualWindowBase.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent">
            <summary>Shim type of Tobii.Interaction.VirtualWindowsAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.#ctor(Tobii.Interaction.VirtualWindowsAgent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.CreateFreeFloatingVirtualWindowAsyncStringRectangleBooleanInt32">
            <summary>Sets the shim of VirtualWindowsAgent.CreateFreeFloatingVirtualWindowAsync(String name, Rectangle bounds, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.CreateZLinkedVirtualWindowAsyncStringRectangleStringBooleanInt32">
            <summary>Sets the shim of VirtualWindowsAgent.CreateZLinkedVirtualWindowAsync(String name, Rectangle bounds, String zLinkedToWindowId, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.DeleteVirtualWindowString">
            <summary>Sets the shim of VirtualWindowsAgent.DeleteVirtualWindow(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.AllInstances.RepositoryGet">
            <summary>Sets the shim of VirtualWindowsAgent.get_Repository()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.ConstructorHost">
            <summary>Sets the shim of VirtualWindowsAgent.VirtualWindowsAgent(Host host)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.CreateFreeFloatingVirtualWindowAsyncStringRectangleBooleanInt32">
            <summary>Sets the shim of VirtualWindowsAgent.CreateFreeFloatingVirtualWindowAsync(String name, Rectangle bounds, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.CreateZLinkedVirtualWindowAsyncStringRectangleStringBooleanInt32">
            <summary>Sets the shim of VirtualWindowsAgent.CreateZLinkedVirtualWindowAsync(String name, Rectangle bounds, String zLinkedToWindowId, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.DeleteVirtualWindowString">
            <summary>Sets the shim of VirtualWindowsAgent.DeleteVirtualWindow(String name)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsAgent.RepositoryGet">
            <summary>Sets the shim of VirtualWindowsAgent.get_Repository()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository">
            <summary>Shim type of Tobii.Interaction.VirtualWindowsRepository</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.#ctor(Tobii.Interaction.VirtualWindowsRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AddVirtualWindowBase">
            <summary>Sets the shim of VirtualWindowsRepository.Add(VirtualWindowBase interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances.AddVirtualWindowBase">
            <summary>Sets the shim of VirtualWindowsRepository.Add(VirtualWindowBase interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances.FindIntersectingAsync">
            <summary>Sets the shim of VirtualWindowsRepository.FindIntersectingAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsRepository.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances.HasPendingChangesGet">
            <summary>Sets the shim of VirtualWindowsRepository.get_HasPendingChanges()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.AllInstances.SetDirtyDataVirtualWindowBase">
            <summary>Sets the shim of VirtualWindowsRepository.SetDirtyData(VirtualWindowBase interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.Bind(Tobii.Interaction.IInteractorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.Bind(Tobii.Interaction.IInteractorRepository)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.Bind(Tobii.Interaction.IInteractorRepository{Tobii.Interaction.VirtualWindowBase})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.Constructor">
            <summary>Sets the shim of VirtualWindowsRepository.VirtualWindowsRepository()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.FindIntersectingAsync">
            <summary>Sets the shim of VirtualWindowsRepository.FindIntersectingAsync()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of VirtualWindowsRepository.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.HasPendingChangesGet">
            <summary>Sets the shim of VirtualWindowsRepository.get_HasPendingChanges()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimVirtualWindowsRepository.SetDirtyDataVirtualWindowBase">
            <summary>Sets the shim of VirtualWindowsRepository.SetDirtyData(VirtualWindowBase interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimWpfInteractorProvider">
            <summary>Shim type of Tobii.Interaction.WpfInteractorProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.#ctor(Tobii.Interaction.WpfInteractorProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.Bind(Tobii.Interaction.IInteractorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.Constructor">
            <summary>Sets the shim of WpfInteractorProvider.WpfInteractorProvider()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider.CreateInteractorInstanceFrameworkElementWpfInteractorAgentOfWpfInteractorString">
            <summary>Sets the shim of WpfInteractorProvider.CreateInteractorInstance(FrameworkElement element, WpfInteractorAgent`1&lt;WpfInteractor&gt; sender, String id)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1">
            <summary>Shim type of Tobii.Interaction.WpfInteractorProvider`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.#ctor(Tobii.Interaction.WpfInteractorProvider{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AddInteractorsForIEnumerableOfFrameworkElementWpfInteractorAgentOfT0">
            <summary>Sets the shim of WpfInteractorProvider`1.AddInteractorsFor(IEnumerable`1&lt;FrameworkElement&gt; elements, WpfInteractorAgent`1&lt;!0&gt; sender)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.AddInteractorsForIEnumerableOfFrameworkElementWpfInteractorAgentOfT0">
            <summary>Sets the shim of WpfInteractorProvider`1.AddInteractorsFor(IEnumerable`1&lt;FrameworkElement&gt; elements, WpfInteractorAgent`1&lt;!0&gt; sender)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.Clear">
            <summary>Sets the shim of WpfInteractorProvider`1.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.CreateInteractorFrameworkElementWpfInteractorAgentOfT0String">
            <summary>Sets the shim of WpfInteractorProvider`1.CreateInteractor(FrameworkElement element, WpfInteractorAgent`1&lt;!0&gt; sender, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.Dispose">
            <summary>Sets the shim of WpfInteractorProvider`1.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.FindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.FindInteractorString">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.FindInteractorsInTopLevelElementAsyncFrameworkElementQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractorsInTopLevelElementAsync(FrameworkElement topLevelElement, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.GetAllTopLevelElements">
            <summary>Sets the shim of WpfInteractorProvider`1.GetAllTopLevelElements()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.NotifyInteractorBoundT0">
            <summary>Sets the shim of WpfInteractorProvider`1.NotifyInteractorBound(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.NotifyInteractorUnboundT0">
            <summary>Sets the shim of WpfInteractorProvider`1.NotifyInteractorUnbound(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.RemoveInteractorT0">
            <summary>Sets the shim of WpfInteractorProvider`1.RemoveInteractor(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.TobiiInteractionIInteractorProviderFindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.Tobii.Interaction.IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.TryFindElementsWithinQueryBoundsFrameworkElementQueryIEnumerableOfFrameworkElementOut">
            <summary>Sets the shim of WpfInteractorProvider`1.TryFindElementsWithinQueryBounds(FrameworkElement topLevelElement, Query query, IEnumerable`1&lt;FrameworkElement&gt;&amp; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.AllInstances.TryGetStringIInteractorOut">
            <summary>Sets the shim of WpfInteractorProvider`1.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.BeginInvokeOnDispatcherWithCheckOf1DispatcherFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of WpfInteractorProvider`1.BeginInvokeOnDispatcherWithCheck(Dispatcher dispatcher, Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.Bind(Tobii.Interaction.IInteractorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.Clear">
            <summary>Sets the shim of WpfInteractorProvider`1.Clear()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.ConstructorWpfInteractorProviderCreateInteractorDelegateOfT0">
            <summary>Sets the shim of WpfInteractorProvider`1.WpfInteractorProvider`1(CreateInteractorDelegate&lt;!0&gt; createInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.CreateInteractorFrameworkElementWpfInteractorAgentOfT0String">
            <summary>Sets the shim of WpfInteractorProvider`1.CreateInteractor(FrameworkElement element, WpfInteractorAgent`1&lt;!0&gt; sender, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.DispatchWithCheckDispatcherAction">
            <summary>Sets the shim of WpfInteractorProvider`1.DispatchWithCheck(Dispatcher dispatcher, Action operation)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.Dispose">
            <summary>Sets the shim of WpfInteractorProvider`1.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.FindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.FindInteractorString">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.FindInteractorsInTopLevelElementAsyncFrameworkElementQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.FindInteractorsInTopLevelElementAsync(FrameworkElement topLevelElement, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.GetAllTopLevelElements">
            <summary>Sets the shim of WpfInteractorProvider`1.GetAllTopLevelElements()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.NotifyInteractorBoundT0">
            <summary>Sets the shim of WpfInteractorProvider`1.NotifyInteractorBound(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.NotifyInteractorUnboundT0">
            <summary>Sets the shim of WpfInteractorProvider`1.NotifyInteractorUnbound(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.RemoveInteractorT0">
            <summary>Sets the shim of WpfInteractorProvider`1.RemoveInteractor(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.TobiiInteractionIInteractorProviderFindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the shim of WpfInteractorProvider`1.Tobii.Interaction.IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.TryCatchWithTaskCompletionSourceOf1FuncOfM0TaskCompletionSourceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0},System.Threading.Tasks.TaskCompletionSource{``0}})">
            <summary>Sets the shim of WpfInteractorProvider`1.TryCatchWithTaskCompletionSource(Func`1&lt;!!0&gt; operation, TaskCompletionSource`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.TryFindElementsWithinQueryBoundsFrameworkElementQueryIEnumerableOfFrameworkElementOut">
            <summary>Sets the shim of WpfInteractorProvider`1.TryFindElementsWithinQueryBounds(FrameworkElement topLevelElement, Query query, IEnumerable`1&lt;FrameworkElement&gt;&amp; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimWpfInteractorProvider`1.TryGetStringIInteractorOut">
            <summary>Sets the shim of WpfInteractorProvider`1.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow">
            <summary>Shim type of Tobii.Interaction.ZLinkedVirtualWindow</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.#ctor(Tobii.Interaction.ZLinkedVirtualWindow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.AllInstances.IsZLinkedToWindowGet">
            <summary>Sets the shim of ZLinkedVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.Bind(Tobii.Interaction.ICachedBoundsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.ConstructorStringRectangleStringBooleanInt32">
            <summary>Sets the shim of ZLinkedVirtualWindow.ZLinkedVirtualWindow(String name, Rectangle bounds, String zLinkedWindowId, Boolean nonOccluding, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.ShimZLinkedVirtualWindow.IsZLinkedToWindowGet">
            <summary>Sets the shim of ZLinkedVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubActivatableBehavior">
            <summary>Stub type of Tobii.Interaction.ActivatableBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivatableBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivatableBehavior.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivatableBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivatableBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivatableBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivatableBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivatableBehavior.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubActivatableBehavior.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs">
            <summary>Stub type of Tobii.Interaction.ActivationFocusChangedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActivationFocusChangedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubActivationFocusChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubBehaviorEventArgs">
            <summary>Stub type of Tobii.Interaction.BehaviorEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubBehaviorEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubBehaviorEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubBehaviorEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubBehaviorEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubBehaviorEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubBehaviorEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubCachedBoundsInteractor">
            <summary>Stub type of Tobii.Interaction.CachedBoundsInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.#ctor(Tobii.Interaction.Rectangle,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.AddBehavior(Tobii.Interaction.IBehavior)">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.AddBehaviorIBehavior">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.Behaviors">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.BehaviorsGet">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.GetAdditionalChecksumData">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.GetAdditionalChecksumData01">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.InitializeStub">
            <summary>Initializes a new instance of type StubCachedBoundsInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.RemoveBehavior(Tobii.Interaction.Framework.BehaviorType)">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubCachedBoundsInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubDataStreamBase`2">
            <summary>Stub type of Tobii.Interaction.DataStreamBase`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubDataStreamBase`2.#ctor(`0,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBase`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubDataStreamBase`2.InitializeStub">
            <summary>Initializes a new instance of type StubDataStreamBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBase`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBase`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1">
            <summary>Stub type of Tobii.Interaction.DataStreamBehaviorBase`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubDataStreamBehaviorBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubDataStreamBehaviorBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEngineStateObserver`1">
            <summary>Stub type of Tobii.Interaction.EngineStateObserver`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateObserver`1.#ctor(Tobii.Interaction.Model.IContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateObserver`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateObserver`1.Dispose(System.Boolean)">
            <summary>Sets the stub of EngineStateObserver`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubEngineStateObserver`1.DisposeBoolean">
            <summary>Sets the stub of EngineStateObserver`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateObserver`1.ExtractValue(Tobii.Interaction.Model.StateBag)">
            <summary>Sets the stub of EngineStateObserver`1.ExtractValue(StateBag stateBag)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubEngineStateObserver`1.ExtractValueStateBag">
            <summary>Sets the stub of EngineStateObserver`1.ExtractValue(StateBag stateBag)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateObserver`1.InitializeStub">
            <summary>Initializes a new instance of type StubEngineStateObserver</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateObserver`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateObserver`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEngineStateProvider">
            <summary>Stub type of Tobii.Interaction.EngineStateProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateProvider.#ctor(Tobii.Interaction.Model.IContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEngineStateProvider.InitializeStub">
            <summary>Initializes a new instance of type StubEngineStateProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEngineStateProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEventHandlingBase">
            <summary>Stub type of Tobii.Interaction.EventHandlingBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEventHandlingBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEventHandlingBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEventHandlingBase.InitializeStub">
            <summary>Initializes a new instance of type StubEventHandlingBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEventHandlingBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEventHandlingBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEventHandlingBase.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubEventHandlingBase.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEyePositionBehavior">
            <summary>Stub type of Tobii.Interaction.EyePositionBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubEyePositionBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEyePositionData">
            <summary>Stub type of Tobii.Interaction.EyePositionData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionData.#ctor(System.Boolean,System.Boolean,Tobii.Interaction.Vector3,Tobii.Interaction.Vector3,Tobii.Interaction.Vector3,Tobii.Interaction.Vector3,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionData.InitializeStub">
            <summary>Initializes a new instance of type StubEyePositionData</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubEyePositionStream">
            <summary>Stub type of Tobii.Interaction.EyePositionStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionStream.#ctor(Tobii.Interaction.EyePositionBehavior,System.Action,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubEyePositionStream.InitializeStub">
            <summary>Initializes a new instance of type StubEyePositionStream</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubEyePositionStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubFixationDataBehavior">
            <summary>Stub type of Tobii.Interaction.FixationDataBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFixationDataBehavior.#ctor(Tobii.Interaction.Framework.FixationDataMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFixationDataBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubFixationDataBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubFixationDataStream">
            <summary>Stub type of Tobii.Interaction.FixationDataStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFixationDataStream.#ctor(Tobii.Interaction.FixationDataBehavior,System.Action,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFixationDataStream.InitializeStub">
            <summary>Initializes a new instance of type StubFixationDataStream</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFixationDataStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubFoundationException">
            <summary>Stub type of Tobii.Interaction.FoundationException</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFoundationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFoundationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.InitializeStub">
            <summary>Initializes a new instance of type StubFoundationException</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFoundationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFoundationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFoundationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow">
            <summary>Stub type of Tobii.Interaction.FreeFloatingVirtualWindow</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.#ctor(System.String,Tobii.Interaction.Rectangle,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.Behaviors">
            <summary>Sets the stub of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.BehaviorsGet">
            <summary>Sets the stub of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.GetAdditionalChecksumData">
            <summary>Sets the stub of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.GetAdditionalChecksumData01">
            <summary>Sets the stub of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.InitializeStub">
            <summary>Initializes a new instance of type StubFreeFloatingVirtualWindow</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.IsZLinkedToWindow">
            <summary>Sets the stub of FreeFloatingVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.IsZLinkedToWindowGet">
            <summary>Sets the stub of FreeFloatingVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubFreeFloatingVirtualWindow.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubGazeAwareBehavior">
            <summary>Stub type of Tobii.Interaction.GazeAwareBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazeAwareBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazeAwareBehavior.#ctor(Tobii.Interaction.Framework.GazeAwareMode,System.Nullable{System.TimeSpan})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazeAwareBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazeAwareBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubGazeAwareBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazeAwareBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazeAwareBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazeAwareBehavior.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubGazeAwareBehavior.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubGazePointDataBehavior">
            <summary>Stub type of Tobii.Interaction.GazePointDataBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazePointDataBehavior.#ctor(Tobii.Interaction.Framework.GazePointDataMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazePointDataBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubGazePointDataBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubGazePointDataStream">
            <summary>Stub type of Tobii.Interaction.GazePointDataStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazePointDataStream.#ctor(Tobii.Interaction.GazePointDataBehavior,System.Action,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubGazePointDataStream.InitializeStub">
            <summary>Initializes a new instance of type StubGazePointDataStream</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubGazePointDataStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubHeadPoseBehavior">
            <summary>Stub type of Tobii.Interaction.HeadPoseBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubHeadPoseBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubHeadPoseData">
            <summary>Stub type of Tobii.Interaction.HeadPoseData</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseData.#ctor(System.Boolean,Tobii.Interaction.Vector3,Tobii.Interaction.HeadPoseHasRotation,Tobii.Interaction.Vector3,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseData.InitializeStub">
            <summary>Initializes a new instance of type StubHeadPoseData</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubHeadPoseEventHelper">
            <summary>Stub type of Tobii.Interaction.HeadPoseEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseEventHelper.#ctor(System.Action{System.String,Tobii.Interaction.HeadPoseData})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseEventHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseEventHelper.InitializeStub">
            <summary>Initializes a new instance of type StubHeadPoseEventHelper</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseEventHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseEventHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubHeadPoseStream">
            <summary>Stub type of Tobii.Interaction.HeadPoseStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseStream.#ctor(Tobii.Interaction.HeadPoseBehavior,System.Action,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubHeadPoseStream.InitializeStub">
            <summary>Initializes a new instance of type StubHeadPoseStream</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubHeadPoseStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIBehavior">
            <summary>Stub type of Tobii.Interaction.IBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIBehavior.#ctor">
            <summary>Initializes a new instance of type StubIBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIBehavior.Tobii#Interaction#IBehavior#BehaviorType">
            <summary>Sets the stub of IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIBehavior.BehaviorTypeGet">
            <summary>Sets the stub of IBehavior.get_BehaviorType()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIBehavior.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIBehavior.HandleEventStringIBehavior">
            <summary>Sets the stub of IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIBehavior.Tobii#Interaction#IBehavior#IsEnabled">
            <summary>Sets the stub of IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIBehavior.IsEnabledGet">
            <summary>Sets the stub of IBehavior.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIBehavior.PopulateSnapshotBehaviorIBehavior">
            <summary>Sets the stub of IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIBehavior.Tobii#Interaction#IBehavior#HandleEvent(System.String,Tobii.Interaction.Model.IBehavior)">
            <summary>Sets the stub of IBehavior.HandleEvent(String interactorId, IBehavior eventBehavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIBehavior.Tobii#Interaction#IBehavior#PopulateSnapshotBehavior(Tobii.Interaction.Model.IBehavior)">
            <summary>Sets the stub of IBehavior.PopulateSnapshotBehavior(IBehavior targetBehavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIBehavior.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubICachedBoundsInteractor">
            <summary>Stub type of Tobii.Interaction.ICachedBoundsInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.#ctor">
            <summary>Initializes a new instance of type StubICachedBoundsInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#Behaviors">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.BehaviorsGet">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#ICachedBoundsInteractor#CachedBounds">
            <summary>Sets the stub of ICachedBoundsInteractor.get_CachedBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.CachedBoundsGet">
            <summary>Sets the stub of ICachedBoundsInteractor.get_CachedBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#Id">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.IdGet">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#IsDeleted">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.IsDeletedGet">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#IsEnabled">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.IsEnabledGet">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#Mask">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#MaskBounds">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.MaskBoundsGet">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.MaskGet">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#ParentId">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.ParentIdGet">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.SetIsDeletedBoolean">
            <summary>Sets the stub of ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#ICachedBoundsInteractor#SetIsDeleted(System.Boolean)">
            <summary>Sets the stub of ICachedBoundsInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#WindowId">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.WindowIdGet">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.Tobii#Interaction#IInteractor#Z">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubICachedBoundsInteractor.ZGet">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIChecksummable">
            <summary>Stub type of Tobii.Interaction.IChecksummable</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIChecksummable.#ctor">
            <summary>Initializes a new instance of type StubIChecksummable</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIChecksummable.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIChecksummable.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIDataStream`1">
            <summary>Stub type of Tobii.Interaction.IDataStream`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIDataStream`1.#ctor">
            <summary>Initializes a new instance of type StubIDataStream</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIDataStream`1.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate StubIDataStream.IsEnabled as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIDataStream`1.Tobii#Interaction#IDataStream{TData}#IsEnabled">
            <summary>Sets the stub of IDataStream`1.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIDataStream`1.IsEnabledGet">
            <summary>Sets the stub of IDataStream`1.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIDataStream`1.IsEnabledSetBoolean">
            <summary>Sets the stub of IDataStream`1.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIDataStream`1.SubscribeIObserverOfStreamDataOfT0">
            <summary>Sets the stub of IObservable`1.Subscribe(IObserver`1&lt;!0&gt; observer)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIDataStream`1.System#IObservable{Tobii#Interaction#StreamData{TData}}#Subscribe(System.IObserver{Tobii.Interaction.StreamData{`0}})">
            <summary>Sets the stub of IObservable`1.Subscribe(IObserver`1&lt;!0&gt; observer)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIEngineStateObserver`1">
            <summary>Stub type of Tobii.Interaction.IEngineStateObserver`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.#ctor">
            <summary>Initializes a new instance of type StubIEngineStateObserver</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.Tobii#Interaction#IEngineStateObserver{T}#CurrentValue">
            <summary>Sets the stub of IEngineStateObserver`1.get_CurrentValue()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.CurrentValueGet">
            <summary>Sets the stub of IEngineStateObserver`1.get_CurrentValue()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.Tobii#Interaction#IEngineStateObserver{T}#WhenChanged(System.Action{Tobii.Interaction.EngineStateValue{`0}})">
            <summary>Sets the stub of IEngineStateObserver`1.WhenChanged(Action`1&lt;EngineStateValue`1&lt;!0&gt;&gt; callback)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIEngineStateObserver`1.WhenChangedActionOfEngineStateValueOfT0">
            <summary>Sets the stub of IEngineStateObserver`1.WhenChanged(Action`1&lt;EngineStateValue`1&lt;!0&gt;&gt; callback)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIInteractor">
            <summary>Stub type of Tobii.Interaction.IInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.#ctor">
            <summary>Initializes a new instance of type StubIInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#Behaviors">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.BehaviorsGet">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#Id">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.IdGet">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#IsDeleted">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.IsDeletedGet">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#IsEnabled">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.IsEnabledGet">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#Mask">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#MaskBounds">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.MaskBoundsGet">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.MaskGet">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#ParentId">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.ParentIdGet">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#WindowId">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.WindowIdGet">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractor.Tobii#Interaction#IInteractor#Z">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractor.ZGet">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIInteractorAgent">
            <summary>Stub type of Tobii.Interaction.IInteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorAgent.#ctor">
            <summary>Initializes a new instance of type StubIInteractorAgent</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.HandleEventInteractionEvent">
            <summary>Sets the stub of IInteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractorAgent.Tobii#Interaction#IInteractorAgent#Id">
            <summary>Sets the stub of IInteractorAgent.get_Id()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.IdGet">
            <summary>Sets the stub of IInteractorAgent.get_Id()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of IInteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of IInteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIInteractorAgent.Tobii#Interaction#IInteractorAgent#SnapshotsSuspended">
            <summary>Sets the stub of IInteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorAgent.SnapshotsSuspendedGet">
            <summary>Sets the stub of IInteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorAgent.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorAgent.Tobii#Interaction#IInteractorAgent#HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of IInteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorAgent.Tobii#Interaction#IInteractorAgent#PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of IInteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorAgent.Tobii#Interaction#IInteractorAgent#PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of IInteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIInteractorProvider">
            <summary>Stub type of Tobii.Interaction.IInteractorProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorProvider.#ctor">
            <summary>Initializes a new instance of type StubIInteractorProvider</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorProvider.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorProvider.Tobii#Interaction#IInteractorProvider#FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorProvider.Tobii#Interaction#IInteractorProvider#TryGet(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorProvider.TryGetStringIInteractorOut">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIInteractorRepository">
            <summary>Stub type of Tobii.Interaction.IInteractorRepository</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.#ctor">
            <summary>Initializes a new instance of type StubIInteractorRepository</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.AddIInteractor">
            <summary>Sets the stub of IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.Clear">
            <summary>Sets the stub of IInteractorRepository.Clear()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.FindFuncOfIInteractorBoolean">
            <summary>Sets the stub of IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.RemoveString">
            <summary>Sets the stub of IInteractorRepository.Remove(String interactorId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorProvider#FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorProvider#TryGet(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorRepository#Add(Tobii.Interaction.IInteractor)">
            <summary>Sets the stub of IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorRepository#Clear">
            <summary>Sets the stub of IInteractorRepository.Clear()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorRepository#Find(System.Func{Tobii.Interaction.IInteractor,System.Boolean})">
            <summary>Sets the stub of IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository.Tobii#Interaction#IInteractorRepository#Remove(System.String)">
            <summary>Sets the stub of IInteractorRepository.Remove(String interactorId)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository.TryGetStringIInteractorOut">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIInteractorRepository`1">
            <summary>Stub type of Tobii.Interaction.IInteractorRepository`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIInteractorRepository</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.AddIInteractor">
            <summary>Sets the stub of IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.AddT0">
            <summary>Sets the stub of IInteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Clear">
            <summary>Sets the stub of IInteractorRepository.Clear()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.FindFuncOfIInteractorBoolean">
            <summary>Sets the stub of IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.FindFuncOfT0Boolean">
            <summary>Sets the stub of IInteractorRepository`1.Find(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.RemoveString">
            <summary>Sets the stub of IInteractorRepository.Remove(String interactorId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorProvider#FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of IInteractorProvider.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorProvider#TryGet(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository#Add(Tobii.Interaction.IInteractor)">
            <summary>Sets the stub of IInteractorRepository.Add(IInteractor interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository#Clear">
            <summary>Sets the stub of IInteractorRepository.Clear()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository#Find(System.Func{Tobii.Interaction.IInteractor,System.Boolean})">
            <summary>Sets the stub of IInteractorRepository.Find(Func`2&lt;IInteractor,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository#Remove(System.String)">
            <summary>Sets the stub of IInteractorRepository.Remove(String interactorId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository{TInteractor}#Add(`0)">
            <summary>Sets the stub of IInteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIInteractorRepository`1.Tobii#Interaction#IInteractorRepository{TInteractor}#Find(System.Func{`0,System.Boolean})">
            <summary>Sets the stub of IInteractorRepository`1.Find(Func`2&lt;!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIInteractorRepository`1.TryGetStringIInteractorOut">
            <summary>Sets the stub of IInteractorProvider.TryGet(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIMask">
            <summary>Stub type of Tobii.Interaction.IMask</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMask.#ctor">
            <summary>Initializes a new instance of type StubIMask</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMask.Tobii#Interaction#IMask#ColumnCount">
            <summary>Sets the stub of IMask.get_ColumnCount()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMask.ColumnCountGet">
            <summary>Sets the stub of IMask.get_ColumnCount()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMask.Tobii#Interaction#IMask#Data">
            <summary>Sets the stub of IMask.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMask.DataGet">
            <summary>Sets the stub of IMask.get_Data()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMask.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMask.Tobii#Interaction#IMask#RowCount">
            <summary>Sets the stub of IMask.get_RowCount()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMask.RowCountGet">
            <summary>Sets the stub of IMask.get_RowCount()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMask.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor">
            <summary>Stub type of Tobii.Interaction.IMutableBehaviorsInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.#ctor">
            <summary>Initializes a new instance of type StubIMutableBehaviorsInteractor</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.AddBehaviorIBehavior">
            <summary>Sets the stub of IMutableBehaviorsInteractor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#Behaviors">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.BehaviorsGet">
            <summary>Sets the stub of IInteractor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#Id">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.IdGet">
            <summary>Sets the stub of IInteractor.get_Id()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#IsDeleted">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.IsDeletedGet">
            <summary>Sets the stub of IInteractor.get_IsDeleted()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#IsEnabled">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.IsEnabledGet">
            <summary>Sets the stub of IInteractor.get_IsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#Mask">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#MaskBounds">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.MaskBoundsGet">
            <summary>Sets the stub of IInteractor.get_MaskBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.MaskGet">
            <summary>Sets the stub of IInteractor.get_Mask()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#ParentId">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.ParentIdGet">
            <summary>Sets the stub of IInteractor.get_ParentId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the stub of IMutableBehaviorsInteractor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IChecksummable#GetChecksum">
            <summary>Sets the stub of IChecksummable.GetChecksum()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#GetBounds">
            <summary>Sets the stub of IInteractor.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of IInteractor.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of IInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IMutableBehaviorsInteractor#AddBehavior(Tobii.Interaction.IBehavior)">
            <summary>Sets the stub of IMutableBehaviorsInteractor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IMutableBehaviorsInteractor#RemoveBehavior(Tobii.Interaction.Framework.BehaviorType)">
            <summary>Sets the stub of IMutableBehaviorsInteractor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of IInteractor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#WindowId">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.WindowIdGet">
            <summary>Sets the stub of IInteractor.get_WindowId()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.Tobii#Interaction#IInteractor#Z">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubIMutableBehaviorsInteractor.ZGet">
            <summary>Sets the stub of IInteractor.get_Z()</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubInteractor">
            <summary>Stub type of Tobii.Interaction.Interactor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.AddBehavior(Tobii.Interaction.IBehavior)">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.AddBehaviorIBehavior">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractor.Behaviors">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.BehaviorsGet">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.GetAdditionalChecksumData">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.GetAdditionalChecksumData01">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.GetBounds">
            <summary>Sets the stub of InteractorBase.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.GetBounds01">
            <summary>Sets the stub of InteractorBase.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.InitializeStub">
            <summary>Initializes a new instance of type StubInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.RemoveBehavior(Tobii.Interaction.Framework.BehaviorType)">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractor.TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubInteractorAgent">
            <summary>Stub type of Tobii.Interaction.InteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorAgent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.Dispose(System.Boolean)">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.DisposeBoolean">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.InitializeStub">
            <summary>Initializes a new instance of type StubInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorAgent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorAgent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorAgent.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorAgent.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of InteractorAgent.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorAgent.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of InteractorAgent.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubInteractorBase">
            <summary>Stub type of Tobii.Interaction.InteractorBase</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorBase.Behaviors">
            <summary>Sets the stub of InteractorBase.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.BehaviorsGet">
            <summary>Sets the stub of InteractorBase.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.GetAdditionalChecksumData">
            <summary>Sets the stub of InteractorBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.GetAdditionalChecksumData01">
            <summary>Sets the stub of InteractorBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.GetBounds">
            <summary>Sets the stub of InteractorBase.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.GetBounds01">
            <summary>Sets the stub of InteractorBase.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.InitializeStub">
            <summary>Initializes a new instance of type StubInteractorBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorBase.TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of InteractorBase.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorBase.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of InteractorBase.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubInteractorRepository`1">
            <summary>Stub type of Tobii.Interaction.InteractorRepository`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.Add(`0)">
            <summary>Sets the stub of InteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorRepository`1.AddT0">
            <summary>Sets the stub of InteractorRepository`1.Add(!0 interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorRepository`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorRepository`1.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorRepository`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubInteractorRepository</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubInteractorRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.Remove(System.String)">
            <summary>Sets the stub of InteractorRepository`1.Remove(String interactorId)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorRepository`1.RemoveString">
            <summary>Sets the stub of InteractorRepository`1.Remove(String interactorId)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.SetDirtyBounds(`0)">
            <summary>Sets the stub of InteractorRepository`1.SetDirtyBounds(!0 interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorRepository`1.SetDirtyBoundsT0">
            <summary>Sets the stub of InteractorRepository`1.SetDirtyBounds(!0 interactor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubInteractorRepository`1.SetDirtyData(`0)">
            <summary>Sets the stub of InteractorRepository`1.SetDirtyData(!0 interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubInteractorRepository`1.SetDirtyDataT0">
            <summary>Sets the stub of InteractorRepository`1.SetDirtyData(!0 interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubMask">
            <summary>Stub type of Tobii.Interaction.Mask</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubMask.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubMask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubMask.InitializeStub">
            <summary>Initializes a new instance of type StubMask</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubMask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubMask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubPanEventArgs">
            <summary>Stub type of Tobii.Interaction.PanEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPanEventArgs.#ctor(System.String,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPanEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPanEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubPanEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPanEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPanEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubPannableBehavior">
            <summary>Stub type of Tobii.Interaction.PannableBehavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableBehavior.#ctor(Tobii.Interaction.Framework.PanningProfile,Tobii.Interaction.Framework.PanDirection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubPannableBehavior</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableBehavior.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubPannableBehavior.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubPannableEventHelper">
            <summary>Stub type of Tobii.Interaction.PannableEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableEventHelper.#ctor(System.Action{System.String,System.Double,System.Double},System.Action{System.String,System.Double,System.Double,System.Double})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableEventHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubPannableEventHelper.InitializeStub">
            <summary>Initializes a new instance of type StubPannableEventHelper</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableEventHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubPannableEventHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1">
            <summary>Stub type of Tobii.Interaction.ProviderInteractorAgent`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.#ctor(System.String,`0,System.Nullable{System.TimeSpan})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubProviderInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.Dispose(System.Boolean)">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.DisposeBoolean">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.InitializeStub">
            <summary>Initializes a new instance of type StubProviderInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubProviderInteractorAgent`1.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubStepEventArgs">
            <summary>Stub type of Tobii.Interaction.StepEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubStepEventArgs.#ctor(System.String,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubStepEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubStepEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStepEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubStepEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubStepEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubVirtualInteractor">
            <summary>Stub type of Tobii.Interaction.VirtualInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.#ctor(Tobii.Interaction.Rectangle,System.String,System.String,System.String,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.AddBehavior(Tobii.Interaction.IBehavior)">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.AddBehaviorIBehavior">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractor.Behaviors">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.BehaviorsGet">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.GetAdditionalChecksumData">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.GetAdditionalChecksumData01">
            <summary>Sets the stub of Interactor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.RemoveBehavior(Tobii.Interaction.Framework.BehaviorType)">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractor.TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubVirtualInteractorAgent">
            <summary>Stub type of Tobii.Interaction.VirtualInteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubVirtualInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.Dispose(System.Boolean)">
            <summary>Sets the stub of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.DisposeBoolean">
            <summary>Sets the stub of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2">
            <summary>Stub type of Tobii.Interaction.VirtualInteractorAgent`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.#ctor(System.String,System.String,Tobii.Interaction.IInteractorRepository{`0},Tobii.Interaction.VirtualInteractorAgent{`0,`1}.CreateInteractorDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubVirtualInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.Dispose(System.Boolean)">
            <summary>Sets the stub of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.DisposeBoolean">
            <summary>Sets the stub of VirtualInteractorAgent`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualInteractorAgent`2.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubVirtualWindowsAgent">
            <summary>Stub type of Tobii.Interaction.VirtualWindowsAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.#ctor(Tobii.Interaction.Host)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubVirtualWindowsAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.Dispose(System.Boolean)">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.DisposeBoolean">
            <summary>Sets the stub of InteractorAgent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualWindowsAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of VirtualWindowsAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of VirtualWindowsAgent.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of VirtualWindowsAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of VirtualWindowsAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubVirtualWindowsAgent.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of ProviderInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubWpfInteractorProvider">
            <summary>Stub type of Tobii.Interaction.WpfInteractorProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider.FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubWpfInteractorProvider.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider.InitializeStub">
            <summary>Initializes a new instance of type StubWpfInteractorProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1">
            <summary>Stub type of Tobii.Interaction.WpfInteractorProvider`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.#ctor(Tobii.Interaction.WpfInteractorProvider{`0}.CreateInteractorDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.FindIntersectingAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.FindIntersectingAsyncQueryCancellationToken">
            <summary>Sets the stub of WpfInteractorProvider`1.FindIntersectingAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.InitializeStub">
            <summary>Initializes a new instance of type StubWpfInteractorProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubWpfInteractorProvider`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow">
            <summary>Stub type of Tobii.Interaction.ZLinkedVirtualWindow</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.#ctor(System.String,Tobii.Interaction.Rectangle,System.String,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.Behaviors">
            <summary>Sets the stub of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.BehaviorsGet">
            <summary>Sets the stub of VirtualWindowBase.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.GetAdditionalChecksumData">
            <summary>Sets the stub of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.GetAdditionalChecksumData01">
            <summary>Sets the stub of VirtualWindowBase.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.InitializeStub">
            <summary>Initializes a new instance of type StubZLinkedVirtualWindow</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.InvokeOnDomainThreadAction">
            <summary>Sets the stub of EventHandlingBase.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.IsZLinkedToWindow">
            <summary>Sets the stub of ZLinkedVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.IsZLinkedToWindowGet">
            <summary>Sets the stub of ZLinkedVirtualWindow.get_IsZLinkedToWindow()</summary>
        </member>
        <member name="M:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Fakes.StubZLinkedVirtualWindow.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of InteractorBase.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper">
            <summary>Shim type of Tobii.Interaction.FrameworkSupport.ActivatableEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.#ctor(Tobii.Interaction.FrameworkSupport.ActivatableEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.ConstructorActionOfStringActionOfStringBooleanBoolean">
            <summary>Sets the shim of ActivatableEventHelper.ActivatableEventHelper(Action`1&lt;String&gt; activateCallback, Action`3&lt;String,Boolean,Boolean&gt; activationFocusChangedCallback)</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimActivatableEventHelper.HandleEventStringIBehavior">
            <summary>Sets the shim of ActivatableEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper">
            <summary>Shim type of Tobii.Interaction.FrameworkSupport.GazeAwareEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.#ctor(Tobii.Interaction.FrameworkSupport.GazeAwareEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.AllInstances.HandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.ConstructorActionOfStringBoolean">
            <summary>Sets the shim of GazeAwareEventHelper.GazeAwareEventHelper(Action`2&lt;String,Boolean&gt; gazeChangedCallback)</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.ShimGazeAwareEventHelper.HandleEventStringIBehavior">
            <summary>Sets the shim of GazeAwareEventHelper.HandleEvent(String interactorId, IBehavior behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper">
            <summary>Stub type of Tobii.Interaction.FrameworkSupport.ActivatableEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper.#ctor(System.Action{System.String},System.Action{System.String,System.Boolean,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableEventHelper</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubActivatableEventHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper">
            <summary>Stub type of Tobii.Interaction.FrameworkSupport.GazeAwareEventHelper</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper.#ctor(System.Action{System.String,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper.InitializeStub">
            <summary>Initializes a new instance of type StubGazeAwareEventHelper</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.FrameworkSupport.Fakes.StubGazeAwareEventHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableButtonClickEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.#ctor(Tobii.Interaction.Wpf.ActivatableButtonClickEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.AllInstances.OnEventButtonBaseBehaviorEventArgs">
            <summary>Sets the shim of ActivatableButtonClickEffect.OnEvent(ButtonBase element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.Constructor">
            <summary>Sets the shim of ActivatableButtonClickEffect.ActivatableButtonClickEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableButtonClickEffect.OnEventButtonBaseBehaviorEventArgs">
            <summary>Sets the shim of ActivatableButtonClickEffect.OnEvent(ButtonBase element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableComboBoxDropDownEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.#ctor(Tobii.Interaction.Wpf.ActivatableComboBoxDropDownEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.AllInstances.OnEventComboBoxBehaviorEventArgs">
            <summary>Sets the shim of ActivatableComboBoxDropDownEffect.OnEvent(ComboBox element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.Constructor">
            <summary>Sets the shim of ActivatableComboBoxDropDownEffect.ActivatableComboBoxDropDownEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableComboBoxDropDownEffect.OnEventComboBoxBehaviorEventArgs">
            <summary>Sets the shim of ActivatableComboBoxDropDownEffect.OnEvent(ComboBox element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableExpanderToggleEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.#ctor(Tobii.Interaction.Wpf.ActivatableExpanderToggleEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.AllInstances.OnEventExpanderBehaviorEventArgs">
            <summary>Sets the shim of ActivatableExpanderToggleEffect.OnEvent(Expander element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.Constructor">
            <summary>Sets the shim of ActivatableExpanderToggleEffect.ActivatableExpanderToggleEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableExpanderToggleEffect.OnEventExpanderBehaviorEventArgs">
            <summary>Sets the shim of ActivatableExpanderToggleEffect.OnEvent(Expander element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableListBoxItemSelectEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.#ctor(Tobii.Interaction.Wpf.ActivatableListBoxItemSelectEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.AllInstances.OnEventListBoxItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableListBoxItemSelectEffect.OnEvent(ListBoxItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.Constructor">
            <summary>Sets the shim of ActivatableListBoxItemSelectEffect.ActivatableListBoxItemSelectEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableListBoxItemSelectEffect.OnEventListBoxItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableListBoxItemSelectEffect.OnEvent(ListBoxItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableMenuItemClickEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.#ctor(Tobii.Interaction.Wpf.ActivatableMenuItemClickEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.AllInstances.OnEventMenuItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableMenuItemClickEffect.OnEvent(MenuItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.Constructor">
            <summary>Sets the shim of ActivatableMenuItemClickEffect.ActivatableMenuItemClickEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableMenuItemClickEffect.OnEventMenuItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableMenuItemClickEffect.OnEvent(MenuItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatableTabItemSelectEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.#ctor(Tobii.Interaction.Wpf.ActivatableTabItemSelectEffect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.AllInstances.OnEventTabItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableTabItemSelectEffect.OnEvent(TabItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.Constructor">
            <summary>Sets the shim of ActivatableTabItemSelectEffect.ActivatableTabItemSelectEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatableTabItemSelectEffect.OnEventTabItemBehaviorEventArgs">
            <summary>Sets the shim of ActivatableTabItemSelectEffect.OnEvent(TabItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivatedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.#ctor(Tobii.Interaction.Wpf.ActivatedArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivatedArgs.ConstructorWpfInteractor">
            <summary>Sets the shim of ActivatedArgs.ActivatedArgs(WpfInteractor interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivationFocusChangedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.#ctor(Tobii.Interaction.Wpf.ActivationFocusChangedArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.AllInstances.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.AllInstances.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.AllInstances.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.AllInstances.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.ConstructorWpfInteractorBooleanBoolean">
            <summary>Sets the shim of ActivationFocusChangedArgs.ActivationFocusChangedArgs(WpfInteractor interactor, Boolean hasTentativeActivationFocus, Boolean hasActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedArgs.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivationFocusChangedRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.ActivationFocusChangedRoutedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.InteractorGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.ConstructorBooleanBooleanWpfInteractor">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.ActivationFocusChangedRoutedEventArgs(Boolean hasTentativeActivationFocus, Boolean hasActivationFocus, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.HasActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_HasActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.HasActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_HasActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.HasTentativeActivationFocusGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_HasTentativeActivationFocus()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.HasTentativeActivationFocusSetBoolean">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_HasTentativeActivationFocus(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.InteractorGet">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationFocusChangedRoutedEventArgs.InteractorSetWpfInteractor">
            <summary>Sets the shim of ActivationFocusChangedRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.ActivationRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.ActivationRoutedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.AllInstances.InteractorGet">
            <summary>Sets the shim of ActivationRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of ActivationRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.ConstructorWpfInteractor">
            <summary>Sets the shim of ActivationRoutedEventArgs.ActivationRoutedEventArgs(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.InteractorGet">
            <summary>Sets the shim of ActivationRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimActivationRoutedEventArgs.InteractorSetWpfInteractor">
            <summary>Sets the shim of ActivationRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner">
            <summary>Shim type of Tobii.Interaction.Wpf.AutoPanner</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.#ctor(Tobii.Interaction.Wpf.AutoPanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.AvailablePanDirectionsChangedAddEventHandler">
            <summary>Sets the shim of AutoPanner.add_AvailablePanDirectionsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.AvailablePanDirectionsChangedRemoveEventHandler">
            <summary>Sets the shim of AutoPanner.remove_AvailablePanDirectionsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.AvailablePanDirectionsGet">
            <summary>Sets the shim of AutoPanner.get_AvailablePanDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.AvailablePanDirectionsSetPanDirection">
            <summary>Sets the shim of AutoPanner.set_AvailablePanDirections(PanDirection value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.ClientGet">
            <summary>Sets the shim of AutoPanner.get_Client()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.ClientSetScrollViewer">
            <summary>Sets the shim of AutoPanner.set_Client(ScrollViewer value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.Client_ScrollChangedObjectScrollChangedEventArgs">
            <summary>Sets the shim of AutoPanner.Client_ScrollChanged(Object sender, ScrollChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.ContinuePanningInsideLockWithClockPoint">
            <summary>Sets the shim of AutoPanner.ContinuePanningInsideLockWithClock(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.Dispose">
            <summary>Sets the shim of AutoPanner.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.PanInstantlyPointInt32">
            <summary>Sets the shim of AutoPanner.PanInstantly(Point deltaPixels, Int32 durationMilliseconds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.PixelsToDiuPoint">
            <summary>Sets the shim of AutoPanner.PixelsToDiu(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.StartContinuousPanningPoint">
            <summary>Sets the shim of AutoPanner.StartContinuousPanning(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.StartPanningInsideLockWithClockPoint">
            <summary>Sets the shim of AutoPanner.StartPanningInsideLockWithClock(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.StopContinuousPanning">
            <summary>Sets the shim of AutoPanner.StopContinuousPanning()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.StopPanningInsideLockWithClock">
            <summary>Sets the shim of AutoPanner.StopPanningInsideLockWithClock()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances.UpdateEnabledPanDirections">
            <summary>Sets the shim of AutoPanner.UpdateEnabledPanDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances._Disposeb__21_0">
            <summary>Sets the shim of AutoPanner.&lt;Dispose&gt;b__21_0()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AllInstances._StopContinuousPanningb__23_0">
            <summary>Sets the shim of AutoPanner.&lt;StopContinuousPanning&gt;b__23_0()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AvailablePanDirectionsChangedAddEventHandler">
            <summary>Sets the shim of AutoPanner.add_AvailablePanDirectionsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AvailablePanDirectionsChangedRemoveEventHandler">
            <summary>Sets the shim of AutoPanner.remove_AvailablePanDirectionsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AvailablePanDirectionsGet">
            <summary>Sets the shim of AutoPanner.get_AvailablePanDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.AvailablePanDirectionsSetPanDirection">
            <summary>Sets the shim of AutoPanner.set_AvailablePanDirections(PanDirection value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.ClientGet">
            <summary>Sets the shim of AutoPanner.get_Client()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.ClientSetScrollViewer">
            <summary>Sets the shim of AutoPanner.set_Client(ScrollViewer value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.Client_ScrollChangedObjectScrollChangedEventArgs">
            <summary>Sets the shim of AutoPanner.Client_ScrollChanged(Object sender, ScrollChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.ConstructorScrollViewer">
            <summary>Sets the shim of AutoPanner.AutoPanner(ScrollViewer client)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.ContinuePanningInsideLockWithClockPoint">
            <summary>Sets the shim of AutoPanner.ContinuePanningInsideLockWithClock(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.CreateAnimationWithClockDoubleDoubleDouble">
            <summary>Sets the shim of AutoPanner.CreateAnimationWithClock(Double startPositionDiu, Double velocityDiuPerSecond, Double maxPositionDiu)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.CreateIfPossibleFrameworkElement">
            <summary>Sets the shim of AutoPanner.CreateIfPossible(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.Dispose">
            <summary>Sets the shim of AutoPanner.Dispose()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.LocateScrollViewerFrameworkElement">
            <summary>Sets the shim of AutoPanner.LocateScrollViewer(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.PanInstantlyPointInt32">
            <summary>Sets the shim of AutoPanner.PanInstantly(Point deltaPixels, Int32 durationMilliseconds)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.PixelsToDiuPoint">
            <summary>Sets the shim of AutoPanner.PixelsToDiu(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.StartContinuousPanningPoint">
            <summary>Sets the shim of AutoPanner.StartContinuousPanning(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.StartPanningInsideLockWithClockPoint">
            <summary>Sets the shim of AutoPanner.StartPanningInsideLockWithClock(Point velocityPixelsPerSecond)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.StaticConstructor">
            <summary>Sets the shim of AutoPanner.AutoPanner()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.StopContinuousPanning">
            <summary>Sets the shim of AutoPanner.StopContinuousPanning()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.StopPanningInsideLockWithClock">
            <summary>Sets the shim of AutoPanner.StopPanningInsideLockWithClock()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner.UpdateEnabledPanDirections">
            <summary>Sets the shim of AutoPanner.UpdateEnabledPanDirections()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner._Disposeb__21_0">
            <summary>Sets the shim of AutoPanner.&lt;Dispose&gt;b__21_0()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimAutoPanner._StopContinuousPanningb__23_0">
            <summary>Sets the shim of AutoPanner.&lt;StopContinuousPanning&gt;b__23_0()</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters">
            <summary>Shim type of Tobii.Interaction.Wpf.BehaviorCommandParameters</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.#ctor(Tobii.Interaction.Wpf.BehaviorCommandParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.AllInstances.InteractorGet">
            <summary>Sets the shim of BehaviorCommandParameters.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of BehaviorCommandParameters.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.ConstructorWpfInteractor">
            <summary>Sets the shim of BehaviorCommandParameters.BehaviorCommandParameters(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.InteractorGet">
            <summary>Sets the shim of BehaviorCommandParameters.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviorCommandParameters.InteractorSetWpfInteractor">
            <summary>Sets the shim of BehaviorCommandParameters.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimBehaviors">
            <summary>Shim type of Tobii.Interaction.Wpf.Behaviors</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.AddActivatedHandlerUIElementEventHandlerOfActivationRoutedEventArgs">
            <summary>Sets the shim of Behaviors.AddActivatedHandler(UIElement element, EventHandler`1&lt;ActivationRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.AddActivationFocusChangedHandlerUIElementEventHandlerOfActivationFocusChangedRoutedEventArgs">
            <summary>Sets the shim of Behaviors.AddActivationFocusChangedHandler(UIElement element, EventHandler`1&lt;ActivationFocusChangedRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.AddHasGazeChangedHandlerUIElementEventHandlerOfHasGazeChangedRoutedEventArgs">
            <summary>Sets the shim of Behaviors.AddHasGazeChangedHandler(UIElement element, EventHandler`1&lt;HasGazeChangedRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.AddPanningPanHandlerUIElementEventHandlerOfPanRoutedEventArgs">
            <summary>Sets the shim of Behaviors.AddPanningPanHandler(UIElement element, EventHandler`1&lt;PanRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.AddPanningStepHandlerUIElementEventHandlerOfStepRoutedEventArgs">
            <summary>Sets the shim of Behaviors.AddPanningStepHandler(UIElement element, EventHandler`1&lt;StepRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.BindAttachedCommandOf2FrameworkElementICommandStringStringFuncOfWpfInteractorM1Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Windows.FrameworkElement,System.Windows.Input.ICommand,System.String,System.String,System.Func{Tobii.Interaction.Wpf.WpfInteractor,``1,System.Object}})">
            <summary>Sets the shim of Behaviors.BindAttachedCommand(FrameworkElement element, ICommand command, String commandName, String behaviorEventName, Func`3&lt;WpfInteractor,!!1,Object&gt; createCommandParam)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetActivatedCommandFrameworkElement">
            <summary>Sets the shim of Behaviors.GetActivatedCommand(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetActivationFocusChangedCommandFrameworkElement">
            <summary>Sets the shim of Behaviors.GetActivationFocusChangedCommand(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetGazeAwareDelayTimeFrameworkElement">
            <summary>Sets the shim of Behaviors.GetGazeAwareDelayTime(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetGazeAwareModeFrameworkElement">
            <summary>Sets the shim of Behaviors.GetGazeAwareMode(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetHasActivationFocusFrameworkElement">
            <summary>Sets the shim of Behaviors.GetHasActivationFocus(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetHasGazeChangedCommandFrameworkElement">
            <summary>Sets the shim of Behaviors.GetHasGazeChangedCommand(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetHasGazeFrameworkElement">
            <summary>Sets the shim of Behaviors.GetHasGaze(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetHasTentativeActivationFocusFrameworkElement">
            <summary>Sets the shim of Behaviors.GetHasTentativeActivationFocus(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsActivatableEventEffectEnabledFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsActivatableEventEffectEnabled(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsActivatableFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsActivatable(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsAllEventEffectsEnabledFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsAllEventEffectsEnabled(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsGazeAwareFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsGazeAware(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsOccluderFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsOccluder(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsPanEventEffectEnabledFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsPanEventEffectEnabled(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsPannableFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsPannable(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetIsTentativeFocusEnabledFrameworkElement">
            <summary>Sets the shim of Behaviors.GetIsTentativeFocusEnabled(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetOrCreateInteractorFrameworkElement">
            <summary>Sets the shim of Behaviors.GetOrCreateInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetPanDirectionsFrameworkElement">
            <summary>Sets the shim of Behaviors.GetPanDirections(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetPanningPanCommandFrameworkElement">
            <summary>Sets the shim of Behaviors.GetPanningPanCommand(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetPanningProfileFrameworkElement">
            <summary>Sets the shim of Behaviors.GetPanningProfile(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.GetPanningStepCommandFrameworkElement">
            <summary>Sets the shim of Behaviors.GetPanningStepCommand(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnActivatedCommandChangedFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.OnActivatedCommandChanged(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnActivationFocusChangedCommandChangedFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.OnActivationFocusChangedCommandChanged(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnGazeAwareDelayTimeChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnGazeAwareDelayTimeChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnGazeAwareModeChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnGazeAwareModeChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnHasGazeChangedCommandChangedFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.OnHasGazeChangedCommandChanged(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsActivatableChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsActivatableChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsAvtivatableEventEffectEnabledChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsAvtivatableEventEffectEnabledChanged(FrameworkElement element, DependencyPropertyChangedEventArgs arg2)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsEventEffectEnabledChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsEventEffectEnabledChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsGazeAwareChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsGazeAwareChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsOccluderChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsOccluderChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsPanEventEffectEnabledChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsPanEventEffectEnabledChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsPannableChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsPannableChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnIsTentativeFocusEnabledChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnIsTentativeFocusEnabledChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnPanDirectionsAvailableChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnPanDirectionsAvailableChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnPanningPanCommandChangedFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.OnPanningPanCommandChanged(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnPanningProfileChangedFrameworkElementDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of Behaviors.OnPanningProfileChanged(FrameworkElement element, DependencyPropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.OnPanningStepCommandChangedFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.OnPanningStepCommandChanged(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.RemoveActivatedHandlerUIElementEventHandlerOfActivationRoutedEventArgs">
            <summary>Sets the shim of Behaviors.RemoveActivatedHandler(UIElement element, EventHandler`1&lt;ActivationRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.RemoveActivationFocusChangedHandlerUIElementEventHandlerOfActivationFocusChangedRoutedEventArgs">
            <summary>Sets the shim of Behaviors.RemoveActivationFocusChangedHandler(UIElement element, EventHandler`1&lt;ActivationFocusChangedRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.RemoveHasGazeChangedHandlerUIElementEventHandlerOfHasGazeChangedRoutedEventArgs">
            <summary>Sets the shim of Behaviors.RemoveHasGazeChangedHandler(UIElement element, EventHandler`1&lt;HasGazeChangedRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.RemovePanningPanHandlerUIElementEventHandlerOfPanRoutedEventArgs">
            <summary>Sets the shim of Behaviors.RemovePanningPanHandler(UIElement element, EventHandler`1&lt;PanRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.RemovePanningStepHandlerUIElementEventHandlerOfStepRoutedEventArgs">
            <summary>Sets the shim of Behaviors.RemovePanningStepHandler(UIElement element, EventHandler`1&lt;StepRoutedEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetActivatedCommandFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.SetActivatedCommand(FrameworkElement element, ICommand command)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetActivationFocusChangedCommandFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.SetActivationFocusChangedCommand(FrameworkElement element, ICommand activationFocusChangedCommand)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetGazeAwareDelayTimeFrameworkElementDouble">
            <summary>Sets the shim of Behaviors.SetGazeAwareDelayTime(FrameworkElement element, Double delaytime)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetGazeAwareModeFrameworkElementGazeAwareMode">
            <summary>Sets the shim of Behaviors.SetGazeAwareMode(FrameworkElement element, GazeAwareMode mode)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetHasActivationFocusFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetHasActivationFocus(FrameworkElement element, Boolean hasActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetHasGazeChangedCommandFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.SetHasGazeChangedCommand(FrameworkElement element, ICommand hasGazeChangedCommand)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetHasGazeFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetHasGaze(FrameworkElement element, Boolean hasGaze)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetHasTentativeActivationFocusFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetHasTentativeActivationFocus(FrameworkElement element, Boolean hasTentativeActivationFocus)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsActivatableEventEffectEnabledFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsActivatableEventEffectEnabled(FrameworkElement element, Boolean isEventEffectEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsActivatableFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsActivatable(FrameworkElement element, Boolean isActivatable)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsAllEventEffectsEnabledFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsAllEventEffectsEnabled(FrameworkElement element, Boolean isEventEffectEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsGazeAwareFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsGazeAware(FrameworkElement element, Boolean isGazeAware)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsOccluderFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsOccluder(FrameworkElement element, Boolean isOccluder)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsPanEventEffectEnabledFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsPanEventEffectEnabled(FrameworkElement element, Boolean isEventEffectEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsPannableFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsPannable(FrameworkElement element, Boolean isPannable)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetIsTentativeFocusEnabledFrameworkElementBoolean">
            <summary>Sets the shim of Behaviors.SetIsTentativeFocusEnabled(FrameworkElement element, Boolean isActivatable)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetPanDirectionsFrameworkElementPanDirection">
            <summary>Sets the shim of Behaviors.SetPanDirections(FrameworkElement element, PanDirection panDirections)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetPanningPanCommandFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.SetPanningPanCommand(FrameworkElement element, ICommand panningChangedCommand)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetPanningProfileFrameworkElementPanningProfile">
            <summary>Sets the shim of Behaviors.SetPanningProfile(FrameworkElement element, PanningProfile profile)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.SetPanningStepCommandFrameworkElementICommand">
            <summary>Sets the shim of Behaviors.SetPanningStepCommand(FrameworkElement element, ICommand stepChangedCommand)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimBehaviors.StaticConstructor">
            <summary>Sets the shim of Behaviors.Behaviors()</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1">
            <summary>Shim type of Tobii.Interaction.Wpf.ElementBoundsProviderBase`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.#ctor(Tobii.Interaction.Wpf.ElementBoundsProviderBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ElementBoundsProviderBase`1.get_ElementType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances.GetBoundsFrameworkElement">
            <summary>Sets the shim of ElementBoundsProviderBase`1.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances.PrecedenseGet">
            <summary>Sets the shim of ElementBoundsProviderBase`1.get_Precedense()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances.PrecedenseSetInt32">
            <summary>Sets the shim of ElementBoundsProviderBase`1.set_Precedense(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.AllInstances.TobiiInteractionWpfIElementBoundsProviderGetBoundsFrameworkElement">
            <summary>Sets the shim of ElementBoundsProviderBase`1.Tobii.Interaction.Wpf.IElementBoundsProvider.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.Bind(Tobii.Interaction.Wpf.IElementBoundsProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.Constructor">
            <summary>Sets the shim of ElementBoundsProviderBase`1.ElementBoundsProviderBase`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.ElementTypeGet">
            <summary>Sets the shim of ElementBoundsProviderBase`1.get_ElementType()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.GetBoundsFrameworkElement">
            <summary>Sets the shim of ElementBoundsProviderBase`1.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.PrecedenseGet">
            <summary>Sets the shim of ElementBoundsProviderBase`1.get_Precedense()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.PrecedenseSetInt32">
            <summary>Sets the shim of ElementBoundsProviderBase`1.set_Precedense(Int32 value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementBoundsProviderBase`1.TobiiInteractionWpfIElementBoundsProviderGetBoundsFrameworkElement">
            <summary>Sets the shim of ElementBoundsProviderBase`1.Tobii.Interaction.Wpf.IElementBoundsProvider.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1">
            <summary>Shim type of Tobii.Interaction.Wpf.ElementEventEffect`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.#ctor(Tobii.Interaction.Wpf.ElementEventEffect{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.AllInstances.CanHandleElementFrameworkElement">
            <summary>Sets the shim of ElementEventEffect`1.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.AllInstances.TobiiInteractionWpfIElementEventEffectOnEventFrameworkElementObject">
            <summary>Sets the shim of ElementEventEffect`1.Tobii.Interaction.Wpf.IElementEventEffect.OnEvent(FrameworkElement element, Object args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.CanHandleElementFrameworkElement">
            <summary>Sets the shim of ElementEventEffect`1.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.Constructor">
            <summary>Sets the shim of ElementEventEffect`1.ElementEventEffect`1()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`1.TobiiInteractionWpfIElementEventEffectOnEventFrameworkElementObject">
            <summary>Sets the shim of ElementEventEffect`1.Tobii.Interaction.Wpf.IElementEventEffect.OnEvent(FrameworkElement element, Object args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2">
            <summary>Shim type of Tobii.Interaction.Wpf.ElementEventEffect`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.#ctor(Tobii.Interaction.Wpf.ElementEventEffect{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.AllInstances.CanHandleElementFrameworkElement">
            <summary>Sets the shim of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.AllInstances.OnEventFrameworkElementT1">
            <summary>Sets the shim of ElementEventEffect`2.OnEvent(FrameworkElement element, !1 args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.Bind(Tobii.Interaction.Wpf.IElementEventEffect)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.CanHandleElementFrameworkElement">
            <summary>Sets the shim of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.Constructor">
            <summary>Sets the shim of ElementEventEffect`2.ElementEventEffect`2()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimElementEventEffect`2.OnEventFrameworkElementT1">
            <summary>Sets the shim of ElementEventEffect`2.OnEvent(FrameworkElement element, !1 args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider">
            <summary>Shim type of Tobii.Interaction.Wpf.ExpanderBoundsProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.#ctor(Tobii.Interaction.Wpf.ExpanderBoundsProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.AllInstances.TryGetBoundsExpander">
            <summary>Sets the shim of ExpanderBoundsProvider.TryGetBounds(Expander element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.Bind(Tobii.Interaction.Wpf.IElementBoundsProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.Constructor">
            <summary>Sets the shim of ExpanderBoundsProvider.ExpanderBoundsProvider()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimExpanderBoundsProvider.TryGetBoundsExpander">
            <summary>Sets the shim of ExpanderBoundsProvider.TryGetBounds(Expander element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider">
            <summary>Shim type of Tobii.Interaction.Wpf.FrameworkElementBoundsProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.#ctor(Tobii.Interaction.Wpf.FrameworkElementBoundsProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.AllInstances.TryGetBoundsFrameworkElement">
            <summary>Sets the shim of FrameworkElementBoundsProvider.TryGetBounds(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.Bind(Tobii.Interaction.Wpf.IElementBoundsProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.Constructor">
            <summary>Sets the shim of FrameworkElementBoundsProvider.FrameworkElementBoundsProvider()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementBoundsProvider.TryGetBoundsFrameworkElement">
            <summary>Sets the shim of FrameworkElementBoundsProvider.TryGetBounds(FrameworkElement element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.FrameworkElementEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.#ctor(Tobii.Interaction.Wpf.FrameworkElementEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.AllInstances.ElementGet">
            <summary>Sets the shim of FrameworkElementEventArgs.get_Element()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.AllInstances.ElementSetFrameworkElement">
            <summary>Sets the shim of FrameworkElementEventArgs.set_Element(FrameworkElement value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.ConstructorFrameworkElement">
            <summary>Sets the shim of FrameworkElementEventArgs.FrameworkElementEventArgs(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.ElementGet">
            <summary>Sets the shim of FrameworkElementEventArgs.get_Element()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementEventArgs.ElementSetFrameworkElement">
            <summary>Sets the shim of FrameworkElementEventArgs.set_Element(FrameworkElement value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions">
            <summary>Shim type of Tobii.Interaction.Wpf.FrameworkElementExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.FindAncestorFrameworkElementFuncOfFrameworkElementBoolean">
            <summary>Sets the shim of FrameworkElementExtensions.FindAncestor(FrameworkElement self, Func`2&lt;FrameworkElement,Boolean&gt; condition)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.FindAncestorOf1FrameworkElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.FrameworkElement,``0})">
            <summary>Sets the shim of FrameworkElementExtensions.FindAncestor(FrameworkElement self)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetAncestorsFrameworkElementBoolean">
            <summary>Sets the shim of FrameworkElementExtensions.GetAncestors(FrameworkElement self, Boolean includeSelf)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetInteractorFrameworkElement">
            <summary>Sets the shim of FrameworkElementExtensions.GetInteractor(FrameworkElement self)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetParentDependencyObject">
            <summary>Sets the shim of FrameworkElementExtensions.GetParent(DependencyObject depObj)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetParentFrameworkElement">
            <summary>Sets the shim of FrameworkElementExtensions.GetParent(FrameworkElement self)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetTopLevelElementFrameworkElement">
            <summary>Sets the shim of FrameworkElementExtensions.GetTopLevelElement(FrameworkElement self)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetTopLevelWindowFrameworkElement">
            <summary>Sets the shim of FrameworkElementExtensions.GetTopLevelWindow(FrameworkElement self)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.GetWindowHandleFrameworkElement">
            <summary>Sets the shim of FrameworkElementExtensions.GetWindowHandle(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.ModifyBehaviorOf1FrameworkElementActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Windows.FrameworkElement,System.Action{``0}})">
            <summary>Sets the shim of FrameworkElementExtensions.ModifyBehavior(FrameworkElement element, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.SetInteractorFrameworkElementWpfInteractor">
            <summary>Sets the shim of FrameworkElementExtensions.SetInteractor(FrameworkElement element, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimFrameworkElementExtensions.StaticConstructor">
            <summary>Sets the shim of FrameworkElementExtensions.FrameworkElementExtensions()</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.HasGazeChangedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.#ctor(Tobii.Interaction.Wpf.HasGazeChangedArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.AllInstances.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.AllInstances.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.ConstructorBooleanWpfInteractor">
            <summary>Sets the shim of HasGazeChangedArgs.HasGazeChangedArgs(Boolean hasGaze, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedArgs.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.HasGazeChangedRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.HasGazeChangedRoutedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.AllInstances.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.AllInstances.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.AllInstances.InteractorGet">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.ConstructorBooleanWpfInteractor">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.HasGazeChangedRoutedEventArgs(Boolean hasGaze, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.HasGazeGet">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.get_HasGaze()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.HasGazeSetBoolean">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.set_HasGaze(Boolean value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.InteractorGet">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimHasGazeChangedRoutedEventArgs.InteractorSetWpfInteractor">
            <summary>Sets the shim of HasGazeChangedRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimPanArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.PanArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.#ctor(Tobii.Interaction.Wpf.PanArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.AllInstances.VelocityXGet">
            <summary>Sets the shim of PanArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.AllInstances.VelocityXSetDouble">
            <summary>Sets the shim of PanArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.AllInstances.VelocityYGet">
            <summary>Sets the shim of PanArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.AllInstances.VelocityYSetDouble">
            <summary>Sets the shim of PanArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.ConstructorDoubleDoubleWpfInteractor">
            <summary>Sets the shim of PanArgs.PanArgs(Double velocityX, Double velocityY, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.VelocityXGet">
            <summary>Sets the shim of PanArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.VelocityXSetDouble">
            <summary>Sets the shim of PanArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.VelocityYGet">
            <summary>Sets the shim of PanArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanArgs.VelocityYSetDouble">
            <summary>Sets the shim of PanArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.PanRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.PanRoutedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.InteractorGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of PanRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.VelocityXGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.VelocityXSetDouble">
            <summary>Sets the shim of PanRoutedEventArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.VelocityYGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.AllInstances.VelocityYSetDouble">
            <summary>Sets the shim of PanRoutedEventArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.ConstructorDoubleDoubleWpfInteractor">
            <summary>Sets the shim of PanRoutedEventArgs.PanRoutedEventArgs(Double velocityX, Double velocityY, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.InteractorGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.InteractorSetWpfInteractor">
            <summary>Sets the shim of PanRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.VelocityXGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_VelocityX()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.VelocityXSetDouble">
            <summary>Sets the shim of PanRoutedEventArgs.set_VelocityX(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.VelocityYGet">
            <summary>Sets the shim of PanRoutedEventArgs.get_VelocityY()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimPanRoutedEventArgs.VelocityYSetDouble">
            <summary>Sets the shim of PanRoutedEventArgs.set_VelocityY(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimStepArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.StepArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.#ctor(Tobii.Interaction.Wpf.StepArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.DurationGet">
            <summary>Sets the shim of StepArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.DurationSetDouble">
            <summary>Sets the shim of StepArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.XGet">
            <summary>Sets the shim of StepArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.XSetDouble">
            <summary>Sets the shim of StepArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.YGet">
            <summary>Sets the shim of StepArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.AllInstances.YSetDouble">
            <summary>Sets the shim of StepArgs.set_Y(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.ConstructorDoubleDoubleDoubleWpfInteractor">
            <summary>Sets the shim of StepArgs.StepArgs(Double x, Double y, Double duration, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.DurationGet">
            <summary>Sets the shim of StepArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.DurationSetDouble">
            <summary>Sets the shim of StepArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.XGet">
            <summary>Sets the shim of StepArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.XSetDouble">
            <summary>Sets the shim of StepArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.YGet">
            <summary>Sets the shim of StepArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepArgs.YSetDouble">
            <summary>Sets the shim of StepArgs.set_Y(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs">
            <summary>Shim type of Tobii.Interaction.Wpf.StepRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.StepRoutedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.DurationGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.DurationSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.InteractorGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.InteractorSetWpfInteractor">
            <summary>Sets the shim of StepRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.XGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.XSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.YGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.AllInstances.YSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_Y(Double value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.ConstructorDoubleDoubleDoubleWpfInteractor">
            <summary>Sets the shim of StepRoutedEventArgs.StepRoutedEventArgs(Double x, Double y, Double duration, WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.DurationGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Duration()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.DurationSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_Duration(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.InteractorGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Interactor()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.InteractorSetWpfInteractor">
            <summary>Sets the shim of StepRoutedEventArgs.set_Interactor(WpfInteractor value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.XGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_X()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.XSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_X(Double value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.YGet">
            <summary>Sets the shim of StepRoutedEventArgs.get_Y()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimStepRoutedEventArgs.YSetDouble">
            <summary>Sets the shim of StepRoutedEventArgs.set_Y(Double value)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor">
            <summary>Shim type of Tobii.Interaction.Wpf.WpfInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.#ctor(Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.BindElement">
            <summary>Sets the shim of WpfInteractor.BindElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.CachedBoundsGet">
            <summary>Sets the shim of WpfInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.CachedBoundsSetRectangle">
            <summary>Sets the shim of WpfInteractor.set_CachedBounds(Rectangle value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.DisableActivatableEventEffect">
            <summary>Sets the shim of WpfInteractor.DisableActivatableEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.DisableEventEffects">
            <summary>Sets the shim of WpfInteractor.DisableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.DisablePanEventEffect">
            <summary>Sets the shim of WpfInteractor.DisablePanEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.ElementGet">
            <summary>Sets the shim of WpfInteractor.get_Element()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.ElementSetFrameworkElement">
            <summary>Sets the shim of WpfInteractor.set_Element(FrameworkElement value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.EnableActivatableEventEffect">
            <summary>Sets the shim of WpfInteractor.EnableActivatableEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.EnableEventEffects">
            <summary>Sets the shim of WpfInteractor.EnableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.EnablePanEventEffect">
            <summary>Sets the shim of WpfInteractor.EnablePanEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.EventEffectsEnabledGet">
            <summary>Sets the shim of WpfInteractor.get_EventEffectsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.EventEffectsEnabledSetDictionaryOfStringBoolean">
            <summary>Sets the shim of WpfInteractor.set_EventEffectsEnabled(Dictionary`2&lt;String,Boolean&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.GetAdditionalChecksumData">
            <summary>Sets the shim of WpfInteractor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.GetBounds">
            <summary>Sets the shim of WpfInteractor.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.HasAutoPanner">
            <summary>Sets the shim of WpfInteractor.HasAutoPanner()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.InitializePanningHelper">
            <summary>Sets the shim of WpfInteractor.InitializePanningHelper()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.InvokeOnDomainThreadAction">
            <summary>Sets the shim of WpfInteractor.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.InvokeOnElementAsyncAction">
            <summary>Sets the shim of WpfInteractor.InvokeOnElementAsync(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.IsUnavailableGet">
            <summary>Sets the shim of WpfInteractor.get_IsUnavailable()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.OnElementIsVisibleChangedObjectDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementIsVisibleChanged(Object sender, DependencyPropertyChangedEventArgs dependencyPropertyChangedEventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.OnElementLoadedObjectRoutedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementLoaded(Object sender, RoutedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.OnElementUnloadedObjectRoutedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementUnloaded(Object sender, RoutedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.PopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of WpfInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.Remove">
            <summary>Sets the shim of WpfInteractor.Remove()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.SetEnableEventEffectStringBoolean">
            <summary>Sets the shim of WpfInteractor.SetEnableEventEffect(String eventName, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.SetIsDeletedBoolean">
            <summary>Sets the shim of WpfInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.SetIsEnabledBoolean">
            <summary>Sets the shim of WpfInteractor.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.SetupEventSubscriptions">
            <summary>Sets the shim of WpfInteractor.SetupEventSubscriptions()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.TopLevelElementGet">
            <summary>Sets the shim of WpfInteractor.get_TopLevelElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.TopLevelElementSetFrameworkElement">
            <summary>Sets the shim of WpfInteractor.set_TopLevelElement(FrameworkElement value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.UnbindElement">
            <summary>Sets the shim of WpfInteractor.UnbindElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.UninitializePanningHelper">
            <summary>Sets the shim of WpfInteractor.UninitializePanningHelper()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.Update">
            <summary>Sets the shim of WpfInteractor.Update()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.UpdateAvailablePanningDirectionsPanDirection">
            <summary>Sets the shim of WpfInteractor.UpdateAvailablePanningDirections(PanDirection availablePanDirections)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances.UpdateParentIdAndZStringInt32">
            <summary>Sets the shim of WpfInteractor.UpdateParentIdAndZ(String parentId, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._InitializePanningHelperb__33_0ObjectEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;InitializePanningHelper&gt;b__33_0(Object &lt;sender&gt;, EventArgs &lt;e&gt;)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._SetupEventSubscriptionsb__43_0BehaviorEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_0(BehaviorEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._SetupEventSubscriptionsb__43_1ActivationFocusChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_1(ActivationFocusChangedEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._SetupEventSubscriptionsb__43_2HasGazeChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_2(HasGazeChangedEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._SetupEventSubscriptionsb__43_3PanEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_3(PanEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.AllInstances._SetupEventSubscriptionsb__43_4StepEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_4(StepEventArgs args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Bind(Tobii.Interaction.IChecksummable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Bind(Tobii.Interaction.IInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Bind(Tobii.Interaction.IMutableBehaviorsInteractor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.BindElement">
            <summary>Sets the shim of WpfInteractor.BindElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.CachedBoundsGet">
            <summary>Sets the shim of WpfInteractor.get_CachedBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.CachedBoundsSetRectangle">
            <summary>Sets the shim of WpfInteractor.set_CachedBounds(Rectangle value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.ConstructorFrameworkElementString">
            <summary>Sets the shim of WpfInteractor.WpfInteractor(FrameworkElement element, String id)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.DisableActivatableEventEffect">
            <summary>Sets the shim of WpfInteractor.DisableActivatableEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.DisableEventEffects">
            <summary>Sets the shim of WpfInteractor.DisableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.DisablePanEventEffect">
            <summary>Sets the shim of WpfInteractor.DisablePanEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.ElementGet">
            <summary>Sets the shim of WpfInteractor.get_Element()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.ElementSetFrameworkElement">
            <summary>Sets the shim of WpfInteractor.set_Element(FrameworkElement value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.EnableActivatableEventEffect">
            <summary>Sets the shim of WpfInteractor.EnableActivatableEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.EnableEventEffects">
            <summary>Sets the shim of WpfInteractor.EnableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.EnablePanEventEffect">
            <summary>Sets the shim of WpfInteractor.EnablePanEventEffect()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.EventEffectsEnabledGet">
            <summary>Sets the shim of WpfInteractor.get_EventEffectsEnabled()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.EventEffectsEnabledSetDictionaryOfStringBoolean">
            <summary>Sets the shim of WpfInteractor.set_EventEffectsEnabled(Dictionary`2&lt;String,Boolean&gt; value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.GetAdditionalChecksumData">
            <summary>Sets the shim of WpfInteractor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.GetBounds">
            <summary>Sets the shim of WpfInteractor.GetBounds()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.HasAutoPanner">
            <summary>Sets the shim of WpfInteractor.HasAutoPanner()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.InitializePanningHelper">
            <summary>Sets the shim of WpfInteractor.InitializePanningHelper()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.InvokeOnDomainThreadAction">
            <summary>Sets the shim of WpfInteractor.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.InvokeOnElementAsyncAction">
            <summary>Sets the shim of WpfInteractor.InvokeOnElementAsync(Action action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.IsUnavailableGet">
            <summary>Sets the shim of WpfInteractor.get_IsUnavailable()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.OnElementIsVisibleChangedObjectDependencyPropertyChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementIsVisibleChanged(Object sender, DependencyPropertyChangedEventArgs dependencyPropertyChangedEventArgs)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.OnElementLoadedObjectRoutedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementLoaded(Object sender, RoutedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.OnElementUnloadedObjectRoutedEventArgs">
            <summary>Sets the shim of WpfInteractor.OnElementUnloaded(Object sender, RoutedEventArgs e)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the shim of WpfInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Remove">
            <summary>Sets the shim of WpfInteractor.Remove()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.SetEnableEventEffectStringBoolean">
            <summary>Sets the shim of WpfInteractor.SetEnableEventEffect(String eventName, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.SetIsDeletedBoolean">
            <summary>Sets the shim of WpfInteractor.SetIsDeleted(Boolean isDeleted)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.SetIsEnabledBoolean">
            <summary>Sets the shim of WpfInteractor.SetIsEnabled(Boolean isEnabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.SetupEventSubscriptions">
            <summary>Sets the shim of WpfInteractor.SetupEventSubscriptions()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.TopLevelElementGet">
            <summary>Sets the shim of WpfInteractor.get_TopLevelElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.TopLevelElementSetFrameworkElement">
            <summary>Sets the shim of WpfInteractor.set_TopLevelElement(FrameworkElement value)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.UnbindElement">
            <summary>Sets the shim of WpfInteractor.UnbindElement()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.UninitializePanningHelper">
            <summary>Sets the shim of WpfInteractor.UninitializePanningHelper()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.Update">
            <summary>Sets the shim of WpfInteractor.Update()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.UpdateAvailablePanningDirectionsPanDirection">
            <summary>Sets the shim of WpfInteractor.UpdateAvailablePanningDirections(PanDirection availablePanDirections)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor.UpdateParentIdAndZStringInt32">
            <summary>Sets the shim of WpfInteractor.UpdateParentIdAndZ(String parentId, Int32 z)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._InitializePanningHelperb__33_0ObjectEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;InitializePanningHelper&gt;b__33_0(Object &lt;sender&gt;, EventArgs &lt;e&gt;)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._SetupEventSubscriptionsb__43_0BehaviorEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_0(BehaviorEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._SetupEventSubscriptionsb__43_1ActivationFocusChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_1(ActivationFocusChangedEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._SetupEventSubscriptionsb__43_2HasGazeChangedEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_2(HasGazeChangedEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._SetupEventSubscriptionsb__43_3PanEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_3(PanEventArgs args)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractor._SetupEventSubscriptionsb__43_4StepEventArgs">
            <summary>Sets the shim of WpfInteractor.&lt;SetupEventSubscriptions&gt;b__43_4(StepEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent">
            <summary>Shim type of Tobii.Interaction.Wpf.WpfInteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.#ctor(Tobii.Interaction.Wpf.WpfInteractorAgent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent.ConstructorStringWpfInteractorProviderOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorAgent.WpfInteractorAgent(String id, WpfInteractorProvider`1&lt;WpfInteractor&gt; provider)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1">
            <summary>Shim type of Tobii.Interaction.Wpf.WpfInteractorAgent`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.#ctor(Tobii.Interaction.Wpf.WpfInteractorAgent{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AddElementBoundsProviderIElementBoundsProvider">
            <summary>Sets the shim of WpfInteractorAgent`1.AddElementBoundsProvider(IElementBoundsProvider provider)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AddInteractorForFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorFor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AddInteractorsForFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorsFor(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AddInteractorsForIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorsFor(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.AddElementBoundsProviderIElementBoundsProvider">
            <summary>Sets the shim of WpfInteractorAgent`1.AddElementBoundsProvider(IElementBoundsProvider provider)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.AddInteractorForFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorFor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.AddInteractorsForFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorsFor(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.AddInteractorsForIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.AddInteractorsFor(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.DisableActivatableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.DisableActivatableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.DisableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.DisableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.EnableActivatableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.EnableActivatableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.EnableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.EnableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.FindElementString">
            <summary>Sets the shim of WpfInteractorAgent`1.FindElement(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.FindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.FindInteractorString">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.FindInteractorsFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractors(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.FindInteractorsIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractors(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.InvokeOnElementForInteractorAsyncOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tobii.Interaction.Wpf.WpfInteractorAgent{`0},System.String,System.Action{``0},System.Threading.Tasks.Task})">
            <summary>Sets the shim of WpfInteractorAgent`1.InvokeOnElementForInteractorAsync(String interactorId, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RegisterDefaultElementBoundsProviders">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterDefaultElementBoundsProviders()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RegisterDefaultElementEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterDefaultElementEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RegisterElementEventEffectStringIElementEventEffect">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterElementEventEffect(String eventName, IElementEventEffect effect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RegisterElementEventEffectsStringIElementEventEffectArray">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterElementEventEffects(String eventName, IElementEventEffect[] effects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RemoveInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RemoveInteractorsFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractors(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.RemoveInteractorsIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractors(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.Resume">
            <summary>Sets the shim of WpfInteractorAgent`1.Resume()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.SetEnableEventEffectStringBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.SetEnableEventEffect(String eventName, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.Suspend">
            <summary>Sets the shim of WpfInteractorAgent`1.Suspend()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentFindElementBoundsProviderType">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.FindElementBoundsProvider(Type elementType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentGetElementEventEffectsForEventString">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.GetElementEventEffectsForEvent(String eventName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentGetEnabledEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.GetEnabledEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentNotifyInteractorBoundWpfInteractor">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.NotifyInteractorBound(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentNotifyInteractorUnboundWpfInteractor">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.NotifyInteractorUnbound(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentXamlAddInteractorForFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgentXaml.AddInteractorFor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TobiiInteractionWpfIWpfInteractorAgentXamlFindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgentXaml.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.TryGetInteractorStringIInteractorOut">
            <summary>Sets the shim of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.UnregisterElementEventEffectStringIElementEventEffect">
            <summary>Sets the shim of WpfInteractorAgent`1.UnregisterElementEventEffect(String eventName, IElementEventEffect effect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.AllInstances.UpdateInteractorChildrenEventEffectsDependencyObjectDictionaryOfStringBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.UpdateInteractorChildrenEventEffects(DependencyObject obj, Dictionary`2&lt;String,Boolean&gt; eventEffectsEnabled)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.BeginInvokeOnDispatcherWithCheckOf1DispatcherFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of WpfInteractorAgent`1.BeginInvokeOnDispatcherWithCheck(Dispatcher dispatcher, Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.Bind(Tobii.Interaction.IInteractorAgent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.ConstructorStringWpfInteractorProviderOfT0">
            <summary>Sets the shim of WpfInteractorAgent`1.WpfInteractorAgent`1(String id, WpfInteractorProvider`1&lt;!0&gt; provider)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.DisableActivatableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.DisableActivatableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.DisableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.DisableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.DispatchWithCheckDispatcherAction">
            <summary>Sets the shim of WpfInteractorAgent`1.DispatchWithCheck(Dispatcher dispatcher, Action operation)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.DisposeBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.EnableActivatableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.EnableActivatableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.EnableEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.EnableEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.FindElementString">
            <summary>Sets the shim of WpfInteractorAgent`1.FindElement(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.FindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.FindInteractorString">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractor(String interactorId)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.FindInteractorsFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractors(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.FindInteractorsIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.FindInteractors(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.InvokeOnElementAsyncFrameworkElementAction">
            <summary>Sets the shim of WpfInteractorAgent`1.InvokeOnElementAsync(FrameworkElement element, Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.InvokeOnElementForInteractorAsyncOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Action{``0},System.Threading.Tasks.Task})">
            <summary>Sets the shim of WpfInteractorAgent`1.InvokeOnElementForInteractorAsync(String interactorId, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RegisterDefaultElementBoundsProviders">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterDefaultElementBoundsProviders()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RegisterDefaultElementEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterDefaultElementEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RegisterElementEventEffectStringIElementEventEffect">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterElementEventEffect(String eventName, IElementEventEffect effect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RegisterElementEventEffectsStringIElementEventEffectArray">
            <summary>Sets the shim of WpfInteractorAgent`1.RegisterElementEventEffects(String eventName, IElementEventEffect[] effects)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RemoveInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RemoveInteractorsFrameworkElementArray">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractors(FrameworkElement[] elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.RemoveInteractorsIEnumerableOfFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.RemoveInteractors(IEnumerable`1&lt;FrameworkElement&gt; elements)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.Resume">
            <summary>Sets the shim of WpfInteractorAgent`1.Resume()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.SetEnableEventEffectStringBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.SetEnableEventEffect(String eventName, Boolean enabled)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.Suspend">
            <summary>Sets the shim of WpfInteractorAgent`1.Suspend()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentFindElementBoundsProviderType">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.FindElementBoundsProvider(Type elementType)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentGetElementEventEffectsForEventString">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.GetElementEventEffectsForEvent(String eventName)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentGetEnabledEventEffects">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.GetEnabledEventEffects()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentNotifyInteractorBoundWpfInteractor">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.NotifyInteractorBound(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentNotifyInteractorUnboundWpfInteractor">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgent.NotifyInteractorUnbound(WpfInteractor interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentXamlAddInteractorForFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgentXaml.AddInteractorFor(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TobiiInteractionWpfIWpfInteractorAgentXamlFindInteractorFrameworkElement">
            <summary>Sets the shim of WpfInteractorAgent`1.Tobii.Interaction.Wpf.IWpfInteractorAgentXaml.FindInteractor(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TryCatchWithTaskCompletionSourceOf1FuncOfM0TaskCompletionSourceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0},System.Threading.Tasks.TaskCompletionSource{``0}})">
            <summary>Sets the shim of WpfInteractorAgent`1.TryCatchWithTaskCompletionSource(Func`1&lt;!!0&gt; operation, TaskCompletionSource`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.TryGetInteractorStringIInteractorOut">
            <summary>Sets the shim of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.UnregisterElementEventEffectStringIElementEventEffect">
            <summary>Sets the shim of WpfInteractorAgent`1.UnregisterElementEventEffect(String eventName, IElementEventEffect effect)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorAgent`1.UpdateInteractorChildrenEventEffectsDependencyObjectDictionaryOfStringBoolean">
            <summary>Sets the shim of WpfInteractorAgent`1.UpdateInteractorChildrenEventEffects(DependencyObject obj, Dictionary`2&lt;String,Boolean&gt; eventEffectsEnabled)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions">
            <summary>Shim type of Tobii.Interaction.Wpf.WpfInteractorExtensions</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.DisableActivatableEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.DisableActivatableEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.DisableEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.DisableEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.DisablePanEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.DisablePanEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.EnableActivatableEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.EnableActivatableEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.EnableEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.EnableEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.ShimWpfInteractorExtensions.EnablePanEventEffectsIEnumerableOfWpfInteractor">
            <summary>Sets the shim of WpfInteractorExtensions.EnablePanEventEffects(IEnumerable`1&lt;WpfInteractor&gt; interactors)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableButtonClickEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableButtonClickEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.OnEvent(System.Windows.Controls.Primitives.ButtonBase,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableButtonClickEffect.OnEvent(ButtonBase element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableButtonClickEffect.OnEventButtonBaseBehaviorEventArgs">
            <summary>Sets the stub of ActivatableButtonClickEffect.OnEvent(ButtonBase element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableComboBoxDropDownEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableComboBoxDropDownEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.OnEvent(System.Windows.Controls.ComboBox,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableComboBoxDropDownEffect.OnEvent(ComboBox element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableComboBoxDropDownEffect.OnEventComboBoxBehaviorEventArgs">
            <summary>Sets the stub of ActivatableComboBoxDropDownEffect.OnEvent(ComboBox element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableExpanderToggleEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableExpanderToggleEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.OnEvent(System.Windows.Controls.Expander,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableExpanderToggleEffect.OnEvent(Expander element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableExpanderToggleEffect.OnEventExpanderBehaviorEventArgs">
            <summary>Sets the stub of ActivatableExpanderToggleEffect.OnEvent(Expander element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableListBoxItemSelectEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableListBoxItemSelectEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.OnEvent(System.Windows.Controls.ListBoxItem,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableListBoxItemSelectEffect.OnEvent(ListBoxItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableListBoxItemSelectEffect.OnEventListBoxItemBehaviorEventArgs">
            <summary>Sets the stub of ActivatableListBoxItemSelectEffect.OnEvent(ListBoxItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableMenuItemClickEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableMenuItemClickEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.OnEvent(System.Windows.Controls.MenuItem,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableMenuItemClickEffect.OnEvent(MenuItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableMenuItemClickEffect.OnEventMenuItemBehaviorEventArgs">
            <summary>Sets the stub of ActivatableMenuItemClickEffect.OnEvent(MenuItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatableTabItemSelectEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.InitializeStub">
            <summary>Initializes a new instance of type StubActivatableTabItemSelectEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.OnEvent(System.Windows.Controls.TabItem,Tobii.Interaction.BehaviorEventArgs)">
            <summary>Sets the stub of ActivatableTabItemSelectEffect.OnEvent(TabItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivatableTabItemSelectEffect.OnEventTabItemBehaviorEventArgs">
            <summary>Sets the stub of ActivatableTabItemSelectEffect.OnEvent(TabItem element, BehaviorEventArgs args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivatedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs.#ctor(Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActivatedArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivatedArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivationFocusChangedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs.#ctor(Tobii.Interaction.Wpf.WpfInteractor,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActivationFocusChangedArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivationFocusChangedRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.#ctor(System.Boolean,System.Boolean,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActivationFocusChangedRoutedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.InvokeEventHandlerDelegateObject">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.OnSetSource(System.Object)">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivationFocusChangedRoutedEventArgs.OnSetSourceObject">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.ActivationRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.#ctor(Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActivationRoutedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.InvokeEventHandlerDelegateObject">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.OnSetSource(System.Object)">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubActivationRoutedEventArgs.OnSetSourceObject">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters">
            <summary>Stub type of Tobii.Interaction.Wpf.BehaviorCommandParameters</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters.#ctor(Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters.InitializeStub">
            <summary>Initializes a new instance of type StubBehaviorCommandParameters</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubBehaviorCommandParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1">
            <summary>Stub type of Tobii.Interaction.Wpf.ElementBoundsProviderBase`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubElementBoundsProviderBase</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.TryGetBounds(`0)">
            <summary>Sets the stub of ElementBoundsProviderBase`1.TryGetBounds(!0 element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubElementBoundsProviderBase`1.TryGetBoundsT0">
            <summary>Sets the stub of ElementBoundsProviderBase`1.TryGetBounds(!0 element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1">
            <summary>Stub type of Tobii.Interaction.Wpf.ElementEventEffect`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`1.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`1.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.InitializeStub">
            <summary>Initializes a new instance of type StubElementEventEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.OnEvent(System.Windows.FrameworkElement,`0)">
            <summary>Sets the stub of ElementEventEffect`1.OnEvent(FrameworkElement element, !0 args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`1.OnEventFrameworkElementT0">
            <summary>Sets the stub of ElementEventEffect`1.OnEvent(FrameworkElement element, !0 args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2">
            <summary>Stub type of Tobii.Interaction.Wpf.ElementEventEffect`2</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.CanHandleElement(System.Windows.FrameworkElement)">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.CanHandleElementFrameworkElement">
            <summary>Sets the stub of ElementEventEffect`2.CanHandleElement(FrameworkElement element)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.InitializeStub">
            <summary>Initializes a new instance of type StubElementEventEffect</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.OnEvent(`0,`1)">
            <summary>Sets the stub of ElementEventEffect`2.OnEvent(!0 element, !1 args)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubElementEventEffect`2.OnEventT0T1">
            <summary>Sets the stub of ElementEventEffect`2.OnEvent(!0 element, !1 args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider">
            <summary>Stub type of Tobii.Interaction.Wpf.ExpanderBoundsProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.InitializeStub">
            <summary>Initializes a new instance of type StubExpanderBoundsProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.TryGetBounds(System.Windows.Controls.Expander)">
            <summary>Sets the stub of ExpanderBoundsProvider.TryGetBounds(Expander element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubExpanderBoundsProvider.TryGetBoundsExpander">
            <summary>Sets the stub of ExpanderBoundsProvider.TryGetBounds(Expander element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider">
            <summary>Stub type of Tobii.Interaction.Wpf.FrameworkElementBoundsProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.InitializeStub">
            <summary>Initializes a new instance of type StubFrameworkElementBoundsProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.TryGetBounds(System.Windows.FrameworkElement)">
            <summary>Sets the stub of FrameworkElementBoundsProvider.TryGetBounds(FrameworkElement element)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementBoundsProvider.TryGetBoundsFrameworkElement">
            <summary>Sets the stub of FrameworkElementBoundsProvider.TryGetBounds(FrameworkElement element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.FrameworkElementEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs.#ctor(System.Windows.FrameworkElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFrameworkElementEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubFrameworkElementEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.HasGazeChangedArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs.#ctor(System.Boolean,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs.InitializeStub">
            <summary>Initializes a new instance of type StubHasGazeChangedArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.HasGazeChangedRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.#ctor(System.Boolean,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubHasGazeChangedRoutedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.InvokeEventHandlerDelegateObject">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.OnSetSource(System.Object)">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubHasGazeChangedRoutedEventArgs.OnSetSourceObject">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider">
            <summary>Stub type of Tobii.Interaction.Wpf.IElementBoundsProvider</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.#ctor">
            <summary>Initializes a new instance of type StubIElementBoundsProvider</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.Tobii#Interaction#Wpf#IElementBoundsProvider#ElementType">
            <summary>Sets the stub of IElementBoundsProvider.get_ElementType()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.ElementTypeGet">
            <summary>Sets the stub of IElementBoundsProvider.get_ElementType()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.GetBoundsFrameworkElement">
            <summary>Sets the stub of IElementBoundsProvider.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.Tobii#Interaction#Wpf#IElementBoundsProvider#Precedense">
            <summary>Sets the stub of IElementBoundsProvider.get_Precedense()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.PrecedenseGet">
            <summary>Sets the stub of IElementBoundsProvider.get_Precedense()</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubIElementBoundsProvider.Tobii#Interaction#Wpf#IElementBoundsProvider#GetBounds(System.Windows.FrameworkElement)">
            <summary>Sets the stub of IElementBoundsProvider.GetBounds(FrameworkElement element)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubIElementEventEffect">
            <summary>Stub type of Tobii.Interaction.Wpf.IElementEventEffect</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubIElementEventEffect.#ctor">
            <summary>Initializes a new instance of type StubIElementEventEffect</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubIElementEventEffect.OnEventFrameworkElementObject">
            <summary>Sets the stub of IElementEventEffect.OnEvent(FrameworkElement element, Object args)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubIElementEventEffect.Tobii#Interaction#Wpf#IElementEventEffect#OnEvent(System.Windows.FrameworkElement,System.Object)">
            <summary>Sets the stub of IElementEventEffect.OnEvent(FrameworkElement element, Object args)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubPanArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.PanArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanArgs.#ctor(System.Double,System.Double,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanArgs.InitializeStub">
            <summary>Initializes a new instance of type StubPanArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.PanRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.#ctor(System.Double,System.Double,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubPanRoutedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.InvokeEventHandlerDelegateObject">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.OnSetSource(System.Object)">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubPanRoutedEventArgs.OnSetSourceObject">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubStepArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.StepArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepArgs.#ctor(System.Double,System.Double,System.Double,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStepArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs">
            <summary>Stub type of Tobii.Interaction.Wpf.StepRoutedEventArgs</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.#ctor(System.Double,System.Double,System.Double,Tobii.Interaction.Wpf.WpfInteractor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStepRoutedEventArgs</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.InvokeEventHandlerDelegateObject">
            <summary>Sets the stub of RoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.OnSetSource(System.Object)">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubStepRoutedEventArgs.OnSetSourceObject">
            <summary>Sets the stub of RoutedEventArgs.OnSetSource(Object source)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor">
            <summary>Stub type of Tobii.Interaction.Wpf.WpfInteractor</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.#ctor(System.Windows.FrameworkElement,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.AddBehavior(Tobii.Interaction.IBehavior)">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.AddBehaviorIBehavior">
            <summary>Sets the stub of Interactor.AddBehavior(IBehavior behavior)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.Behaviors">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.BehaviorsGet">
            <summary>Sets the stub of Interactor.get_Behaviors()</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.GetAdditionalChecksumData">
            <summary>Sets the stub of WpfInteractor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.GetAdditionalChecksumData01">
            <summary>Sets the stub of WpfInteractor.GetAdditionalChecksumData()</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.GetBounds">
            <summary>Sets the stub of WpfInteractor.GetBounds()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.GetBounds01">
            <summary>Sets the stub of WpfInteractor.GetBounds()</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorBase.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.InitializeStub">
            <summary>Initializes a new instance of type StubWpfInteractor</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.InvokeOnDomainThread(System.Action)">
            <summary>Sets the stub of WpfInteractor.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.InvokeOnDomainThreadAction">
            <summary>Sets the stub of WpfInteractor.InvokeOnDomainThread(Action action)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.PopulateSnapshotInteractor(Tobii.Interaction.Model.Interactor)">
            <summary>Sets the stub of WpfInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.PopulateSnapshotInteractorInteractor">
            <summary>Sets the stub of WpfInteractor.PopulateSnapshotInteractor(Interactor targetInteractor)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.RemoveBehavior(Tobii.Interaction.Framework.BehaviorType)">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.RemoveBehaviorBehaviorType">
            <summary>Sets the stub of Interactor.RemoveBehavior(BehaviorType behaviorType)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.TryGetBehavior(Tobii.Interaction.Framework.BehaviorType,Tobii.Interaction.IBehavior@)">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractor.TryGetBehaviorBehaviorTypeIBehaviorOut">
            <summary>Sets the stub of Interactor.TryGetBehavior(BehaviorType behaviorType, IBehavior&amp; behavior)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent">
            <summary>Stub type of Tobii.Interaction.Wpf.WpfInteractorAgent</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.#ctor(System.String,Tobii.Interaction.WpfInteractorProvider{Tobii.Interaction.Wpf.WpfInteractor})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubWpfInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.Dispose(System.Boolean)">
            <summary>Sets the stub of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.DisposeBoolean">
            <summary>Sets the stub of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.InitializeStub">
            <summary>Initializes a new instance of type StubWpfInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="T:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1">
            <summary>Stub type of Tobii.Interaction.Wpf.WpfInteractorAgent`1</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.#ctor(System.String,Tobii.Interaction.WpfInteractorProvider{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.AttachBackingFieldToSnapshotsSuspended">
            <summary>Attaches delegates to emulate StubWpfInteractorAgent.SnapshotsSuspended as a property with a backing field.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.Dispose(System.Boolean)">
            <summary>Sets the stub of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.DisposeBoolean">
            <summary>Sets the stub of WpfInteractorAgent`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.FindInteractorsAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.FindInteractorsAsyncQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.FindInteractorsAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.HandleEvent(Tobii.Interaction.Model.InteractionEvent)">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.HandleEventInteractionEvent">
            <summary>Sets the stub of InteractorAgent.HandleEvent(InteractionEvent interactionEvent)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.InitializeStub">
            <summary>Initializes a new instance of type StubWpfInteractorAgent</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.PopulateSnapshotAsync(Tobii.Interaction.Model.Snapshot,Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.PopulateSnapshotAsyncSnapshotQueryCancellationToken">
            <summary>Sets the stub of ProviderInteractorAgent`1.PopulateSnapshotAsync(Snapshot snapshot, Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.PreviewHandleQueryAsync(Tobii.Interaction.Model.Query,System.Threading.CancellationToken)">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.PreviewHandleQueryAsyncQueryCancellationToken">
            <summary>Sets the stub of InteractorAgent.PreviewHandleQueryAsync(Query query, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.SnapshotsSuspended">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.SnapshotsSuspendedGet">
            <summary>Sets the stub of InteractorAgent.get_SnapshotsSuspended()</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.SnapshotsSuspendedSetBoolean">
            <summary>Sets the stub of InteractorAgent.set_SnapshotsSuspended(Boolean value)</summary>
        </member>
        <member name="M:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.TryGetInteractor(System.String,Tobii.Interaction.IInteractor@)">
            <summary>Sets the stub of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
        <member name="F:Tobii.Interaction.Wpf.Fakes.StubWpfInteractorAgent`1.TryGetInteractorStringIInteractorOut">
            <summary>Sets the stub of WpfInteractorAgent`1.TryGetInteractor(String id, IInteractor&amp; interactor)</summary>
        </member>
    </members>
</doc>
